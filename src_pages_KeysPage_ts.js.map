{"version":3,"sources":["webpack://gamelib/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://gamelib/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://gamelib/./src/pages/KeysPage.ts"],"names":["KeysPage","listeningEvent","state","parent","updateKey","bind","base","router","getData","actions","keyMap","header","document","createElement","innerText","appendChild","container","classList","add","key","btn","id","replace","addEventListener","setListeningEvent","append","home","href","requestTransition","event","querySelectorAll","forEach","it","remove","getElementById","removeEventListener","persistence","stopPropagation","previous","preventDefault","Object","values","action","remapControl"],"mappings":"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","file":"src_pages_KeysPage_ts.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import { BasePersistedData } from \"../core/data/BasePersistedData\";\nimport { GlobalState } from \"../core/menus/GlobalState\";\nimport { Page } from \"../core/menus/Page\";\nimport { Router } from \"../core/menus/Router\";\n\nexport class KeysPage implements Page<GlobalState<BasePersistedData>> {\n  private listeningEvent: string;\n  private state: GlobalState<BasePersistedData>;\n  private parent: HTMLElement;\n\n  constructor() {\n    this.updateKey = this.updateKey.bind(this);\n  }\n\n  load(\n    base: HTMLElement,\n    router: Router<GlobalState<BasePersistedData>>,\n    state: GlobalState<BasePersistedData>\n  ): void {\n    this.state = state;\n    this.parent = base;\n    const { actions, keyMap } = state.getData();\n    const header = document.createElement(\"h1\");\n    header.innerText = \"Key Configuration\";\n    base.appendChild(header);\n\n    const container = document.createElement(\"div\");\n    container.classList.add(\"btn-container\");\n\n    for (const key of actions) {\n      const btn = document.createElement(\"button\");\n      btn.id = key;\n      btn.innerText = `${key.replace(/([a-z](?=[A-Z]))/g, \"$1 \")} (${\n        keyMap[key]\n      })`; // CamelCase -> Camel Case\n      btn.addEventListener(\"click\", () => {\n        this.setListeningEvent(state, key);\n      });\n      container.appendChild(btn);\n    }\n\n    base.append(container);\n    const home = document.createElement(\"a\");\n    home.href = \"#\";\n    home.addEventListener(\"click\", () => {\n      state.router.requestTransition(\"home\");\n    });\n    home.innerText = \"Back\";\n    base.appendChild(home);\n  }\n\n  init(): void {\n    this.parent.addEventListener(\"keydown\", this.updateKey);\n    return;\n  }\n\n  canTransition(): boolean {\n    return true;\n  }\n\n  setListeningEvent(\n    state: GlobalState<BasePersistedData>,\n    event: string\n  ): void {\n    document\n      .querySelectorAll(\"button\")\n      .forEach((it) => it.classList.remove(\"waiting\"));\n    this.listeningEvent = event;\n    const btn = document.getElementById(event);\n    btn.classList.add(\"waiting\");\n    btn.innerText = \"Waiting for keypress...\";\n  }\n\n  cleanup(): void {\n    document.removeEventListener(\"keydown\", this.updateKey);\n  }\n\n  updateKey(event: KeyboardEvent): void {\n    const persistence = this.state.getData();\n    const { keyMap } = persistence;\n    if (event.key == \"Escape\") {\n      event.stopPropagation();\n      if (this.listeningEvent === \"\") {\n        this.state.router.previous(this.state);\n        return;\n      }\n      document.querySelectorAll(\"button\").forEach((btn) => {\n        btn.innerText = `${btn.id.replace(/([a-z](?=[A-Z]))/g, \"$1 \")} (${\n          keyMap[btn.id]\n        })`; // CamelCase -> Camel Case\n        btn.classList.remove(\"waiting\");\n      });\n      this.listeningEvent = \"\";\n      return;\n    }\n    if (this.listeningEvent && this.listeningEvent !== \"\") {\n      event.preventDefault();\n      if (\n        event.key in Object.values(keyMap) &&\n        keyMap[this.listeningEvent] !== event.key\n      ) {\n        return;\n      }\n      const action = this.listeningEvent;\n      this.state.remapControl(action, event.key);\n      const btn = document.getElementById(action);\n      btn.innerText = `${action.replace(/([a-z](?=[A-Z]))/g, \"$1 \")} (${\n        keyMap[action]\n      })`; // CamelCase -> Camel Case\n      this.listeningEvent = \"\";\n      btn.classList.remove(\"waiting\");\n    }\n  }\n}\n"],"sourceRoot":""}