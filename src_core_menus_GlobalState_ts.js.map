{"version":3,"sources":["webpack://gamelib/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://gamelib/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://gamelib/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://gamelib/./src/core/data/Persistence.ts","webpack://gamelib/./src/core/menus/GlobalState.ts","webpack://gamelib/./src/core/menus/Router.ts"],"names":["PersistenceManager","name","initializer","typeGuard","state","localStorage","getItem","getDefault","val","JSON","parse","console","log","warn","res","Object","assign","initState","put","value","setItem","stringify","BaseGlobalState","defaultData","router","persistence","data","SimpleRouter","get","score","scores","push","sort","a","b","reverse","slice","action","key","keyMap","_currentPage","undefined","_transitionData","_pages","_history","requestTransition","_requestTransition","id","page","fn","purge","canTransition","pages","el","document","getElementById","innerHTML","classList","forEach","it","remove","add","load","init","bind","prev","cleanup","splice"],"mappings":"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","file":"src_core_menus_GlobalState_ts.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export class PersistenceManager<T, R> {\n  private initializer: (state: T) => R;\n  private typeGuard: (obj: unknown) => boolean;\n  private name: string;\n\n  constructor(\n    name: string,\n    initializer: (state: T) => R,\n    typeGuard?: (obj: unknown) => boolean\n  ) {\n    this.initializer = initializer;\n    this.typeGuard = typeGuard;\n    this.name = name;\n  }\n\n  get(state: T): R {\n    if (localStorage.getItem(this.name) === null) {\n      return this.getDefault(state);\n    } else {\n      const val = JSON.parse(localStorage.getItem(this.name));\n      console.log(val);\n      if (this.typeGuard && !this.typeGuard(val)) {\n        console.warn(\n          `Found invalid shape of persistent data ${this.name}, assigning to default.`\n        );\n        const res = Object.assign(this.getDefault(state), val);\n        console.log(res);\n        return res;\n      }\n      const res = Object.assign(this.getDefault(state), val);\n      console.log(res);\n      return res;\n    }\n  }\n\n  private getDefault(state: T): R {\n    const initState = this.initializer(state) as R;\n    this.put(initState);\n    return initState;\n  }\n\n  put(value: R): void {\n    localStorage.setItem(this.name, JSON.stringify(value));\n  }\n}\n","import { BasePersistedData, Score } from \"../data/BasePersistedData\";\nimport { PersistenceManager } from \"../data/Persistence\";\nimport { SimpleRouter } from \"./Router\";\n\nexport interface GlobalState<T extends BasePersistedData> {\n  router: SimpleRouter<GlobalState<T>>;\n  persistence: PersistenceManager<GlobalState<T>, BasePersistedData>;\n  addScore(score: Score): void;\n  remapControl(action: string, key: string): void;\n  getData(): T;\n  setData(data: T): void;\n}\n\nexport class BaseGlobalState<T extends BasePersistedData>\n  implements GlobalState<T> {\n  public router: SimpleRouter<GlobalState<T>>;\n  public persistence: PersistenceManager<GlobalState<T>, BasePersistedData>;\n  private data: T;\n\n  constructor(name: string, defaultData: T) {\n    this.router = new SimpleRouter<GlobalState<T>>(this);\n    this.persistence = new PersistenceManager<GlobalState<T>, T>(\n      name,\n      () => defaultData\n    );\n    this.data = this.persistence.get(this) as T;\n    this.persistence.put(this.data);\n  }\n\n  public addScore(score: Score): void {\n    this.data.scores.push(score);\n    this.data.scores.sort((a, b) => a.score - b.score).reverse();\n    this.data.scores = this.data.scores.slice(0, 5);\n    this.persistence.put(this.data);\n  }\n\n  public remapControl(action: string, key: string): void {\n    this.data.keyMap[action] = key;\n    this.persistence.put(this.data);\n  }\n\n  public getData(): T {\n    return { ...this.data };\n  }\n\n  public setData(data: T): void {\n    this.data = data;\n    this.persistence.put(data);\n  }\n}\n","import { Page } from \"./Page\";\n\nexport interface Router<T> {\n  pages: Record<string, Page<T>>;\n  currentPage: Page<T>;\n  transitionData: Record<string, unknown>;\n  requestTransition(\n    id: string,\n    purge?: boolean,\n    data?: Record<string, unknown>\n  ): void;\n  previous(state: T): void;\n}\n\nexport class SimpleRouter<T> implements Router<T> {\n  private _currentPage: Page<T> = undefined as Page<T>;\n  private _transitionData: Record<string, unknown> = {};\n  private _pages: Record<string, Page<T>> = {};\n  private _history: Array<string> = [];\n  requestTransition: (\n    id: string,\n    purge?: boolean,\n    data?: Record<string, unknown>\n  ) => void;\n\n  constructor(state: T) {\n    this.requestTransition = this._requestTransition(state);\n  }\n\n  public addPage(id: string, page: Page<T>): void {\n    if (!(id in this._pages)) {\n      this._pages[id] = page;\n    } else {\n      console.warn(`Trying to register duplicate page ${id}!`);\n    }\n  }\n\n  public get transitionData(): Record<string, unknown> {\n    return this._transitionData;\n  }\n\n  public get pages(): Record<string, Page<T>> {\n    return this._pages;\n  }\n\n  public get currentPage(): Page<T> {\n    return this._currentPage;\n  }\n\n  private _requestTransition(state: T) {\n    let fn = function (\n      id: string,\n      purge = false,\n      data?: Record<string, unknown>\n    ) {\n      console.log(`[ROUTER] Moving to ${id}`);\n      if (this._pages[id] === undefined || this._pages[id] === null) {\n        return;\n      }\n      if (\n        this._currentPage === undefined ||\n        this._currentPage.canTransition(this, id)\n      ) {\n        if (purge) {\n          this._history = [];\n        }\n        this._history.push(id);\n        this._currentPage = this.pages[id];\n        this._transitionData = data;\n        const el = document.getElementById(\"main\");\n        el.innerHTML = \"\";\n        el.classList.forEach((it) => el.classList.remove(it));\n        el.classList.add(id);\n        this._currentPage.load(el, this, state);\n        this._currentPage.init(this, state);\n      }\n    };\n    fn = fn.bind(this);\n    return fn;\n  }\n\n  previous(state: T): void {\n    const prev = this._history.slice(-2)[0];\n    if (prev !== undefined) {\n      this._currentPage.cleanup(this, state);\n      this._history.splice(-2, 2);\n      this.requestTransition(prev, false);\n    }\n  }\n}\n"],"sourceRoot":""}