{"version":3,"sources":["webpack://gamelib/./src/content/GameModel.ts","webpack://gamelib/./src/content/GameUI.ts","webpack://gamelib/./src/content/GlobalUtil.ts","webpack://gamelib/./src/content/PathChecker.ts","webpack://gamelib/./src/content/components/BaseComponent.ts","webpack://gamelib/./src/content/components/Creep.ts","webpack://gamelib/./src/content/components/Damage.ts","webpack://gamelib/./src/content/components/DamageTarget.ts","webpack://gamelib/./src/content/components/SplashDamage.ts","webpack://gamelib/./src/content/components/Weapon.ts","webpack://gamelib/./src/content/creeps/CreepManager.ts","webpack://gamelib/./src/content/creeps/Fast.ts","webpack://gamelib/./src/content/creeps/Flying.ts","webpack://gamelib/./src/content/creeps/Normal.ts","webpack://gamelib/./src/content/particles/Blood.ts","webpack://gamelib/./src/content/prefabs/Bullet.ts","webpack://gamelib/./src/content/prefabs/Rocket.ts","webpack://gamelib/./src/content/prefabs/SwarmMissile.ts","webpack://gamelib/./src/content/systems/BaseRenderSystem.ts","webpack://gamelib/./src/content/systems/DamageTargetSystem.ts","webpack://gamelib/./src/content/systems/SplashDamageSystem.ts","webpack://gamelib/./src/content/systems/WeaponSystem.ts","webpack://gamelib/./src/content/towers/MinigunTower.ts","webpack://gamelib/./src/content/towers/MissileTower.ts","webpack://gamelib/./src/content/towers/SniperTower.ts","webpack://gamelib/./src/content/towers/SwarmerTower.ts","webpack://gamelib/./src/content/towers/TowerManager.ts","webpack://gamelib/./src/content/types/ProjectileType.ts","webpack://gamelib/./src/core/Random.ts","webpack://gamelib/./src/core/SoundEffect.ts","webpack://gamelib/./src/core/SoundEffectPool.ts","webpack://gamelib/./src/core/components/behavior/Draggable.ts","webpack://gamelib/./src/core/components/behavior/Lifetime.ts","webpack://gamelib/./src/core/components/behavior/Magnet.ts","webpack://gamelib/./src/core/components/behavior/PathFollower.ts","webpack://gamelib/./src/core/components/behavior/PositionTarget.ts","webpack://gamelib/./src/core/components/behavior/RotationTarget.ts","webpack://gamelib/./src/core/components/behavior/Spawner.ts","webpack://gamelib/./src/core/components/behavior/Stack.ts","webpack://gamelib/./src/core/components/behavior/Upgrade.ts","webpack://gamelib/./src/core/components/behavior/click/AbstractClick.ts","webpack://gamelib/./src/core/components/behavior/click/ClickComponentAdd.ts","webpack://gamelib/./src/core/components/behavior/click/ClickComponentToggle.ts","webpack://gamelib/./src/core/components/behavior/click/ClickComponentToggleMultiple.ts","webpack://gamelib/./src/core/components/behavior/click/ClickDataMutate.ts","webpack://gamelib/./src/core/components/behavior/click/Clickable.ts","webpack://gamelib/./src/core/components/data/Acceleration.ts","webpack://gamelib/./src/core/components/data/Footprint.ts","webpack://gamelib/./src/core/components/data/Health.ts","webpack://gamelib/./src/core/components/data/Name.ts","webpack://gamelib/./src/core/components/data/Position.ts","webpack://gamelib/./src/core/components/data/Range.ts","webpack://gamelib/./src/core/components/data/Rotation.ts","webpack://gamelib/./src/core/components/data/Value.ts","webpack://gamelib/./src/core/components/data/Velocity.ts","webpack://gamelib/./src/core/components/marker/HealthDisplay.ts","webpack://gamelib/./src/core/components/marker/MagnetAttracted.ts","webpack://gamelib/./src/core/components/marker/Selected.ts","webpack://gamelib/./src/core/components/marker/Sellable.ts","webpack://gamelib/./src/core/components/rendering/AnimatedSprite.ts","webpack://gamelib/./src/core/components/rendering/LifetimeRender.ts","webpack://gamelib/./src/core/components/rendering/LowSprite.ts","webpack://gamelib/./src/core/components/rendering/PositionDebug.ts","webpack://gamelib/./src/core/components/rendering/RangeDisplay.ts","webpack://gamelib/./src/core/components/rendering/RotationDebug.ts","webpack://gamelib/./src/core/components/rendering/SelectionDisplay.ts","webpack://gamelib/./src/core/components/rendering/Sprite.ts","webpack://gamelib/./src/core/components/ui/ClickableDisplay.ts","webpack://gamelib/./src/core/components/ui/RegionRender.ts","webpack://gamelib/./src/core/components/ui/TextRender.ts","webpack://gamelib/./src/core/data/ActionMap.ts","webpack://gamelib/./src/core/data/BaseGameModel.ts","webpack://gamelib/./src/core/data/DynamicConstant.ts","webpack://gamelib/./src/core/data/GameMap.ts","webpack://gamelib/./src/core/data/Pathfinder.ts","webpack://gamelib/./src/core/ecs/Component.ts","webpack://gamelib/./src/core/ecs/ECSManager.ts","webpack://gamelib/./src/core/ecs/Entity.ts","webpack://gamelib/./src/core/ecs/System.ts","webpack://gamelib/./src/core/ecs/decorators/AutoName.ts","webpack://gamelib/./src/core/ecs/decorators/Basis.ts","webpack://gamelib/./src/core/ecs/decorators/Required.ts","webpack://gamelib/./src/core/geometry/Circle.ts","webpack://gamelib/./src/core/geometry/Collision.ts","webpack://gamelib/./src/core/geometry/Direction.ts","webpack://gamelib/./src/core/geometry/Vector2.ts","webpack://gamelib/./src/core/input/KeyboardInput.ts","webpack://gamelib/./src/core/input/MouseInput.ts","webpack://gamelib/./src/core/prefabs/SmokeParticle.ts","webpack://gamelib/./src/core/rendering/ParticleManager.ts","webpack://gamelib/./src/core/rendering/Texture.ts","webpack://gamelib/./src/core/rendering/VirtualCanvas.ts","webpack://gamelib/./src/core/rendering/VirtualCoordinate.ts","webpack://gamelib/./src/core/systems/AbstractClickSystem.ts","webpack://gamelib/./src/core/systems/AccelerationSystem.ts","webpack://gamelib/./src/core/systems/AnimatedSpriteRenderSystem.ts","webpack://gamelib/./src/core/systems/ClickComponentAddSystem.ts","webpack://gamelib/./src/core/systems/ClickComponentToggleMultipleSystem.ts","webpack://gamelib/./src/core/systems/ClickComponentToggleSystem.ts","webpack://gamelib/./src/core/systems/ClickDataMutationSystem.ts","webpack://gamelib/./src/core/systems/ClickableDisplaySystem.ts","webpack://gamelib/./src/core/systems/ClickableSystem.ts","webpack://gamelib/./src/core/systems/DraggableSystem.ts","webpack://gamelib/./src/core/systems/FootprintSystem.ts","webpack://gamelib/./src/core/systems/HealthDisplaySystem.ts","webpack://gamelib/./src/core/systems/HealthSystem.ts","webpack://gamelib/./src/core/systems/LifetimeRenderSystem.ts","webpack://gamelib/./src/core/systems/LifetimeSystem.ts","webpack://gamelib/./src/core/systems/LowSpriteRenderSystem.ts","webpack://gamelib/./src/core/systems/MagnetSystem.ts","webpack://gamelib/./src/core/systems/PathFollowerSystem.ts","webpack://gamelib/./src/core/systems/PositionDebugSystem.ts","webpack://gamelib/./src/core/systems/RangeDisplaySystem.ts","webpack://gamelib/./src/core/systems/RegionRenderSystem.ts","webpack://gamelib/./src/core/systems/RotationDebugSystem.ts","webpack://gamelib/./src/core/systems/RotationTargetSystem.ts","webpack://gamelib/./src/core/systems/SelectionRenderSystem.ts","webpack://gamelib/./src/core/systems/SpawnerSystem.ts","webpack://gamelib/./src/core/systems/SpriteRenderSystem.ts","webpack://gamelib/./src/core/systems/StackSystem.ts","webpack://gamelib/./src/core/systems/TextRenderSystem.ts","webpack://gamelib/./src/core/systems/VelocitySystem.ts","webpack://gamelib/./src/core/systems/VelocityTargetSystem.ts"],"names":["GameModel","Vector2","particleManager","unstructured","lives","money","wave","waveSet","persistence","_actionMap","eastWestPath","northSouthPath","actionQueue","mouseEntity","towerManager","pathChecker","floorTile","Texture","creepManager","activeTower","northSpawnerID","eastSpawnerID","score","arrow","getEastWestPath","getNorthSouthPath","first","audioLoop","SoundEffect","turretFireSound","SoundEffectPool","sellSound","creepDeathSound","creepEscapeSound","buildSound","persistedData","globalState","keyMap","ActionMap","initActions","TowerManager","ecs","PathChecker","_getEastWestPath","bind","_getNorthSouthPath","CreepManager","ParticleManager","initParticleEffects","mouse","addListener","handleClick","add","MinigunTower","MissileTower","SwarmerTower","SniperTower","listenEvent","evt","isAudioEnabled","play","extra","position","ent","createEntity","addComponent","PositionComponent","SpawnerComponent","producer","makeBlood","rate","elapsed","count","LifetimeComponent","lifetime","removeEntity","entity","running","entityMap","clear","stop","VelocityComponent","velocity","TextRenderComponent","text","style","northSpawner","getEntity","eastSpawner","data","northSpawnerData","spawner","northSprite","sprite","eastSpawnerData","eastSprite","total","limit","getEastWave","eastCount","eastEntity","getStatModifier","nextEast","size","console","log","getNorthWave","northCount","northEntity","nextNorth","nextWave","createAction","addEffectManager","east","eid","RotationComponent","SpriteComponent","source","rotationOffset","clearListeners","keys","action","addKeyListener","down","invoke","Object","paused","timeScale","addHandler","attemptSell","sendWave","attemptUpgrade","clearMouseMode","setMouseMode","createUI","getPath","findNorthSouth","Set","findEastWest","createSpawner","y","x","LowSpriteComponent","i","createBlocker","createSystem","WeaponSystem","TurretBaseRenderSystem","virtualCanvas","DamageTargetSystem","SplashDamageSystem","interaction","leftDown","buildTower","coordinate","setSelection","id","_action","towerName","createDemoTower","getMousePosition","getSelection","hasComponent","SellableComponent","value","emitEvent","getDynamic","invalidateSelection","UpgradeComponent","targetEntity","upgrade","cost","merge","dataDelta","tower","canPlace","createTower","getTower","blockerID","floor","FootprintComponent","asImmutable","virtualSize","BaseGameModel","createUIText","align","el","createUIRegion","delta","clickable","RegionComponent","ClickableComponent","AbstractClickComponent","ClickableDisplayComponent","model","toFixed","tower1","actionMap","tower2","tower3","tower4","sel","val","name","health","weapon","canFire","projectileType","damage","tags","join","sellButton","upgradeButton","exitButton","audio","southEnd","eastEnd","blocked","compress","Pathfinder","getMap","Direction","getVirtualSize","TurretBase","AutoName","NO_TEXTURE","undefined","offset","ZERO","Component","TurretBaseComponent","Creep","CreepComponent","Damage","DamageComponent","DamageTarget","target","DamageTargetComponent","SplashDamage","radius","SplashDamageComponent","Weapon","projectile","barrelOffsets","barrel","fireStrictness","arcReached","ProjectileType","WeaponComponent","northNormalCreepGenerator","eastNormalCreepGenerator","northNormalPlusCreepGenerator","eastNormalPlusCreepGenerator","northFastCreepGenerator","eastFastCreepGenerator","northFlyingCreepGenerator","eastFlyingCreepGenerator","statModifier","_getStatModifier","makeNormalCreepProducer","makeFastCreepProducer","makeFlyingCreepProducer","waveType","Math","isNorthWave","isEastWave","path","parent","entityID","modifier","VelocityTargetComponent","RotationTargetComponent","turnRate","PathFollowerComponent","AnimatedSpriteComponent","frames","frameSize","HealthComponent","maxHealth","HealthDisplayComponent","NameComponent","manager","random","scale","ppos","rotation","LifetimeRenderComponent","tex","bullet","range","rotate","active","pos","speed","splashRadius","missile","makeSmokeTrail","swarmMissile","Basis","Required","deltaTime","spriteEntity","turretBase","footprint","drawImage","BaseSystem","listen","_","damageTarget","targets","fireTex","getEntitiesWithComponent","splashDamage","entityIdx","length","creep","PointRadiusPointCollision","intersection","createExplosion","rotVec","creeps","eventName","rotationTarget","checkInterval","best","bestInRange","creepInRange","creepIdx","isValidCreep","tagIntersection","pathFollower","point","creepPos","pointRadiusPointCollision","t2","t3","description","rotationRate","fireRate","levelSprites","upgrades","projectileSpawner","barrels","towerTextures","towers","Map","projectileSpawners","baseSprite","towerType","set","combineUpgrades","get","ceil","addConstant","RangeComponent","RangeDisplayComponent","ValueComponent","strictness","cloneDeep","slice","baseData","dataLayer","assign","dryRun","debug","checkCollision","collides","setEastWestPath","setNorthSouthPath","forEach","it","invalidated","nwOffset","northWest","swOffset","southEast","checkVector","hasEntityAt","DEFAULT","Random","rand","top","arr","shuffleArray","array","j","temp","cutoff","loop","start","onLoad","duration","ready","end","_playing","currentCutoffTimeout","currentLoopTimeout","currentDurationTimeout","Audio","addEventListener","min","getDuration","currentTime","setTimeout","playRec","clearTimeout","pause","poolSize","effect","pool","ids","baseEffect","push","nextId","splice","Draggable","dragging","lowerFirst","constructor","DraggableComponent","Lifetime","Magnet","onSnap","MagnetComponent","PathFollower","VelocityTarget","RotationTarget","Spawner","Stack","child","index","StackComponent","Upgrade","AbstractClick","ClickComponentAdd","component","SelectedComponent","ClickComponentAddComponent","ClickComponentToggle","ClickComponentToggleComponent","ClickComponentToggleMultiple","components","ClickComponentToggleMultipleComponent","ClickDataMutate","ClickDataMutateComponent","Clickable","thisClick","Acceleration","acceleration","AccelerationComponent","Footprint","tracked","Health","Name","Position","Range","Rotation","Value","Velocity","HealthDisplay","MagnetAttracted","MagnetAttractedComponent","Selected","Sellable","AnimatedSprite","NoTex","frame","currentDuration","opacity","LifetimeRender","LowSprite","DEFAULT_SIZE","PositionDebug","PositionDebugComponent","RangeDisplay","strokeStyle","fillStyle","lineWidth","RotationDebug","RotationDebugComponent","SelectionDisplay","SelectionDisplayComponent","Sprite","ClickableDisplay","background","backgroundHover","Region","fillColor","strokeColor","TextRender","font","Action","_name","handlers","handler","actions","serializeActions","serialize","has","warn","eventQueue","lastTime","parentElement","keySet","mouseAction","clicksPerFrame","actionSet","selection","firstLoad","ECSManager","VirtualCanvas","GameMap","KeyboardInput","MouseInput","getEntityIDsWithComponent","removeComponent","findCanvas","_deltaTime","update","element","install","performance","now","firstInit","initSystems","key","uninstall","ClickableSystem","ClickComponentAddSystem","ClickComponentToggleSystem","ClickComponentToggleMultipleSystem","ClickDataMutateSystem","AbstractClickSystem","HealthSystem","SpawnerSystem","LifetimeSystem","PathFollowerSystem","StackSystem","VelocityTargetSystem","RotationTargetSystem","MagnetSystem","DraggableSystem","FootprintSystem","AccelerationSystem","VelocitySystem","LowSpriteRenderSystem","LifetimeRenderSystem","RangeDisplaySystem","SpriteRenderSystem","AnimatedSpriteRenderSystem","HealthRenderSystem","RegionRenderSystem","TextRenderSystem","ClickableDisplaySystem","SelectionSystem","RotationDebugSystem","PositionDebugSystem","addSystems","time","updateInput","onUpdate","dc","minimum","maximum","positions","owners","entities","minimumBound","maximumBound","yScale","listener","vector","entityEvent","spaces","space","coord","getCoordinate","toString","loc","createEntityLink","results","dx","dy","neighborCoordinate","getEntityAt","v","PathNode","pathable","startingPosition","endingPositions","allowedDirections","nwBound","seBound","queue","newEndingPositions","newBlocked","visited","node","dir","error","JSON","stringify","isBlocked","fromPath","current","res","newSolution","prev","curr","next","prevDelta","subtract","normalize","newDelta","equals","initialData","defaultData","initialPoolSize","entityComponents","systems","interestedSystems","allSystems","systemOrder","availableIDs","events","listeners","allowReuse","Entity","event","quiet","e","system","sort","basis","getBasisComponent","getName","setManager","systemSet","resolveEntity","init","notify","componentName","elapsedTime","eventIdx","listenerIdx","orderIdx","DefaultManager","notification","checkBasis","isInterested","onManagerAwake","required","getRequiredComponents","excluded","getExcludedComponents","checkRequired","checkExcluded","requirement","exclusion","systemUpdate","values","updateEntity","onEvent","requireComponent","listenerNoCheck","_componentName","_entity","mode","basisComponent","prototype","Circle","center","_center","_radius","circleLineCollision","circle","pt1","pt2","v1","v2","b","c","d","sqrt","isNaN","u1","u2","circlePointCollision","point1","point2","rectPointCollision","nw1","se1","pt","rectRectCollision","nw2","se2","cardinal","NORTH","EAST","SOUTH","WEST","all","NORTHEAST","SOUTHEAST","SOUTHWEST","NORTHWEST","_x","_y","pow","magnitude","scalar","other","degrees","rad","PI","cos","sin","atan2","hasOwnProperty","call","angle","number","pos1","pos2","ONES","keyListeners","keyPushed","keyDown","keyUp","window","toLowerCase","removeEventListener","MouseState","isLeftMouseDown","isRightMouseDown","mouseCoordinate","coordinates","getCoordinates","getOffset","inverseTranslate","_evt","baseVelocity","vel","creators","mutators","renderers","particles","nextParticle","effectName","creator","renderer","mutator","state","create","particle","draw","ParticleEffect","texture","direction","elapsedLifetime","Image","src","naturalWidth","naturalHeight","canvas","context","aspectRatio","vcs","installed","document","createElement","initCanvas","appendChild","resize","getContext","width","height","line","getElementById","nodeName","textAlign","weight","splits","trim","split","translateValueY","adjustedPosition","translate","fillText","globalAlpha","adjustedSize","save","restore","adjustedRadius","translateValueX","beginPath","arc","fill","stroke","p1","p2","p1adj","p2adj","fillRect","strokeRect","lineTo","vec","clearRect","rect","getBoundingClientRect","clientWidth","clientHeight","VirtualCoordinateSystem","scaleX","scaleY","p","_event","abstractClick","addScaled","animatedSprite","drawImageAnimated","clickComponentAdd","clickComponentToggleMultiple","compIdx","comp","clickComponentToggle","cmp","clickDataMutate","clickableDisplay","drawRectangle","runCheck","getMouseAction","bestNW","bestSE","mouseAdj","offsetDelta","nw","se","draggable","map","proportion","southEast2","drawWorldRectangle","lowSprite","magnet","velocityTarget","md","idx","dist","checkRelativeThreshold","a","threshold","abs","rangeDisplay","drawCircle","region","vecTarget","relativeTarget","currentRotation","currentRotationVector","targetRotation","toAngle","rotationDirection","sign","determinant","desiredRotation","deltaRotation","selectionDisplay","spawn","handleAttach","handleDetach","handleSwap","indexOffset","originalParent","stack","parentPosition","parentStack","oldParent","textRender","drawText","relativePosition","perSecond"],"mappings":"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","file":"src_content_GameModel_ts.js","sourcesContent":["import {\n  PositionComponent,\n  PositionData,\n} from \"../core/components/data/Position\";\nimport { RotationComponent } from \"../core/components/data/Rotation\";\nimport { ActionMap, ImmutableActionMap } from \"../core/data/ActionMap\";\nimport { BaseGameModel } from \"../core/data/BaseGameModel\";\nimport Vector2 from \"../core/geometry/Vector2\";\nimport { ParticleManager } from \"../core/rendering/ParticleManager\";\nimport { Texture } from \"../core/rendering/Texture\";\nimport { WaveManifest } from \"./types/WaveManifest\";\nimport { PersistenceManager } from \"../core/data/Persistence\";\nimport { DEFAULT_PERSISTED_DATA, PersistedData } from \"./PersistedData\";\nimport { FootprintComponent } from \"../core/components/data/Footprint\";\nimport SpriteComponent, {\n  SpriteEntity,\n} from \"../core/components/rendering/Sprite\";\nimport { LifetimeComponent } from \"../core/components/behavior/Lifetime\";\nimport { Entity } from \"../core/ecs/Entity\";\nimport { DynamicConstant, getDynamic } from \"../core/data/DynamicConstant\";\nimport SellableComponent from \"../core/components/marker/Sellable\";\nimport { ValueEntity } from \"../core/components/data/Value\";\nimport { TurretBaseRenderSystem } from \"./systems/BaseRenderSystem\";\nimport { WeaponSystem } from \"./systems/WeaponSystem\";\nimport { MouseInteraction } from \"../core/input/MouseInput\";\nimport { DamageTargetSystem } from \"./systems/DamageTargetSystem\";\nimport { SplashDamageSystem } from \"./systems/SplashDamageSystem\";\nimport { MinigunTower } from \"./towers/MinigunTower\";\nimport { MissileTower } from \"./towers/MissileTower\";\nimport { SwarmerTower } from \"./towers/SwarmerTower\";\nimport { SniperTower } from \"./towers/SniperTower\";\nimport { createUI } from \"./GameUI\";\nimport UpgradeComponent, {\n  UpgradeEntity,\n} from \"../core/components/behavior/Upgrade\";\nimport { merge } from \"lodash\";\nimport SpawnerComponent, {\n  SpawnerEntity,\n} from \"../core/components/behavior/Spawner\";\nimport { makeBlood } from \"./particles/Blood\";\nimport { TowerManager } from \"./towers/TowerManager\";\nimport { GameMap } from \"../core/data/GameMap\";\nimport { PathChecker } from \"./PathChecker\";\nimport LowSpriteComponent from \"../core/components/rendering/LowSprite\";\nimport { CreepManager } from \"./creeps/CreepManager\";\nimport { globalState } from \"..\";\nimport { VelocityComponent } from \"../core/components/data/Velocity\";\nimport TextRenderComponent from \"../core/components/ui/TextRender\";\nimport { SoundEffect } from \"../core/SoundEffect\";\nimport { isAudioEnabled } from \"./GlobalUtil\";\nimport { SoundEffectPool } from \"../core/SoundEffectPool\";\n\nexport class GameModel extends BaseGameModel {\n  private particleManager: ParticleManager<GameModel>;\n  private unstructured: Map<string, unknown>;\n  public lives = 20;\n  public money = 30;\n  public wave: number;\n  public waveSet: Array<WaveManifest>;\n  public persistence: PersistenceManager<GameModel, PersistedData>;\n  private _actionMap: ActionMap;\n  private eastWestPath: Array<Vector2> = [];\n  private northSouthPath: Array<Vector2>;\n  private actionQueue: Array<string>;\n  private mouseEntity: Entity = null;\n  private towerManager: TowerManager;\n  private pathChecker: PathChecker;\n  private floorTile: Texture = new Texture(\"assets/FloorTile.png\");\n  private creepManager: CreepManager;\n  activeTower: string = null;\n  private northSpawnerID = -1;\n  private eastSpawnerID = -1;\n  public score = 0;\n  private arrow = new Texture(\"assets/Arrow.png\");\n  public getEastWestPath: () => Vector2[];\n  public getNorthSouthPath: () => Vector2[];\n  private first = true;\n  private audioLoop = new SoundEffect(\"assets/loop.mp3\", 147, true);\n  private turretFireSound = new SoundEffectPool(10, \"assets/gun.mp3\", 0.6, 2);\n  private sellSound = new SoundEffectPool(5, \"assets/sell.mp3\", 0, 3);\n  private creepDeathSound = new SoundEffectPool(5, \"assets/crunch.mp3\", 0, 1);\n  private creepEscapeSound = new SoundEffectPool(3, \"assets/escape.mp3\", 0, 1);\n  private buildSound = new SoundEffect(\"assets/construction.mp3\", 2);\n\n  constructor() {\n    super(new Vector2(40, 30));\n    const persistedData = globalState.persistence.get(this);\n\n    const { keyMap } = persistedData;\n    this._actionMap = new ActionMap();\n    this.initActions();\n    this.towerManager = new TowerManager(this, this.ecs);\n    this.pathChecker = new PathChecker(this);\n\n    this.getEastWestPath = this._getEastWestPath.bind(this);\n    this.getNorthSouthPath = this._getNorthSouthPath.bind(this);\n    this.creepManager = new CreepManager(this);\n\n    this.particleManager = new ParticleManager();\n    this.initParticleEffects();\n\n    this.mouse.addListener(this.handleClick.bind(this));\n\n    this.towerManager.add(\"tower-1\", MinigunTower);\n    this.towerManager.add(\"tower-2\", MissileTower);\n    this.towerManager.add(\"tower-3\", SwarmerTower);\n    this.towerManager.add(\"tower-4\", SniperTower);\n\n    this.ecs.listenEvent(\"weapon:fire\", (evt) => {\n      if (isAudioEnabled()) {\n        this.turretFireSound.play();\n      }\n    });\n\n    this.ecs.listenEvent(\"sellable:sell\", (evt) => {\n      const { extra } = evt;\n      const { position } = extra;\n      const ent = this.ecs.createEntity();\n      this.ecs.addComponent(ent, PositionComponent, {\n        position: (position as PositionData).position,\n      });\n      this.ecs.addComponent(ent, SpawnerComponent, {\n        producer: makeBlood,\n        rate: 10,\n        elapsed: 10,\n        count: 30,\n      });\n      this.ecs.addComponent(ent, LifetimeComponent, {\n        lifetime: 1.5,\n      });\n      if (isAudioEnabled()) {\n        this.sellSound.play();\n      }\n    });\n\n    this.ecs.listenEvent(\"pathFollower:done\", (evt) => {\n      this.lives--;\n      this.ecs.removeEntity(evt.entity);\n      if (isAudioEnabled()) {\n        this.creepEscapeSound.play();\n      }\n      if (this.lives <= 0) {\n        this.running = false;\n        this.entityMap.clear();\n        this.audioLoop.stop();\n        this.ecs.clear();\n        globalState.router.requestTransition(\"scores\", false, {\n          score: this.score,\n        });\n      }\n    });\n\n    this.ecs.listenEvent(\"health:die\", (evt) => {\n      const { extra } = evt;\n      const { position } = extra;\n      this.money += 5;\n      this.score += 5;\n      const ent = this.ecs.createEntity();\n      this.ecs.addComponent(ent, PositionComponent, {\n        position: (position as PositionData).position,\n      });\n      this.ecs.addComponent(ent, VelocityComponent, {\n        velocity: new Vector2(0, -0.5),\n      });\n      this.ecs.addComponent(ent, TextRenderComponent, {\n        text: \"+5\",\n        style: \"#ffffff\",\n      });\n      this.ecs.addComponent(ent, SpawnerComponent, {\n        producer: makeBlood,\n        rate: 10,\n        elapsed: 10,\n        count: 30,\n      });\n      this.ecs.addComponent(ent, LifetimeComponent, {\n        lifetime: 1.5,\n      });\n      if (isAudioEnabled()) {\n        this.creepDeathSound.play();\n      }\n    });\n  }\n\n  private sendWave() {\n    const northSpawner = this.ecs.getEntity(\n      this.northSpawnerID\n    ) as SpawnerEntity & SpriteEntity;\n    const eastSpawner = this.ecs.getEntity(\n      this.eastSpawnerID\n    ) as SpawnerEntity & SpriteEntity;\n    const {\n      spawner: northSpawnerData,\n      sprite: northSprite,\n    } = northSpawner.data;\n    const { spawner: eastSpawnerData, sprite: eastSprite } = eastSpawner.data;\n    if (northSpawnerData.total < northSpawnerData.limit) {\n      return;\n    }\n    if (eastSpawnerData.total < eastSpawnerData.limit) {\n      return;\n    }\n\n    const {\n      count: eastCount,\n      entity: eastEntity,\n    } = this.creepManager.getEastWave();\n    eastSpawnerData.producer = eastEntity;\n    eastSpawnerData.rate = 1 / this.creepManager.getStatModifier();\n    eastSpawnerData.total = 0;\n    eastSpawnerData.limit = eastCount;\n    if (this.creepManager.nextEast()) {\n      eastSprite.size = Vector2.ONES;\n    } else {\n      eastSprite.size = Vector2.ZERO;\n    }\n    console.log(\"East count \" + eastCount);\n\n    const {\n      count: northCount,\n      entity: northEntity,\n    } = this.creepManager.getNorthWave();\n    northSpawnerData.producer = northEntity;\n    northSpawnerData.rate = 1 / this.creepManager.getStatModifier();\n    northSpawnerData.total = 0;\n    northSpawnerData.limit = northCount;\n    if (this.creepManager.nextNorth()) {\n      northSprite.size = Vector2.ONES;\n    } else {\n      northSprite.size = Vector2.ZERO;\n    }\n    console.log(\"North count \" + northCount);\n    this.creepManager.nextWave();\n  }\n\n  private initActions() {\n    this._actionMap.createAction(\"upgrade\", true);\n    this._actionMap.createAction(\"sell\", true);\n    this._actionMap.createAction(\"wave\", true);\n    this._actionMap.createAction(\"clear\");\n    this._actionMap.createAction(\"setTower\");\n    this._actionMap.createAction(\"exit\");\n  }\n\n  private initParticleEffects() {\n    this.particleManager.addEffectManager;\n  }\n\n  private createSpawner(position: Vector2, east: boolean): number {\n    const eid = this.ecs.createEntity();\n    this.ecs.addComponent(eid, PositionComponent, {\n      position,\n    });\n    this.ecs.addComponent(eid, SpawnerComponent, {\n      limit: 0,\n      rate: 1,\n      count: 1,\n    });\n    this.ecs.addComponent(eid, RotationComponent);\n    this.ecs.addComponent(eid, SpriteComponent, {\n      source: this.arrow,\n      size: east ? Vector2.ONES : Vector2.ZERO,\n      rotationOffset: east ? 0 : 90,\n    });\n    return eid;\n  }\n\n  public preStart(): void {\n    const persistedData = globalState.persistence.get(this);\n\n    const { keyMap } = persistedData;\n    console.log(keyMap);\n    this._actionMap.clearListeners();\n    this.keys.clearListeners();\n    for (const action of Object.keys(keyMap)) {\n      this.keys.addKeyListener(keyMap[action], (evt) => {\n        if (!evt.down) return;\n        this._actionMap.invoke(action);\n      });\n    }\n    this.keys.addKeyListener(\"escape\", () => {\n      this._actionMap.invoke(\"clear\");\n    });\n    this.keys.addKeyListener(\"]\", (evt) => {\n      if (!evt.down) return;\n      this.paused = !this.paused;\n    });\n    this.timeScale = 1;\n    this.keys.addKeyListener(\"[\", (evt) => {\n      if (!evt.down) return;\n      if (this.timeScale < 2) {\n        this.timeScale = 2;\n      } else {\n        this.timeScale = 1;\n      }\n    });\n\n    this._actionMap.addHandler(\"sell\", this.attemptSell.bind(this));\n    this._actionMap.addHandler(\"wave\", this.sendWave.bind(this));\n    this._actionMap.addHandler(\"upgrade\", this.attemptUpgrade.bind(this));\n    this._actionMap.addHandler(\"clear\", this.clearMouseMode.bind(this));\n    this._actionMap.addHandler(\"setTower\", this.setMouseMode.bind(this));\n    this._actionMap.addHandler(\"exit\", () => {\n      this.running = false;\n      this.entityMap.clear();\n      this.audioLoop.stop();\n      this.ecs.clear();\n      globalState.router.requestTransition(\"home\");\n    });\n\n    this.entityMap.clear();\n    this.running = true;\n    this.ecs.clear();\n    this.money = 30;\n    this.lives = 20;\n    this.score = 0;\n    if (isAudioEnabled()) {\n      this.audioLoop.play();\n    }\n\n    // if (!this.first) {\n    //   return;\n    // }\n    this.first = false;\n    createUI(this.ecs, this);\n\n    this.northSouthPath = this.getPath().findNorthSouth(new Set());\n    this.eastWestPath = this.getPath().findEastWest(new Set());\n\n    this.northSpawnerID = this.createSpawner(new Vector2(25, 0), false);\n    this.eastSpawnerID = this.createSpawner(new Vector2(10, 15), true);\n\n    for (let y = 0; y < 30; y++) {\n      for (let x = 10; x < 40; x++) {\n        const floorTile = this.ecs.createEntity();\n        this.ecs.addComponent(floorTile, PositionComponent, {\n          position: new Vector2(x, y),\n        });\n        this.ecs.addComponent(floorTile, RotationComponent);\n        this.ecs.addComponent(floorTile, LowSpriteComponent, {\n          source: this.floorTile,\n        });\n      }\n    }\n\n    for (let i = 10; i < 40; i++) {\n      if (i >= 23 && i <= 27) continue;\n      this.createBlocker(new Vector2(i, 0));\n      this.createBlocker(new Vector2(i, 29));\n    }\n\n    for (let i = 1; i < 29; i++) {\n      if (i >= 13 && i <= 17) continue;\n      this.createBlocker(new Vector2(10, i));\n      this.createBlocker(new Vector2(39, i));\n    }\n  }\n\n  public addSystems(): void {\n    this.ecs.createSystem(new WeaponSystem(), -1);\n    this.ecs.createSystem(new TurretBaseRenderSystem(this.virtualCanvas), 47);\n    this.ecs.createSystem(new DamageTargetSystem());\n    this.ecs.createSystem(new SplashDamageSystem());\n  }\n\n  private handleClick(interaction: MouseInteraction): void {\n    if (this.activeTower === null || !interaction.leftDown) return;\n    this.buildTower(interaction.coordinate, this.activeTower);\n  }\n\n  private clearMouseMode() {\n    if (this.mouseEntity === null) {\n      return;\n    }\n    this.setSelection(-1);\n    this.ecs.removeEntity(this.mouseEntity.id);\n    this.mouseEntity = null;\n    this.activeTower = null;\n  }\n\n  private setMouseMode(_action: string, data: Record<string, unknown>) {\n    console.log(\"Setting mouse mode\");\n    const towerName = data[\"tower\"] as string;\n    this.activeTower = towerName;\n    if (this.mouseEntity !== null) {\n      this.clearMouseMode();\n    }\n    const id = this.towerManager.createDemoTower(\n      this.getMousePosition,\n      towerName\n    );\n    this.mouseEntity = this.ecs.getEntity(id);\n    this.setSelection(id);\n  }\n\n  private attemptSell() {\n    const entity = this.getSelection();\n    if (entity === null) {\n      return;\n    }\n    if (this.ecs.hasComponent(entity.id, SellableComponent)) {\n      const value = (entity as ValueEntity).data.value.value;\n      this.ecs.emitEvent(\"sellable:sell\", entity, { ...entity.data });\n      this.money += getDynamic(value);\n      this.ecs.removeEntity(entity.id);\n      this.invalidateSelection();\n    }\n  }\n\n  private attemptUpgrade() {\n    console.log(\"Attempting upgrade...\");\n    const entity = this.getSelection();\n    if (entity === null) {\n      console.log(\"Selection is null\");\n      return;\n    }\n    if (!this.ecs.hasComponent(entity, UpgradeComponent)) {\n      console.log(\"Cannot be upgraded.\");\n      return;\n    }\n    const targetEntity = entity as UpgradeEntity;\n    console.log(entity.data.upgrade);\n    const cost = getDynamic<number>(\n      entity.data.upgrade.cost as DynamicConstant<number>\n    );\n    if (cost > this.money) {\n      console.log(\"Not enough money\");\n      return;\n    }\n    console.log(\"Upgrade done\");\n    this.money -= cost;\n    targetEntity.data = merge(targetEntity.data, entity.data.upgrade.dataDelta);\n  }\n\n  public buildTower(position: DynamicConstant<Vector2>, tower: string): void {\n    if (this.towerManager.canPlace(getDynamic(position), tower)) {\n      this.towerManager.createTower(getDynamic(position), tower);\n      this.money -= this.towerManager.getTower(tower).cost;\n      if (isAudioEnabled()) {\n        this.buildSound.play();\n      }\n    }\n  }\n\n  public createBlocker(position: Vector2): void {\n    const blockerID = this.ecs.createEntity();\n    this.ecs.addComponent(blockerID, PositionComponent, {\n      position: position.floor(),\n    });\n    this.ecs.addComponent(blockerID, RotationComponent);\n    this.ecs.addComponent(blockerID, SpriteComponent, {\n      source: new Texture(\"assets/blocker.png\"),\n    });\n    this.ecs.addComponent(blockerID, FootprintComponent, {\n      size: 1,\n    });\n  }\n\n  public get actionMap(): ImmutableActionMap {\n    return this._actionMap.asImmutable();\n  }\n\n  getMap(): GameMap {\n    return this.entityMap;\n  }\n\n  getVirtualSize(): Vector2 {\n    return this.virtualSize;\n  }\n\n  setNorthSouthPath(northSouthPath: Vector2[]): void {\n    this.northSouthPath = northSouthPath;\n  }\n\n  setEastWestPath(eastWestPath: Vector2[]): void {\n    this.eastWestPath = eastWestPath;\n  }\n\n  public _getEastWestPath(): Vector2[] {\n    return this.eastWestPath;\n  }\n\n  public _getNorthSouthPath(): Vector2[] {\n    return this.northSouthPath;\n  }\n\n  public getPath(): PathChecker {\n    return this.pathChecker;\n  }\n}\n","import { AbstractClickComponent } from \"../core/components/behavior/click/AbstractClick\";\nimport { ClickableComponent } from \"../core/components/behavior/click/Clickable\";\nimport { PositionComponent } from \"../core/components/data/Position\";\nimport { ClickableDisplayComponent } from \"../core/components/ui/ClickableDisplay\";\nimport { RegionComponent } from \"../core/components/ui/RegionRender\";\nimport TextRenderComponent from \"../core/components/ui/TextRender\";\nimport { DynamicConstant } from \"../core/data/DynamicConstant\";\nimport { ECSManager } from \"../core/ecs/ECSManager\";\nimport { Entity } from \"../core/ecs/Entity\";\nimport Vector2 from \"../core/geometry/Vector2\";\nimport { WeaponData } from \"./components/Weapon\";\nimport { GameModel } from \"./GameModel\";\n\nfunction createUIText(\n  ecs: ECSManager,\n  position: Vector2,\n  text: DynamicConstant<string>,\n  style?: string,\n  size?: number,\n  align?: CanvasTextAlign\n) {\n  const el = ecs.createEntity();\n  ecs.addComponent(el, PositionComponent, {\n    position,\n  });\n  ecs.addComponent(el, TextRenderComponent, {\n    text,\n    style,\n    size,\n    align,\n  });\n}\n\nfunction createUIRegion(\n  ecs: ECSManager,\n  position: Vector2,\n  delta?: Vector2,\n  clickable = false,\n  action?: (entity: Entity) => void\n): number {\n  const el = ecs.createEntity();\n  ecs.addComponent(el, PositionComponent, {\n    position,\n  });\n  if (!clickable && delta) {\n    ecs.addComponent(el, RegionComponent, {\n      delta,\n    });\n  } else {\n    ecs.addComponent(el, ClickableComponent, {\n      delta,\n    });\n    ecs.addComponent(el, AbstractClickComponent, {\n      action,\n    });\n    ecs.addComponent(el, ClickableDisplayComponent, {});\n  }\n  return el;\n}\n\nexport function createUI(ecs: ECSManager, model: GameModel): void {\n  createUIRegion(ecs, new Vector2(5, 15), new Vector2(5, 15));\n  createUIText(ecs, new Vector2(5, 1), \"Tower Defense\", \"#ffffff\", 2);\n  createUIText(\n    ecs,\n    new Vector2(2.5, 2),\n    () => \"Lives: \" + model.lives.toFixed(0),\n    \"#ffffff\"\n  );\n  createUIText(\n    ecs,\n    new Vector2(7.5, 2),\n    () => \"Money: \" + model.money.toFixed(0),\n    \"#ffffff\"\n  );\n  createUIText(ecs, new Vector2(5, 4), \"Towers\", \"#ffffff\");\n  const tower1 = createUIRegion(\n    ecs,\n    new Vector2(2, 5),\n    new Vector2(0.5, 0.5),\n    true,\n    () => model.actionMap.invoke(\"setTower\", { tower: \"tower-1\" })\n  );\n  ecs.addComponent(tower1, TextRenderComponent, {\n    text: \"1\",\n    style: \"#ffffff\",\n  });\n  const tower2 = createUIRegion(\n    ecs,\n    new Vector2(4, 5),\n    new Vector2(0.5, 0.5),\n    true,\n    () => model.actionMap.invoke(\"setTower\", { tower: \"tower-2\" })\n  );\n  ecs.addComponent(tower2, TextRenderComponent, {\n    text: \"2\",\n    style: \"#ffffff\",\n  });\n  const tower3 = createUIRegion(\n    ecs,\n    new Vector2(6, 5),\n    new Vector2(0.5, 0.5),\n    true,\n    () => model.actionMap.invoke(\"setTower\", { tower: \"tower-3\" })\n  );\n  ecs.addComponent(tower3, TextRenderComponent, {\n    text: \"3\",\n    style: \"#ffffff\",\n  });\n  const tower4 = createUIRegion(\n    ecs,\n    new Vector2(8, 5),\n    new Vector2(0.5, 0.5),\n    true,\n    () => model.actionMap.invoke(\"setTower\", { tower: \"tower-4\" })\n  );\n  ecs.addComponent(tower4, TextRenderComponent, {\n    text: \"4\",\n    style: \"#ffffff\",\n  });\n  createUIText(ecs, new Vector2(5, 7), \"Selected\", \"#ffffff\");\n  createUIText(\n    ecs,\n    new Vector2(1, 8),\n    (): string => {\n      const sel = model.getSelection();\n      if (sel !== null) {\n        let val = \"\";\n        if (\"name\" in sel.data) {\n          val += (sel.data.name.name as string) + \"\\n\";\n        }\n        if (\"health\" in sel.data) {\n          val +=\n            \"Health: \" + (sel.data.health.health as number).toFixed(0) + \"\\n\";\n        }\n        if (\"value\" in sel.data) {\n          val += \"Value: \" + (sel.data.value.value as number).toFixed(0) + \"\\n\";\n        }\n        if (\"weapon\" in sel.data) {\n          const weapon = sel.data.weapon as WeaponData;\n          val += \"Ready to Fire: \" + weapon.canFire + \"\\n\";\n          val +=\n            \"Fire Rate: \" + (1 / weapon.rate).toFixed(2) + \" per second\" + \"\\n\";\n          val += \"Damage: \" + weapon.projectileType.damage.toFixed(2) + \"\\n\";\n          val +=\n            \"Can Target: \" + (weapon.tags as Array<string>).join(\", \") + \"\\n\";\n        }\n        if (\"upgrade\" in sel.data && sel.data.upgrade.cost > 0) {\n          val +=\n            \"Upgrade cost: \" +\n            (sel.data.upgrade.cost as number).toFixed(0) +\n            \"\\n\";\n        }\n        return val;\n      }\n      return \"\";\n    },\n    \"#ffffff\",\n    1,\n    \"left\"\n  );\n  const sellButton = createUIRegion(\n    ecs,\n    new Vector2(2.675, 24),\n    new Vector2(2.125, 1),\n    true,\n    () => model.actionMap.invoke(\"sell\")\n  );\n  ecs.addComponent(sellButton, TextRenderComponent, {\n    text: \"Sell\",\n    style: \"#ffffff\",\n  });\n  const upgradeButton = createUIRegion(\n    ecs,\n    new Vector2(7.375, 24),\n    new Vector2(2.125, 1),\n    true,\n    () => model.actionMap.invoke(\"upgrade\")\n  );\n  ecs.addComponent(upgradeButton, TextRenderComponent, {\n    text: \"Upgrade\",\n    style: \"#ffffff\",\n  });\n  const nextWave = createUIRegion(\n    ecs,\n    new Vector2(5, 26.5),\n    new Vector2(4.5, 1),\n    true,\n    () => model.actionMap.invoke(\"wave\")\n  );\n  ecs.addComponent(nextWave, TextRenderComponent, {\n    text: \"Send Next Wave\",\n    style: \"#ffffff\",\n  });\n  const exitButton = createUIRegion(\n    ecs,\n    new Vector2(5, 29),\n    new Vector2(4.5, 1),\n    true,\n    () => model.actionMap.invoke(\"exit\")\n  );\n  ecs.addComponent(exitButton, TextRenderComponent, {\n    text: \"Exit\",\n    style: \"#ffffff\",\n  });\n}\n","import { globalState } from \"..\";\n\nexport function isAudioEnabled(): boolean {\n  return globalState.getData().audio;\n}\n","import { Pathfinder } from \"../core/data/Pathfinder\";\nimport { Direction } from \"../core/geometry/Direction\";\nimport Vector2 from \"../core/geometry/Vector2\";\nimport { GameModel } from \"./GameModel\";\n\nexport class PathChecker {\n  private southEnd = new Set<Vector2>();\n  private eastEnd = new Set<Vector2>();\n\n  constructor(private model: GameModel) {\n    this.southEnd.add(new Vector2(19, 30));\n    this.southEnd.add(new Vector2(20, 30));\n    this.southEnd.add(new Vector2(21, 30));\n    this.southEnd.add(new Vector2(22, 30));\n    this.southEnd.add(new Vector2(23, 30));\n    this.eastEnd.add(new Vector2(39, 13));\n    this.eastEnd.add(new Vector2(39, 14));\n    this.eastEnd.add(new Vector2(39, 15));\n    this.eastEnd.add(new Vector2(39, 16));\n    this.eastEnd.add(new Vector2(39, 17));\n  }\n\n  findEastWest(blocked: Set<Vector2>, compress = false): Array<Vector2> {\n    const eastWestPath = Pathfinder.findPath(\n      this.model.getMap(),\n      new Vector2(10, 15),\n      this.eastEnd,\n      Direction.getAllCardinal(),\n      new Vector2(10, 0),\n      this.model.getVirtualSize(),\n      blocked,\n      compress\n    );\n    return eastWestPath;\n  }\n\n  findNorthSouth(blocked: Set<Vector2>, compress = false): Array<Vector2> {\n    const northSouthPath = Pathfinder.findPath(\n      this.model.getMap(),\n      new Vector2(25, 0),\n      this.southEnd,\n      Direction.getAllCardinal(),\n      new Vector2(10, 0),\n      this.model.getVirtualSize(),\n      blocked,\n      compress\n    );\n    return northSouthPath;\n  }\n}\n","import { lowerFirst } from \"lodash\";\nimport { FootprintEntity } from \"../../core/components/data/Footprint\";\nimport { PositionEntity } from \"../../core/components/data/Position\";\nimport { RotationEntity } from \"../../core/components/data/Rotation\";\nimport { DynamicConstant } from \"../../core/data/DynamicConstant\";\nimport { Component } from \"../../core/ecs/Component\";\nimport { AutoName } from \"../../core/ecs/decorators/AutoName\";\nimport { Entity } from \"../../core/ecs/Entity\";\nimport Vector2 from \"../../core/geometry/Vector2\";\nimport { Texture } from \"../../core/rendering/Texture\";\n\nexport interface TurretBaseData extends Record<string, unknown> {\n  source: Texture;\n}\n\nexport type TurretBaseEntity = Entity &\n  PositionEntity &\n  FootprintEntity & { data: { turretBase: TurretBaseData } };\n\n@AutoName\nexport class TurretBase extends Component {\n  private static NO_TEXTURE: Texture = undefined;\n\n  constructor() {\n    super();\n    if (TurretBase.NO_TEXTURE === undefined) {\n      TurretBase.NO_TEXTURE = new Texture(\n        \"assets/notex.png\",\n        Vector2.matching(32)\n      );\n    }\n  }\n\n  protected defaultData(): TurretBaseData {\n    return { source: TurretBase.NO_TEXTURE, offset: Vector2.ZERO };\n  }\n}\n\nexport const TurretBaseComponent = new TurretBase();\nexport default TurretBaseComponent;\n","import { PathFollowerEntity } from \"../../core/components/behavior/PathFollower\";\nimport { HealthEntity } from \"../../core/components/data/Health\";\nimport { PositionEntity } from \"../../core/components/data/Position\";\nimport { Component } from \"../../core/ecs/Component\";\nimport { AutoName } from \"../../core/ecs/decorators/AutoName\";\n\nexport type CreepEntity = PositionEntity &\n  HealthEntity &\n  PathFollowerEntity & { data: { creep: CreepData } };\n\nexport interface CreepData {\n  tags: Array<string>;\n}\n@AutoName\nexport class Creep extends Component {\n  defaultData(): Record<string, unknown> {\n    return { tags: [\"ground\"] };\n  }\n}\n\nexport const CreepComponent = new Creep();\nexport default CreepComponent;\n","import { RotationTargetEntity } from \"../../core/components/behavior/RotationTarget\";\nimport { RangeEntity } from \"../../core/components/data/Range\";\nimport { Component } from \"../../core/ecs/Component\";\nimport { AutoName } from \"../../core/ecs/decorators/AutoName\";\n\nexport interface DamageData extends Record<string, unknown> {\n  damage: number; // health units\n}\n\nexport type DamageEntity = RangeEntity &\n  RotationTargetEntity & { data: { damage: DamageData } };\n\n@AutoName\nexport class Damage extends Component {\n  protected defaultData(): DamageData {\n    return {\n      damage: 1,\n    };\n  }\n}\n\nexport const DamageComponent = new Damage();\nexport default DamageComponent;\n","import { VelocityTargetEntity } from \"../../core/components/behavior/PositionTarget\";\nimport { RotationTargetEntity } from \"../../core/components/behavior/RotationTarget\";\nimport { HealthEntity } from \"../../core/components/data/Health\";\nimport { RangeEntity } from \"../../core/components/data/Range\";\nimport { Component } from \"../../core/ecs/Component\";\nimport { AutoName } from \"../../core/ecs/decorators/AutoName\";\nimport { DamageEntity } from \"./Damage\";\n\nexport interface DamageTargetData extends Record<string, unknown> {\n  target: HealthEntity; // health units\n}\n\nexport type DamageTargetEntity = DamageEntity &\n  VelocityTargetEntity & { data: { damageTarget: DamageTargetData } };\n\n@AutoName\nexport class DamageTarget extends Component {\n  protected defaultData(): DamageTargetData {\n    return {\n      target: null,\n    };\n  }\n}\n\nexport const DamageTargetComponent = new DamageTarget();\nexport default DamageTargetComponent;\n","import { VelocityTargetEntity } from \"../../core/components/behavior/PositionTarget\";\nimport { HealthEntity } from \"../../core/components/data/Health\";\nimport { PositionEntity } from \"../../core/components/data/Position\";\nimport { Component } from \"../../core/ecs/Component\";\nimport { AutoName } from \"../../core/ecs/decorators/AutoName\";\nimport { DamageEntity } from \"./Damage\";\n\nexport interface DamageSplashData extends Record<string, unknown> {\n  radius: number; // virtual coordinate units\n  target: HealthEntity & PositionEntity;\n  tags: Array<string>;\n}\n\nexport type DamageSplashEntity = VelocityTargetEntity &\n  DamageEntity & { data: { splashDamage: DamageSplashData } };\n\n@AutoName\nexport class SplashDamage extends Component {\n  protected defaultData(): DamageSplashData {\n    return {\n      radius: 1,\n      target: null,\n      tags: [\"ground\"],\n    };\n  }\n}\n\nexport const SplashDamageComponent = new SplashDamage();\nexport default SplashDamageComponent;\n","import { RotationTargetEntity } from \"../../core/components/behavior/RotationTarget\";\nimport { PositionEntity } from \"../../core/components/data/Position\";\nimport { RangeEntity } from \"../../core/components/data/Range\";\nimport { Component } from \"../../core/ecs/Component\";\nimport { AutoName } from \"../../core/ecs/decorators/AutoName\";\nimport { Entity } from \"../../core/ecs/Entity\";\nimport { EntityProducer } from \"../../core/ecs/EntityProducer\";\nimport { IntervalStorage } from \"../../core/ecs/System\";\nimport Vector2 from \"../../core/geometry/Vector2\";\nimport { ProjectileType } from \"../types/ProjectileType\";\nimport { CreepEntity } from \"./Creep\";\n\nexport interface WeaponData extends Record<string, unknown>, IntervalStorage {\n  projectile: EntityProducer;\n  projectileType: ProjectileType;\n  rate: number; // entities per second\n  elapsed: number;\n  target: CreepEntity;\n  canFire: boolean;\n  barrelOffsets: Array<Vector2>;\n  barrel: number;\n  fireStrictness: number;\n  arcReached: boolean;\n  tags: Array<string>;\n}\n\nexport interface ChildDataGenerator {\n  (componentName: string, parent: Entity): Record<string, unknown>;\n}\n\nexport type WeaponEntity = RangeEntity &\n  RotationTargetEntity & { data: { weapon: WeaponData } };\n\n@AutoName\nexport class Weapon extends Component {\n  protected defaultData(): WeaponData {\n    return {\n      rate: 1,\n      elapsed: 0,\n      projectile: null,\n      target: null,\n      canFire: true,\n      barrelOffsets: [Vector2.ZERO],\n      barrel: 0,\n      fireStrictness: 1,\n      arcReached: false,\n      projectileType: ProjectileType.DEFAULT,\n      tags: [],\n    };\n  }\n}\n\nexport const WeaponComponent = new Weapon();\nexport default WeaponComponent;\n","import Vector2 from \"../../core/geometry/Vector2\";\nimport { GameModel } from \"../GameModel\";\nimport { Wave } from \"./Wave\";\nimport { makeFastCreepProducer } from \"./Fast\";\nimport { makeFlyingCreepProducer } from \"./Flying\";\nimport { makeNormalCreepProducer } from \"./Normal\";\n\nexport class CreepManager {\n  private northNormalCreepGenerator;\n  private eastNormalCreepGenerator;\n  private northNormalPlusCreepGenerator;\n  private eastNormalPlusCreepGenerator;\n  private northFastCreepGenerator;\n  private eastFastCreepGenerator;\n  private northFlyingCreepGenerator;\n  private eastFlyingCreepGenerator;\n  private statModifier = 1;\n  private wave = 0;\n  public getStatModifier: () => number;\n\n  constructor(private model: GameModel) {\n    this.getStatModifier = this._getStatModifier.bind(this);\n    this.northNormalCreepGenerator = makeNormalCreepProducer(\n      model.getNorthSouthPath,\n      model,\n      this.getStatModifier\n    );\n    this.eastNormalCreepGenerator = makeNormalCreepProducer(\n      model.getEastWestPath,\n      model,\n      this.getStatModifier\n    );\n    this.eastNormalPlusCreepGenerator = makeNormalCreepProducer(\n      model.getEastWestPath,\n      model,\n      () => this.getStatModifier() * 1.5\n    );\n    this.northNormalPlusCreepGenerator = makeNormalCreepProducer(\n      model.getNorthSouthPath,\n      model,\n      () => this.getStatModifier() * 1.5\n    );\n    this.northFastCreepGenerator = makeFastCreepProducer(\n      model.getNorthSouthPath,\n      model,\n      this.getStatModifier\n    );\n    this.eastFastCreepGenerator = makeFastCreepProducer(\n      model.getEastWestPath,\n      model,\n      this.getStatModifier\n    );\n    this.northFlyingCreepGenerator = makeFlyingCreepProducer(\n      [new Vector2(25, 0), new Vector2(25, 30)],\n      model,\n      this.getStatModifier\n    );\n    this.eastFlyingCreepGenerator = makeFlyingCreepProducer(\n      [new Vector2(10, 15), new Vector2(40, 15)],\n      model,\n      this.getStatModifier\n    );\n  }\n\n  public nextWave(): void {\n    this.wave++;\n    this.statModifier = 1 + 0.1 * this.wave;\n  }\n\n  public getNorthWave(): Wave {\n    const waveType = this.wave % 5;\n    const count = 20 + 10 * Math.floor(this.wave / 10);\n    if (this.isNorthWave()) {\n      switch (waveType) {\n        case 0:\n        case 1:\n          return { count, entity: this.northNormalCreepGenerator };\n        case 2:\n          return { count, entity: this.northFastCreepGenerator };\n        case 3:\n          return { count, entity: this.northNormalPlusCreepGenerator };\n        case 4:\n          return { count, entity: this.northFlyingCreepGenerator };\n      }\n    }\n    return { count: 0, entity: this.northNormalCreepGenerator };\n  }\n\n  public getEastWave(): Wave {\n    const waveType = this.wave % 5;\n    const count = 20 + 10 * Math.floor(this.wave / 10);\n    if (this.isEastWave()) {\n      switch (waveType) {\n        case 0:\n        case 1:\n          return { count, entity: this.eastNormalCreepGenerator };\n        case 2:\n          return { count, entity: this.eastFastCreepGenerator };\n        case 3:\n          return { count, entity: this.eastNormalPlusCreepGenerator };\n        case 4:\n          return { count, entity: this.eastFlyingCreepGenerator };\n      }\n    }\n    return { count: 0, entity: this.eastNormalCreepGenerator };\n  }\n\n  private isNorthWave(): boolean {\n    return this.wave % 3 !== 0;\n  }\n\n  private isEastWave(): boolean {\n    return this.wave % 3 !== 1;\n  }\n\n  private _getStatModifier(): number {\n    return this.statModifier;\n  }\n\n  public nextNorth(): boolean {\n    return (this.wave + 1) % 3 !== 0;\n  }\n\n  public nextEast(): boolean {\n    return (this.wave + 1) % 3 !== 1;\n  }\n}\n","import { AbstractClickComponent } from \"../../core/components/behavior/click/AbstractClick\";\nimport { ClickableComponent } from \"../../core/components/behavior/click/Clickable\";\nimport { PathFollowerComponent } from \"../../core/components/behavior/PathFollower\";\nimport { VelocityTargetComponent } from \"../../core/components/behavior/PositionTarget\";\nimport { RotationTargetComponent } from \"../../core/components/behavior/RotationTarget\";\nimport { SpawnerEntity } from \"../../core/components/behavior/Spawner\";\nimport { HealthComponent } from \"../../core/components/data/Health\";\nimport { NameComponent } from \"../../core/components/data/Name\";\nimport { PositionComponent } from \"../../core/components/data/Position\";\nimport { RotationComponent } from \"../../core/components/data/Rotation\";\nimport { VelocityComponent } from \"../../core/components/data/Velocity\";\nimport HealthDisplayComponent from \"../../core/components/marker/HealthDisplay\";\nimport AnimatedSpriteComponent from \"../../core/components/rendering/AnimatedSprite\";\nimport { DynamicConstant, getDynamic } from \"../../core/data/DynamicConstant\";\nimport { ECSManager } from \"../../core/ecs/ECSManager\";\nimport { Entity } from \"../../core/ecs/Entity\";\nimport { EntityProducer } from \"../../core/ecs/EntityProducer\";\nimport Vector2 from \"../../core/geometry/Vector2\";\nimport { Texture } from \"../../core/rendering/Texture\";\nimport CreepComponent from \"../components/Creep\";\nimport { GameModel } from \"../GameModel\";\n\nexport function makeFastCreepProducer(\n  path: DynamicConstant<Array<Vector2>>,\n  model: GameModel,\n  statModifier: DynamicConstant<number>\n): EntityProducer {\n  return function (parent: SpawnerEntity, ecs: ECSManager): void {\n    const position = getDynamic(parent.data.position.position);\n    const entityID = ecs.createEntity();\n    const modifier = getDynamic(statModifier);\n    ecs.addComponent(entityID, PositionComponent, {\n      position,\n    });\n    ecs.addComponent(entityID, VelocityComponent, {\n      velocity: new Vector2(0, 0),\n    });\n    ecs.addComponent(entityID, RotationComponent);\n    ecs.addComponent(entityID, VelocityTargetComponent, {\n      velocity: 5 + 1.2 * modifier,\n    });\n    ecs.addComponent(entityID, RotationTargetComponent, {\n      turnRate: 720,\n    });\n    ecs.addComponent(entityID, PathFollowerComponent, {\n      path: path,\n    });\n    ecs.addComponent(entityID, ClickableComponent, {\n      delta: Vector2.matching(0.5),\n      offset: Vector2.matching(-0.5),\n    });\n    ecs.addComponent(entityID, AbstractClickComponent, {\n      action: (entity: Entity) => model.setSelection(entity.id),\n    });\n    ecs.addComponent(entityID, AnimatedSpriteComponent, {\n      source: new Texture(\"assets/Fast.png\"),\n      frames: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1],\n      size: Vector2.matching(2),\n      frameSize: new Vector2(64, 64),\n    });\n    ecs.addComponent(entityID, HealthComponent, {\n      health: Math.floor(8 * modifier),\n      maxHealth: Math.floor(8 * modifier),\n    });\n    ecs.addComponent(entityID, HealthDisplayComponent);\n    ecs.addComponent(entityID, CreepComponent, {\n      tags: [\"ground\"],\n    });\n    ecs.addComponent(entityID, NameComponent, {\n      name: \"Normal Creep\",\n    });\n  };\n}\n","import { AbstractClickComponent } from \"../../core/components/behavior/click/AbstractClick\";\nimport { ClickableComponent } from \"../../core/components/behavior/click/Clickable\";\nimport { PathFollowerComponent } from \"../../core/components/behavior/PathFollower\";\nimport { VelocityTargetComponent } from \"../../core/components/behavior/PositionTarget\";\nimport { RotationTargetComponent } from \"../../core/components/behavior/RotationTarget\";\nimport { SpawnerEntity } from \"../../core/components/behavior/Spawner\";\nimport { HealthComponent } from \"../../core/components/data/Health\";\nimport { NameComponent } from \"../../core/components/data/Name\";\nimport { PositionComponent } from \"../../core/components/data/Position\";\nimport { RotationComponent } from \"../../core/components/data/Rotation\";\nimport { VelocityComponent } from \"../../core/components/data/Velocity\";\nimport HealthDisplayComponent from \"../../core/components/marker/HealthDisplay\";\nimport AnimatedSpriteComponent from \"../../core/components/rendering/AnimatedSprite\";\nimport { DynamicConstant, getDynamic } from \"../../core/data/DynamicConstant\";\nimport { ECSManager } from \"../../core/ecs/ECSManager\";\nimport { Entity } from \"../../core/ecs/Entity\";\nimport { EntityProducer } from \"../../core/ecs/EntityProducer\";\nimport Vector2 from \"../../core/geometry/Vector2\";\nimport { Texture } from \"../../core/rendering/Texture\";\nimport CreepComponent from \"../components/Creep\";\nimport { GameModel } from \"../GameModel\";\n\nexport function makeFlyingCreepProducer(\n  path: DynamicConstant<Array<Vector2>>,\n  model: GameModel,\n  statModifier: DynamicConstant<number>\n): EntityProducer {\n  return function (parent: SpawnerEntity, ecs: ECSManager): void {\n    const position = getDynamic(parent.data.position.position);\n    const entityID = ecs.createEntity();\n    const modifier = getDynamic(statModifier);\n    ecs.addComponent(entityID, PositionComponent, {\n      position,\n    });\n    ecs.addComponent(entityID, VelocityComponent, {\n      velocity: new Vector2(0, 0),\n    });\n    ecs.addComponent(entityID, RotationComponent);\n    ecs.addComponent(entityID, VelocityTargetComponent, {\n      velocity: 4 + 0.8 * modifier,\n    });\n    ecs.addComponent(entityID, RotationTargetComponent);\n    ecs.addComponent(entityID, PathFollowerComponent, {\n      path: path,\n    });\n    ecs.addComponent(entityID, ClickableComponent, {\n      delta: Vector2.matching(0.5),\n      offset: Vector2.matching(-0.5),\n    });\n    ecs.addComponent(entityID, AbstractClickComponent, {\n      action: (entity: Entity) => model.setSelection(entity.id),\n    });\n    ecs.addComponent(entityID, AnimatedSpriteComponent, {\n      source: new Texture(\"assets/Flying.png\"),\n      frames: [0.1, 0.1, 0.1],\n      size: Vector2.matching(3.0),\n      frameSize: new Vector2(64, 64),\n    });\n    ecs.addComponent(entityID, HealthComponent, {\n      health: Math.floor(10 * (0.8 * modifier)),\n      maxHealth: Math.floor(10 * (0.8 * modifier)),\n    });\n    ecs.addComponent(entityID, HealthDisplayComponent);\n    ecs.addComponent(entityID, CreepComponent, {\n      tags: [\"air\"],\n    });\n    ecs.addComponent(entityID, NameComponent, {\n      name: \"Flying Creep\",\n    });\n  };\n}\n","import { AbstractClickComponent } from \"../../core/components/behavior/click/AbstractClick\";\nimport { ClickableComponent } from \"../../core/components/behavior/click/Clickable\";\nimport { PathFollowerComponent } from \"../../core/components/behavior/PathFollower\";\nimport { VelocityTargetComponent } from \"../../core/components/behavior/PositionTarget\";\nimport { RotationTargetComponent } from \"../../core/components/behavior/RotationTarget\";\nimport { SpawnerEntity } from \"../../core/components/behavior/Spawner\";\nimport { HealthComponent } from \"../../core/components/data/Health\";\nimport { NameComponent } from \"../../core/components/data/Name\";\nimport { PositionComponent } from \"../../core/components/data/Position\";\nimport { RotationComponent } from \"../../core/components/data/Rotation\";\nimport { VelocityComponent } from \"../../core/components/data/Velocity\";\nimport HealthDisplayComponent from \"../../core/components/marker/HealthDisplay\";\nimport AnimatedSpriteComponent from \"../../core/components/rendering/AnimatedSprite\";\nimport { DynamicConstant, getDynamic } from \"../../core/data/DynamicConstant\";\nimport { ECSManager } from \"../../core/ecs/ECSManager\";\nimport { Entity } from \"../../core/ecs/Entity\";\nimport { EntityProducer } from \"../../core/ecs/EntityProducer\";\nimport Vector2 from \"../../core/geometry/Vector2\";\nimport { Texture } from \"../../core/rendering/Texture\";\nimport CreepComponent from \"../components/Creep\";\nimport { GameModel } from \"../GameModel\";\n\nexport function makeNormalCreepProducer(\n  path: DynamicConstant<Array<Vector2>>,\n  model: GameModel,\n  statModifier: DynamicConstant<number>\n): EntityProducer {\n  return function (parent: SpawnerEntity, ecs: ECSManager): void {\n    const position = getDynamic(parent.data.position.position);\n    const entityID = ecs.createEntity();\n    const modifier = getDynamic(statModifier);\n    ecs.addComponent(entityID, PositionComponent, {\n      position,\n    });\n    ecs.addComponent(entityID, VelocityComponent, {\n      velocity: new Vector2(0, 0),\n    });\n    ecs.addComponent(entityID, RotationComponent);\n    ecs.addComponent(entityID, VelocityTargetComponent, {\n      velocity: 3 + modifier,\n    });\n    ecs.addComponent(entityID, RotationTargetComponent, {\n      turnRate: 360,\n    });\n    ecs.addComponent(entityID, PathFollowerComponent, {\n      path: path,\n    });\n    ecs.addComponent(entityID, ClickableComponent, {\n      delta: Vector2.matching(0.5),\n      offset: Vector2.matching(-0.5),\n    });\n    ecs.addComponent(entityID, AbstractClickComponent, {\n      action: (entity: Entity) => model.setSelection(entity.id),\n    });\n    ecs.addComponent(entityID, AnimatedSpriteComponent, {\n      source: new Texture(\"assets/Normal.png\"),\n      frames: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1],\n      size: Vector2.matching(2),\n      frameSize: Vector2.matching(64),\n    });\n    ecs.addComponent(entityID, HealthComponent, {\n      health: Math.floor(10 * modifier),\n      maxHealth: Math.floor(10 * modifier),\n    });\n    ecs.addComponent(entityID, HealthDisplayComponent);\n    ecs.addComponent(entityID, CreepComponent, {\n      tags: [\"ground\"],\n    });\n    ecs.addComponent(entityID, NameComponent, {\n      name: \"Normal Creep\",\n    });\n  };\n}\n","import { LifetimeComponent } from \"../../core/components/behavior/Lifetime\";\nimport {\n  PositionComponent,\n  PositionEntity,\n} from \"../../core/components/data/Position\";\nimport { RotationComponent } from \"../../core/components/data/Rotation\";\nimport { VelocityComponent } from \"../../core/components/data/Velocity\";\nimport LifetimeRenderComponent from \"../../core/components/rendering/LifetimeRender\";\nimport SpriteComponent from \"../../core/components/rendering/Sprite\";\nimport { getDynamic } from \"../../core/data/DynamicConstant\";\nimport { ECSManager } from \"../../core/ecs/ECSManager\";\nimport Vector2 from \"../../core/geometry/Vector2\";\nimport { random } from \"../../core/Random\";\nimport { Texture } from \"../../core/rendering/Texture\";\n\nexport function makeBlood(parent: PositionEntity, manager: ECSManager): void {\n  const entity = manager.createEntity();\n  const offset = Vector2.fromAngle(random.gaussian() * 720).scale(\n    random.gaussian()\n  );\n  const ppos = getDynamic(parent.data.position.position);\n  manager.addComponent(entity, PositionComponent, {\n    position: ppos.add(offset),\n  });\n  manager.addComponent(entity, VelocityComponent, {\n    velocity: offset,\n  });\n  manager.addComponent(entity, RotationComponent, {\n    rotation: random.gaussian() * 720,\n  });\n  manager.addComponent(entity, SpriteComponent, {\n    size: Vector2.matching(0.5),\n    source: new Texture(\"assets/Gear.png\"),\n  });\n  manager.addComponent(entity, LifetimeComponent);\n  manager.addComponent(entity, LifetimeRenderComponent);\n}\n","import { LifetimeComponent } from \"../../core/components/behavior/Lifetime\";\nimport { VelocityTargetComponent } from \"../../core/components/behavior/PositionTarget\";\nimport { RotationTargetComponent } from \"../../core/components/behavior/RotationTarget\";\nimport SpawnerComponent from \"../../core/components/behavior/Spawner\";\nimport { PositionComponent } from \"../../core/components/data/Position\";\nimport { RotationComponent } from \"../../core/components/data/Rotation\";\nimport { VelocityComponent } from \"../../core/components/data/Velocity\";\nimport SpriteComponent from \"../../core/components/rendering/Sprite\";\nimport { getDynamic } from \"../../core/data/DynamicConstant\";\nimport { ECSManager } from \"../../core/ecs/ECSManager\";\nimport { Entity } from \"../../core/ecs/Entity\";\nimport Vector2 from \"../../core/geometry/Vector2\";\nimport { makeSmokeTrail } from \"../../core/prefabs/SmokeParticle\";\nimport { Texture } from \"../../core/rendering/Texture\";\nimport DamageComponent from \"../components/Damage\";\nimport DamageTargetComponent from \"../components/DamageTarget\";\nimport SplashDamageComponent from \"../components/SplashDamage\";\nimport { WeaponEntity } from \"../components/Weapon\";\n\nconst tex = new Texture(\"assets/Bullet.png\");\n\nexport function bullet(parent: WeaponEntity, manager: ECSManager): Entity {\n  const id = manager.createEntity();\n  const entity = manager.getEntity(id);\n  const target = parent.data.weapon.target;\n  const { weapon, range } = parent.data;\n  let position = Vector2.ZERO;\n  position = position.add(\n    parent.data.weapon.barrelOffsets[parent.data.weapon.barrel]\n  );\n  position = position.rotate(getDynamic(parent.data.rotation.rotation));\n  position = position.add(getDynamic(parent.data.position.position));\n  manager.addComponent(entity, PositionComponent, {\n    position,\n  });\n  manager.addComponent(entity, RotationComponent, {\n    rotation: parent.data.rotation.rotation,\n  });\n  manager.addComponent(entity, RotationTargetComponent, {\n    target: () => {\n      if (!target.active) {\n        const pos = entity.data.position.position;\n        manager.removeEntity(entity);\n        return pos;\n      }\n      return target.data.position.position;\n    },\n  });\n  manager.addComponent(entity, VelocityComponent);\n  manager.addComponent(entity, VelocityTargetComponent, {\n    target: () => {\n      if (!target.active) {\n        const pos = entity.data.position.position;\n        manager.removeEntity(entity);\n        return pos;\n      }\n      return target.data.position.position;\n    },\n    velocity: parent.data.weapon.projectileType.speed,\n  });\n  manager.addComponent(entity, SpriteComponent, {\n    source: tex,\n    rotationOffset: 90,\n  });\n  manager.addComponent(entity, DamageComponent, {\n    damage: parent.data.weapon.projectileType.damage,\n  });\n  if (parent.data.weapon.projectileType.splashRadius >= 0.01) {\n    manager.addComponent(entity, SplashDamageComponent, {\n      target: weapon.target,\n      radius: weapon.projectileType.splashRadius,\n    });\n  } else {\n    manager.addComponent(entity, DamageTargetComponent, {\n      target: weapon.target,\n    });\n  }\n  manager.addComponent(entity, LifetimeComponent, {\n    lifetime: (range.range / weapon.projectileType.speed) * 1.2,\n  });\n  return entity;\n}\n","import { LifetimeComponent } from \"../../core/components/behavior/Lifetime\";\nimport { VelocityTargetComponent } from \"../../core/components/behavior/PositionTarget\";\nimport { RotationTargetComponent } from \"../../core/components/behavior/RotationTarget\";\nimport SpawnerComponent from \"../../core/components/behavior/Spawner\";\nimport { PositionComponent } from \"../../core/components/data/Position\";\nimport { RotationComponent } from \"../../core/components/data/Rotation\";\nimport { VelocityComponent } from \"../../core/components/data/Velocity\";\nimport SpriteComponent from \"../../core/components/rendering/Sprite\";\nimport { getDynamic } from \"../../core/data/DynamicConstant\";\nimport { ECSManager } from \"../../core/ecs/ECSManager\";\nimport { Entity } from \"../../core/ecs/Entity\";\nimport Vector2 from \"../../core/geometry/Vector2\";\nimport { makeSmokeTrail } from \"../../core/prefabs/SmokeParticle\";\nimport { Texture } from \"../../core/rendering/Texture\";\nimport DamageComponent from \"../components/Damage\";\nimport DamageTargetComponent from \"../components/DamageTarget\";\nimport SplashDamageComponent from \"../components/SplashDamage\";\nimport { WeaponEntity } from \"../components/Weapon\";\n\nconst tex = new Texture(\"assets/Missile.png\");\n\nexport function missile(parent: WeaponEntity, manager: ECSManager): Entity {\n  const id = manager.createEntity();\n  const entity = manager.getEntity(id);\n  const target = parent.data.weapon.target;\n  const { weapon, range } = parent.data;\n  let position = Vector2.ZERO;\n  position = position.add(\n    parent.data.weapon.barrelOffsets[parent.data.weapon.barrel]\n  );\n  position = position.rotate(getDynamic(parent.data.rotation.rotation));\n  position = position.add(getDynamic(parent.data.position.position));\n  manager.addComponent(entity, PositionComponent, {\n    position,\n  });\n  manager.addComponent(entity, RotationComponent, {\n    rotation: parent.data.rotation.rotation,\n  });\n  manager.addComponent(entity, RotationTargetComponent, {\n    target: () => {\n      if (!target.active) {\n        const pos = entity.data.position.position;\n        manager.removeEntity(entity);\n        return pos;\n      }\n      return target.data.position.position;\n    },\n  });\n  manager.addComponent(entity, VelocityComponent);\n  manager.addComponent(entity, VelocityTargetComponent, {\n    target: () => {\n      if (!target.active) {\n        const pos = entity.data.position.position;\n        manager.removeEntity(entity);\n        return pos;\n      }\n      return target.data.position.position;\n    },\n    velocity: parent.data.weapon.projectileType.speed,\n  });\n  manager.addComponent(entity, SpriteComponent, {\n    source: tex,\n    rotationOffset: 90,\n  });\n  manager.addComponent(entity, SpawnerComponent, {\n    producer: makeSmokeTrail,\n    count: 1,\n    rate: 0.1,\n  });\n  manager.addComponent(entity, DamageComponent, {\n    damage: parent.data.weapon.projectileType.damage,\n  });\n  if (parent.data.weapon.projectileType.splashRadius >= 0.01) {\n    manager.addComponent(entity, SplashDamageComponent, {\n      target: weapon.target,\n      radius: weapon.projectileType.splashRadius,\n    });\n  } else {\n    manager.addComponent(entity, DamageTargetComponent, {\n      target: weapon.target,\n    });\n  }\n  manager.addComponent(entity, LifetimeComponent, {\n    lifetime: (range.range / weapon.projectileType.speed) * 1.2,\n  });\n  return entity;\n}\n","import { LifetimeComponent } from \"../../core/components/behavior/Lifetime\";\nimport { VelocityTargetComponent } from \"../../core/components/behavior/PositionTarget\";\nimport { RotationTargetComponent } from \"../../core/components/behavior/RotationTarget\";\nimport SpawnerComponent from \"../../core/components/behavior/Spawner\";\nimport { PositionComponent } from \"../../core/components/data/Position\";\nimport { RotationComponent } from \"../../core/components/data/Rotation\";\nimport { VelocityComponent } from \"../../core/components/data/Velocity\";\nimport SpriteComponent from \"../../core/components/rendering/Sprite\";\nimport { getDynamic } from \"../../core/data/DynamicConstant\";\nimport { ECSManager } from \"../../core/ecs/ECSManager\";\nimport { Entity } from \"../../core/ecs/Entity\";\nimport Vector2 from \"../../core/geometry/Vector2\";\nimport { makeSmokeTrail } from \"../../core/prefabs/SmokeParticle\";\nimport { Texture } from \"../../core/rendering/Texture\";\nimport DamageComponent from \"../components/Damage\";\nimport DamageTargetComponent from \"../components/DamageTarget\";\nimport SplashDamageComponent from \"../components/SplashDamage\";\nimport { WeaponEntity } from \"../components/Weapon\";\n\nconst tex = new Texture(\"assets/SwarmMissile.png\");\n\nexport function swarmMissile(\n  parent: WeaponEntity,\n  manager: ECSManager\n): Entity {\n  const id = manager.createEntity();\n  const entity = manager.getEntity(id);\n  const target = parent.data.weapon.target;\n  const { weapon, range } = parent.data;\n  let position = Vector2.ZERO;\n  position = position.add(\n    parent.data.weapon.barrelOffsets[parent.data.weapon.barrel]\n  );\n  position = position.rotate(getDynamic(parent.data.rotation.rotation));\n  position = position.add(getDynamic(parent.data.position.position));\n  manager.addComponent(entity, PositionComponent, {\n    position,\n  });\n  manager.addComponent(entity, RotationComponent, {\n    rotation: parent.data.rotation.rotation,\n  });\n  manager.addComponent(entity, RotationTargetComponent, {\n    target: () => {\n      if (!target.active) {\n        const pos = entity.data.position.position;\n        manager.removeEntity(entity);\n        return pos;\n      }\n      return target.data.position.position;\n    },\n  });\n  manager.addComponent(entity, VelocityComponent);\n  manager.addComponent(entity, VelocityTargetComponent, {\n    target: () => {\n      if (!target.active) {\n        const pos = entity.data.position.position;\n        manager.removeEntity(entity);\n        return pos;\n      }\n      return target.data.position.position;\n    },\n    velocity: parent.data.weapon.projectileType.speed,\n  });\n  manager.addComponent(entity, SpriteComponent, {\n    source: tex,\n    rotationOffset: 90,\n  });\n  manager.addComponent(entity, SpawnerComponent, {\n    producer: makeSmokeTrail,\n    count: 1,\n    rate: 0.1,\n  });\n  manager.addComponent(entity, DamageComponent, {\n    damage: parent.data.weapon.projectileType.damage,\n  });\n  if (parent.data.weapon.projectileType.splashRadius >= 0.01) {\n    manager.addComponent(entity, SplashDamageComponent, {\n      target: weapon.target,\n      radius: weapon.projectileType.splashRadius,\n    });\n  } else {\n    manager.addComponent(entity, DamageTargetComponent, {\n      target: weapon.target,\n    });\n  }\n  manager.addComponent(entity, LifetimeComponent, {\n    lifetime: (range.range / weapon.projectileType.speed) * 1.2,\n  });\n  return entity;\n}\n","import { PositionComponent } from \"../../core/components/data/Position\";\nimport { getDynamic } from \"../../core/data/DynamicConstant\";\nimport { Entity } from \"../../core/ecs/Entity\";\nimport { BaseSystem } from \"../../core/ecs/System\";\nimport { VirtualCanvas } from \"../../core/rendering/VirtualCanvas\";\nimport TurretBaseComponent, {\n  TurretBaseEntity,\n} from \"../components/BaseComponent\";\nimport Vector2 from \"../../core/geometry/Vector2\";\nimport { FootprintComponent } from \"../../core/components/data/Footprint\";\nimport { Basis } from \"../../core/ecs/decorators/Basis\";\nimport { Required } from \"../../core/ecs/decorators/Required\";\n\n@Basis(TurretBaseComponent)\n@Required([FootprintComponent, PositionComponent])\nexport class TurretBaseRenderSystem extends BaseSystem {\n  private readonly virtualCanvas: VirtualCanvas;\n\n  constructor(virtualCanvas: VirtualCanvas) {\n    super();\n    this.virtualCanvas = virtualCanvas;\n  }\n\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const spriteEntity = entity as TurretBaseEntity;\n    const { turretBase, footprint, position } = spriteEntity.data;\n    this.virtualCanvas.drawImage(\n      turretBase.source,\n      getDynamic(position.position),\n      Vector2.matching(footprint.size * 1.5)\n    );\n  }\n}\n","import { VelocityTargetComponent } from \"../../core/components/behavior/PositionTarget\";\nimport { Basis } from \"../../core/ecs/decorators/Basis\";\nimport { Required } from \"../../core/ecs/decorators/Required\";\nimport { Entity } from \"../../core/ecs/Entity\";\nimport { BaseSystem } from \"../../core/ecs/System\";\nimport DamageComponent from \"../components/Damage\";\nimport DamageTargetComponent, {\n  DamageTargetEntity,\n} from \"../components/DamageTarget\";\n\n@Basis(DamageTargetComponent)\n@Required([VelocityTargetComponent, DamageComponent])\nexport class DamageTargetSystem extends BaseSystem {\n  onManagerAwake() {\n    this.listen(\"velocityTarget:reached\");\n  }\n\n  onEvent(_: string, entity: DamageTargetEntity) {\n    if (!entity.active) {\n      this.manager.removeEntity(entity);\n      return;\n    }\n    const { damageTarget, damage } = entity.data;\n    damageTarget.target.data.health.health -= damage.damage;\n    this.manager.removeEntity(entity);\n  }\n}\n","import { intersection } from \"lodash\";\nimport { LifetimeComponent } from \"../../core/components/behavior/Lifetime\";\nimport { VelocityTargetComponent } from \"../../core/components/behavior/PositionTarget\";\nimport SpawnerComponent from \"../../core/components/behavior/Spawner\";\nimport { PositionComponent } from \"../../core/components/data/Position\";\nimport { RotationComponent } from \"../../core/components/data/Rotation\";\nimport { VelocityComponent } from \"../../core/components/data/Velocity\";\nimport LifetimeRenderComponent from \"../../core/components/rendering/LifetimeRender\";\nimport SpriteComponent from \"../../core/components/rendering/Sprite\";\nimport { DynamicConstant, getDynamic } from \"../../core/data/DynamicConstant\";\nimport { Basis } from \"../../core/ecs/decorators/Basis\";\nimport { Required } from \"../../core/ecs/decorators/Required\";\nimport { BaseSystem } from \"../../core/ecs/System\";\nimport { PointRadiusPointCollision } from \"../../core/geometry/Collision\";\nimport Vector2 from \"../../core/geometry/Vector2\";\nimport { random } from \"../../core/Random\";\nimport { Texture } from \"../../core/rendering/Texture\";\nimport CreepComponent, { CreepEntity } from \"../components/Creep\";\nimport DamageComponent from \"../components/Damage\";\nimport SplashDamageComponent, {\n  DamageSplashEntity,\n} from \"../components/SplashDamage\";\n\n@Basis(SplashDamageComponent)\n@Required([VelocityTargetComponent, DamageComponent])\nexport class SplashDamageSystem extends BaseSystem {\n  private targets: Array<CreepEntity> = [];\n  private fireTex = new Texture(\"assets/fire.png\");\n\n  onManagerAwake(): void {\n    this.listen(\"velocityTarget:reached\");\n  }\n\n  systemUpdate(): void {\n    this.targets = this.manager.getEntitiesWithComponent(\n      CreepComponent\n    ) as Array<CreepEntity>;\n  }\n\n  onEvent(_: string, entity: DamageSplashEntity): void {\n    if (!entity.active) {\n      this.manager.removeEntity(entity);\n      return;\n    }\n    const { splashDamage, damage } = entity.data;\n    for (let entityIdx = 0; entityIdx < this.targets.length; entityIdx++) {\n      const target = this.targets[entityIdx];\n      // Something got removed\n      if (!target.active || target.data.creep === undefined) {\n        continue;\n      }\n\n      // Whatever we were following died\n      if (\n        !splashDamage.target.active ||\n        splashDamage.target.data.position === undefined\n      ) {\n        if (\n          PointRadiusPointCollision(\n            getDynamic(entity.data.position.position),\n            splashDamage.radius,\n            getDynamic(target.data.position.position)\n          ) &&\n          intersection(splashDamage.tags, target.data.creep.tags).length > 0\n        ) {\n          target.data.health.health -= damage.damage;\n        }\n      }\n\n      // We arrived at our position\n      if (\n        PointRadiusPointCollision(\n          getDynamic(splashDamage.target.data.position.position),\n          splashDamage.radius,\n          getDynamic(target.data.position.position)\n        ) &&\n        intersection(splashDamage.tags, target.data.creep.tags).length > 0\n      ) {\n        target.data.health.health -= damage.damage;\n      }\n    }\n    this.createExplosion(entity.data.position.position, splashDamage.radius);\n    this.manager.removeEntity(entity);\n  }\n\n  private createExplosion(pos: DynamicConstant<Vector2>, radius: number) {\n    const position = getDynamic(pos);\n    const id = this.manager.createEntity();\n    this.manager.addComponent(id, PositionComponent, {\n      position,\n    });\n    this.manager.addComponent(id, LifetimeComponent, {\n      lifetime: 1,\n    });\n    this.manager.addComponent(id, SpawnerComponent, {\n      count: 5,\n      rate: 0.1,\n      producer: () => {\n        const id = this.manager.createEntity();\n        const rotVec = Vector2.fromAngle(random.gaussian() * 720, radius);\n        this.manager.addComponent(id, PositionComponent, {\n          position,\n        });\n        this.manager.addComponent(id, VelocityComponent, {\n          velocity: rotVec,\n        });\n        this.manager.addComponent(id, RotationComponent);\n        this.manager.addComponent(id, LifetimeComponent, {\n          lifetime: 1,\n        });\n        this.manager.addComponent(id, SpriteComponent, {\n          source: this.fireTex,\n          size: Vector2.matching(0.25),\n        });\n        this.manager.addComponent(id, LifetimeRenderComponent);\n      },\n    });\n  }\n}\n","import { getDynamic } from \"../../core/data/DynamicConstant\";\nimport { Entity } from \"../../core/ecs/Entity\";\nimport { BaseSystem } from \"../../core/ecs/System\";\nimport { Basis } from \"../../core/ecs/decorators/Basis\";\nimport WeaponComponent, { WeaponEntity } from \"../components/Weapon\";\nimport { Required } from \"../../core/ecs/decorators/Required\";\nimport { RotationTargetComponent } from \"../../core/components/behavior/RotationTarget\";\nimport CreepComponent, { CreepEntity } from \"../components/Creep\";\nimport { PointRadiusPointCollision as pointRadiusPointCollision } from \"../../core/geometry/Collision\";\nimport { intersection } from \"lodash\";\n\n@Basis(WeaponComponent)\n@Required([RotationTargetComponent])\nexport class WeaponSystem extends BaseSystem {\n  private creeps: Array<CreepEntity>;\n\n  onManagerAwake(): void {\n    this.listen(\"rotationTarget:reached\", true);\n  }\n\n  onEvent(eventName: string, entity: WeaponEntity): void {\n    entity.data.weapon.arcReached = true;\n  }\n\n  systemUpdate(): void {\n    this.creeps = this.manager.getEntitiesWithComponent(\n      CreepComponent\n    ) as Array<CreepEntity>;\n  }\n\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as WeaponEntity;\n    const { weapon, rotationTarget } = targetEntity.data;\n    if (!weapon.canFire && this.checkInterval(deltaTime, weapon)) {\n      weapon.canFire = true;\n    }\n\n    if (weapon.target === undefined) {\n      weapon.target = null;\n    }\n\n    let best = weapon.target;\n\n    const bestInRange = this.creepInRange(targetEntity, best, 1);\n    for (let creepIdx = 0; creepIdx < this.creeps.length; creepIdx++) {\n      const creep = this.creeps[creepIdx];\n      if (!this.isValidCreep(creep)) {\n        continue;\n      }\n\n      const tagIntersection = intersection(\n        targetEntity.data.weapon.tags,\n        creep.data.creep.tags\n      );\n      if (\n        this.creepInRange(targetEntity, creep, 1) &&\n        tagIntersection.length > 0\n      ) {\n        if (!this.isValidCreep(best) || !bestInRange) {\n          best = creep;\n        } else if (\n          creep.data.pathFollower.point > best.data.pathFollower.point\n        ) {\n          best = this.creeps[creepIdx];\n        }\n      }\n    }\n\n    weapon.target = best;\n    if (best === null || !best.active) {\n      return;\n    }\n\n    rotationTarget.target = best.data.position.position;\n\n    if (weapon.canFire && this.creepInRange(targetEntity, best)) {\n      // Fire\n      if (weapon.arcReached) {\n        weapon.projectile(targetEntity, this.manager);\n        weapon.canFire = false;\n        weapon.barrel = (weapon.barrel + 1) % weapon.barrelOffsets.length;\n        this.manager.emitEvent(\"weapon:fire\", targetEntity);\n      }\n    }\n    weapon.arcReached = false;\n  }\n\n  private creepInRange(\n    weapon: WeaponEntity,\n    creep: CreepEntity,\n    offset = 0\n  ): boolean {\n    if (!this.isValidCreep(creep)) {\n      return false;\n    }\n    const pos = getDynamic(weapon.data.position.position);\n    const creepPos = getDynamic(creep.data.position.position);\n    return pointRadiusPointCollision(\n      pos,\n      weapon.data.range.range + offset,\n      creepPos\n    );\n  }\n\n  private isValidCreep(entity: CreepEntity) {\n    return (\n      entity !== null &&\n      entity !== undefined &&\n      entity.active &&\n      entity.data.creep !== undefined\n    );\n  }\n}\n","import { Texture } from \"../../core/rendering/Texture\";\nimport { TowerType } from \"../types/TowerType\";\n\nconst t2 = new Texture(\"assets/turret-1-2.png\");\nconst t3 = new Texture(\"assets/turret-1-3.png\");\n\nexport const MinigunTower: TowerType = {\n  name: \"Rifle Tower\",\n  description: \"Short-range tower\",\n  size: 2,\n  range: 4,\n  rotationRate: 360,\n  fireRate: 1,\n  cost: 5,\n  projectile: {\n    speed: 50,\n    damage: 2,\n    splashRadius: 0,\n  },\n  levelSprites: [\"tower-1-1\", \"tower-1-2\", \"tower-1-3\"],\n  tags: [\"ground\"],\n  upgrades: [\n    {\n      cost: 10,\n      dataDelta: {\n        weapon: { projectileType: { damage: 5 }, rate: 0.8 },\n        sprite: { source: t2 },\n      },\n    },\n    {\n      cost: 20,\n      dataDelta: {\n        weapon: { projectileType: { damage: 7 } },\n        sprite: { source: t3 },\n        range: { range: 5 },\n      },\n    },\n  ],\n  projectileSpawner: \"bullet\",\n};\n","import { Texture } from \"../../core/rendering/Texture\";\nimport { TowerType } from \"../types/TowerType\";\n\nconst t2 = new Texture(\"assets/turret-2-2.png\");\nconst t3 = new Texture(\"assets/turret-2-3.png\");\n\nexport const MissileTower: TowerType = {\n  name: \"MissileTower\",\n  description: \"Long-range splash tower\",\n  size: 2,\n  range: 8,\n  rotationRate: 90,\n  fireRate: 1,\n  cost: 20,\n  projectile: {\n    speed: 20,\n    damage: 5,\n    splashRadius: 1,\n  },\n  levelSprites: [\"tower-2-1\", \"tower-2-2\", \"tower-2-3\"],\n  tags: [\"ground\"],\n  upgrades: [\n    {\n      cost: 20,\n      dataDelta: {\n        weapon: {\n          projectileType: {\n            damage: 10,\n            splashRadius: 1.25,\n          },\n        },\n        sprite: {\n          source: t2,\n        },\n      },\n    },\n    {\n      cost: 40,\n      dataDelta: {\n        weapon: {\n          projectileType: {\n            damage: 10,\n            splashRadius: 2,\n          },\n        },\n        sprite: {\n          source: t3,\n        },\n      },\n    },\n  ],\n  projectileSpawner: \"missile\",\n};\n","import { Texture } from \"../../core/rendering/Texture\";\nimport { TowerType } from \"../types/TowerType\";\n\nconst t2 = new Texture(\"assets/turret-4-2.png\");\nconst t3 = new Texture(\"assets/turret-4-3.png\");\n\nexport const SniperTower: TowerType = {\n  name: \"Sniper Tower\",\n  description: \"Long-range slow-firing tower.\",\n  size: 2,\n  range: 12,\n  rotationRate: 45,\n  fireRate: 3.0,\n  cost: 40,\n  projectile: {\n    speed: 40,\n    damage: 10,\n    splashRadius: 0,\n  },\n  levelSprites: [\"tower-4-1\", \"tower-4-2\", \"tower-4-3\"],\n  tags: [\"air\", \"ground\"],\n  upgrades: [\n    {\n      cost: 50,\n      dataDelta: {\n        weapon: {\n          projectileType: { damage: 15 },\n          rate: 2.5,\n        },\n        rotationTarget: {\n          turnRate: 60,\n        },\n        range: {\n          range: 13,\n        },\n        sprite: {\n          source: t2,\n        },\n      },\n    },\n    {\n      cost: 100,\n      dataDelta: {\n        weapon: {\n          projectileType: { damage: 20, splashRadius: 0.5 },\n        },\n        rotationTarget: {\n          turnRate: 90,\n        },\n        range: {\n          range: 15,\n        },\n        sprite: {\n          source: t3,\n        },\n      },\n    },\n  ],\n  projectileSpawner: \"bullet\",\n};\n","import Vector2 from \"../../core/geometry/Vector2\";\nimport { Texture } from \"../../core/rendering/Texture\";\nimport { TowerType } from \"../types/TowerType\";\n\nconst t2 = new Texture(\"assets/turret-3-2.png\");\nconst t3 = new Texture(\"assets/turret-3-3.png\");\n\nexport const SwarmerTower: TowerType = {\n  name: \"Swarmer Tower\",\n  description: \"Rapidfire Anti-Air Tower\",\n  size: 2,\n  range: 5,\n  rotationRate: 270,\n  fireRate: 0.5,\n  cost: 20,\n  projectile: {\n    speed: 20,\n    damage: 5,\n    splashRadius: 0.2,\n  },\n  barrels: [new Vector2(0.2, 0.1), new Vector2(0.2, 0.1)],\n  levelSprites: [\"tower-3-1\", \"tower-3-2\", \"tower-3-3\"],\n  tags: [\"air\"],\n  upgrades: [\n    {\n      cost: 25,\n      dataDelta: {\n        weapon: {\n          rate: 0.25,\n          range: 6,\n        },\n        sprite: {\n          source: t2,\n        },\n      },\n    },\n    {\n      cost: 50,\n      dataDelta: {\n        weapon: {\n          range: 7,\n          projectileType: {\n            damage: 10,\n          },\n        },\n        sprite: {\n          source: t3,\n        },\n        rotationTarget: {\n          turnRate: 360,\n        },\n      },\n    },\n  ],\n  projectileSpawner: \"swarmMissile\",\n};\n","import { AbstractClickComponent } from \"../../core/components/behavior/click/AbstractClick\";\nimport { ClickableComponent } from \"../../core/components/behavior/click/Clickable\";\nimport { RotationTargetComponent } from \"../../core/components/behavior/RotationTarget\";\nimport { FootprintComponent } from \"../../core/components/data/Footprint\";\nimport { NameComponent } from \"../../core/components/data/Name\";\nimport { PositionComponent } from \"../../core/components/data/Position\";\nimport { RangeComponent } from \"../../core/components/data/Range\";\nimport { RotationComponent } from \"../../core/components/data/Rotation\";\nimport { ValueComponent } from \"../../core/components/data/Value\";\nimport SellableComponent from \"../../core/components/marker/Sellable\";\nimport SpriteComponent from \"../../core/components/rendering/Sprite\";\nimport { DynamicConstant, getDynamic } from \"../../core/data/DynamicConstant\";\nimport { ECSManager } from \"../../core/ecs/ECSManager\";\nimport Vector2 from \"../../core/geometry/Vector2\";\nimport TurretBaseComponent from \"../components/BaseComponent\";\nimport WeaponComponent from \"../components/Weapon\";\nimport { GameModel } from \"../GameModel\";\nimport { bullet } from \"../prefabs/Bullet\";\nimport { TowerType } from \"../types/TowerType\";\nimport { Texture } from \"../../core/rendering/Texture\";\nimport { EntityProducer } from \"../../core/ecs/EntityProducer\";\nimport { missile } from \"../prefabs/Rocket\";\nimport { RangeDisplayComponent } from \"../../core/components/rendering/RangeDisplay\";\nimport { Pathfinder } from \"../../core/data/Pathfinder\";\nimport { Direction } from \"../../core/geometry/Direction\";\nimport CreepComponent, { CreepEntity } from \"../components/Creep\";\nimport { swarmMissile } from \"../prefabs/SwarmMissile\";\nimport UpgradeComponent from \"../../core/components/behavior/Upgrade\";\nimport { cloneDeep } from \"lodash\";\n\nexport class TowerManager {\n  private towerTextures: Record<string, Texture> = {\n    \"tower-1-1\": new Texture(\"assets/turret-1-1.png\"),\n    \"tower-1-2\": new Texture(\"assets/turret-1-2.png\"),\n    \"tower-1-3\": new Texture(\"assets/turret-1-3.png\"),\n    \"tower-2-1\": new Texture(\"assets/turret-2-1.png\"),\n    \"tower-2-2\": new Texture(\"assets/turret-2-2.png\"),\n    \"tower-2-3\": new Texture(\"assets/turret-2-3.png\"),\n    \"tower-3-1\": new Texture(\"assets/turret-3-1.png\"),\n    \"tower-3-2\": new Texture(\"assets/turret-3-2.png\"),\n    \"tower-3-3\": new Texture(\"assets/turret-3-3.png\"),\n    \"tower-4-1\": new Texture(\"assets/turret-4-1.png\"),\n    \"tower-4-2\": new Texture(\"assets/turret-4-2.png\"),\n    \"tower-4-3\": new Texture(\"assets/turret-4-3.png\"),\n  };\n  private towers: Map<string, TowerType> = new Map();\n  private upgrades: Map<string, any> = new Map();\n\n  private projectileSpawners: Record<string, EntityProducer> = {\n    bullet,\n    missile,\n    swarmMissile,\n  };\n\n  private baseSprite = new Texture(\"assets/turret-base.gif\");\n\n  constructor(private model: GameModel, private ecs: ECSManager) {}\n\n  public add(name: string, towerType: TowerType): void {\n    this.towers.set(name, towerType);\n    this.upgrades.set(name, this.combineUpgrades(towerType));\n  }\n\n  public getTower(name: string): TowerType {\n    return this.towers.get(name);\n  }\n\n  public createDemoTower(\n    position: DynamicConstant<Vector2>,\n    towerName: string\n  ): number {\n    const tower = this.towers.get(towerName);\n    const id = this.ecs.createEntity();\n    this.ecs.addComponent(id, PositionComponent, {\n      position: () =>\n        this.model\n          .getMousePosition()\n          .ceil()\n          .addConstant((1 - tower.size) / 2, (1 - tower.size) / 2),\n    });\n    this.ecs.addComponent(id, RangeComponent, {\n      range: tower.range,\n    });\n    this.ecs.addComponent(id, RotationComponent);\n    const offset = tower.size % 2 === 0 ? Vector2.matching(-0.5) : Vector2.ZERO;\n    this.ecs.addComponent(id, RangeDisplayComponent, {\n      // strokeStyle: \"#ffff\"\n      offset: offset.addConstant(0.5, 0.5),\n    });\n    this.ecs.addComponent(id, SpriteComponent, {\n      source: this.towerTextures[tower.levelSprites[0]],\n      size: Vector2.matching(tower.size),\n    });\n    this.ecs.addComponent(id, ValueComponent, {\n      value: tower.cost,\n    });\n    this.ecs.addComponent(id, WeaponComponent, {\n      projectile: bullet,\n      rate: tower.fireRate,\n      damage: tower.projectile.damage,\n      tags: tower.tags,\n      elapsed: -1,\n    });\n    return id;\n  }\n\n  public createTower(position: Vector2, towerName: string): number {\n    const tower = this.towers.get(towerName);\n    const id = this.ecs.createEntity();\n    const entity = this.ecs.getEntity(id);\n    this.ecs.addComponent(entity, PositionComponent, {\n      position,\n    });\n    this.ecs.addComponent(id, PositionComponent, {\n      position: getDynamic(position)\n        .ceil()\n        .addConstant((1 - tower.size) / 2, (1 - tower.size) / 2),\n    });\n    this.ecs.addComponent(id, RangeComponent, {\n      range: tower.range,\n    });\n    this.ecs.addComponent(id, RotationComponent);\n    this.ecs.addComponent(id, RotationTargetComponent, {\n      turnRate: tower.rotationRate,\n      strictness: 1,\n    });\n    this.ecs.addComponent(id, NameComponent, {\n      name: tower.name,\n    });\n\n    this.ecs.addComponent(id, ClickableComponent, {\n      delta: Vector2.matching(tower.size / 2),\n      offset: Vector2.matching(-0.5),\n    });\n    this.ecs.addComponent(id, AbstractClickComponent, {\n      action: () => {\n        this.model.setSelection(id);\n      },\n    });\n    this.ecs.addComponent(id, SpriteComponent, {\n      source: this.towerTextures[tower.levelSprites[0]],\n      size: Vector2.matching(tower.size),\n      rotationOffset: 90,\n    });\n    this.ecs.addComponent(id, FootprintComponent, {\n      source: this.towerTextures[tower.levelSprites[0]],\n      size: tower.size,\n    });\n    this.ecs.addComponent(id, TurretBaseComponent, {\n      source: this.baseSprite,\n    });\n    console.log(tower.tags);\n    this.ecs.addComponent(id, WeaponComponent, {\n      projectile: this.projectileSpawners[tower.projectileSpawner],\n      rate: tower.fireRate,\n      damage: tower.projectile.damage,\n      barrels: tower.barrels || [Vector2.ZERO],\n      tags: tower.tags,\n      projectileType: { ...tower.projectile },\n    });\n    this.ecs.addComponent(id, SellableComponent);\n    this.ecs.addComponent(id, ValueComponent, {\n      value: Math.floor(tower.cost * 0.8),\n    });\n    this.ecs.addComponent(id, UpgradeComponent, {\n      ...cloneDeep(this.upgrades.get(towerName)),\n    });\n    return id;\n  }\n  combineUpgrades(tower: TowerType): any {\n    const upgrades = tower.upgrades.slice();\n    const baseData: any = {};\n    let dataLayer = baseData;\n    for (const upgrade of upgrades) {\n      Object.assign(dataLayer, upgrade);\n      dataLayer.dataDelta = { ...dataLayer.dataDelta };\n      dataLayer.dataDelta.upgrade = { ...dataLayer.dataDelta.upgrade };\n      dataLayer = dataLayer.dataDelta.upgrade;\n    }\n    dataLayer.cost = 0;\n    return baseData;\n  }\n\n  public canPlace(\n    position: Vector2,\n    towerName: string,\n    dryRun = false\n  ): boolean {\n    const tower = this.towers.get(towerName);\n    if (tower === null || tower === undefined) {\n      return false;\n    }\n    console.debug(\"Tower null check passed\");\n\n    if (this.model.money < tower.cost) {\n      return false;\n    }\n    console.debug(\"Tower money check passed\");\n\n    if (position.x < 11 || position.x + tower.size > 40) {\n      return false;\n    }\n\n    if (position.y < 1 || position.y + tower.size > 30) {\n      return false;\n    }\n\n    // Check for collisions with other towers.\n    const { collides, blocked } = this.checkCollision(position.floor(), tower);\n    if (collides) {\n      return false;\n    }\n    console.debug(\"Tower collision check passed\");\n\n    // Find and check paths\n    const eastWestPath = this.model.getPath().findEastWest(blocked);\n    if (eastWestPath.length == 0) {\n      return false;\n    }\n    console.debug(\"Tower east-west path check passed\");\n\n    const northSouthPath = this.model.getPath().findNorthSouth(blocked);\n    if (northSouthPath.length == 0) {\n      return false;\n    }\n    console.debug(\"Tower north-south path check passed\");\n\n    // Update model\n    if (!dryRun) {\n      this.model.setEastWestPath(eastWestPath);\n      this.model.setNorthSouthPath(northSouthPath);\n      this.ecs\n        .getEntitiesWithComponent(CreepComponent)\n        .forEach((it: CreepEntity) => {\n          if (it !== undefined) {\n            it.data.pathFollower.invalidated = true;\n          }\n        });\n    }\n    return true;\n  }\n\n  private checkCollision(position: Vector2, tower: TowerType) {\n    const nwOffset = Math.floor((tower.size - 1) / 2);\n    const northWest = new Vector2(position.x - nwOffset, position.y - nwOffset);\n    const swOffset = Math.floor(tower.size / 2);\n    const southEast = new Vector2(position.x + swOffset, position.y + swOffset);\n    const blocked = new Set<Vector2>();\n    for (let x = northWest.x; x <= southEast.x; x++) {\n      for (let y = northWest.y; y <= southEast.y; y++) {\n        const checkVector = new Vector2(x, y);\n        if (this.model.getMap().hasEntityAt(checkVector)) {\n          blocked.clear();\n          return { collides: true, blocked };\n        }\n        blocked.add(new Vector2(x, y));\n      }\n    }\n    return { collides: false, blocked };\n  }\n}\n","import { HealthEntity } from \"../../core/components/data/Health\";\n\nexport class ProjectileType {\n  public static readonly DEFAULT = new ProjectileType();\n  speed = 5; // units per second of projectile\n  damage = 5;\n  splashRadius = 0.01;\n}\n","class Random {\n  gaussian(count = 6): number {\n    let rand = 0;\n\n    for (let i = 0; i < count; i++) {\n      rand += Math.random();\n    }\n\n    return rand / count - 0.5;\n  }\n  withoutReplacement(top: number): Array<number> {\n    const arr: Array<number> = [];\n    for (let i = 1; i <= top; i++) {\n      arr[i - 1] = i;\n    }\n    this.shuffleArray(arr);\n    return arr;\n  }\n\n  withoutReplacementGenerator(top: number): Generator<number, number, number> {\n    const arr: Array<number> = [];\n    for (let i = 1; i <= top; i++) {\n      arr[i - 1] = i;\n    }\n    this.shuffleArray(arr);\n    return (function* () {\n      for (let i = 0; i < arr.length; i++) yield arr[i];\n      while (true) yield 0;\n    })();\n  }\n\n  shuffleArray<T>(array: Array<T>) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  }\n}\n\nexport const random = new Random();\n","export class SoundEffect {\n  private el: HTMLAudioElement;\n  private ready = false;\n  private continue = false;\n  private loop = false;\n  private start = 0;\n  private end = 0;\n  private _playing = false;\n  private cutoff = 0;\n  private currentCutoffTimeout: ReturnType<typeof setTimeout>;\n  private currentLoopTimeout: ReturnType<typeof setTimeout>;\n  private currentDurationTimeout: ReturnType<typeof setTimeout>;\n  constructor(\n    source: string,\n    cutoff?: number,\n    loop = false,\n    start = 0,\n    onLoad = (duration: number) => {\n      return;\n    }\n  ) {\n    this.el = new Audio(source);\n    this.el.addEventListener(\n      \"load\",\n      (() => {\n        this.ready = true;\n        this.end = Math.min(cutoff, this.el.duration);\n        onLoad(this.getDuration());\n      }).bind(this)\n    );\n    if (cutoff) {\n      this.cutoff = cutoff;\n    }\n    this.start = start;\n    this.loop = loop;\n  }\n\n  public getDuration(): number {\n    return this.end - this.start;\n  }\n\n  play(): void {\n    this.el.play();\n    this.continue = true;\n    this.el.currentTime = this.start;\n    this._playing = true;\n    if (this.loop) {\n      this.currentLoopTimeout = setTimeout(() => {\n        if (!this.continue) return;\n        this.el.currentTime = this.start;\n        this.playRec();\n      }, this.cutoff * 1000);\n    } else if (this.cutoff > 0) {\n      clearTimeout(this.currentCutoffTimeout);\n      this.currentCutoffTimeout = setTimeout(() => {\n        this.stop();\n      }, this.cutoff * 1000);\n    } else {\n      clearTimeout(this.currentDurationTimeout);\n      this.currentDurationTimeout = setTimeout(\n        () => (this._playing = false),\n        this.el.duration * 1000\n      );\n    }\n  }\n\n  playRec(): void {\n    this.currentLoopTimeout = setTimeout(() => {\n      if (!this.continue) return;\n      this.el.currentTime = 0;\n      this.playRec();\n    }, this.cutoff * 1000);\n  }\n\n  stop(): void {\n    this.el.pause();\n    this.continue = false;\n    this._playing = false;\n    this.el.currentTime = 0;\n  }\n\n  public get playing(): boolean {\n    return this._playing;\n  }\n}\n","import { SoundEffect } from \"./SoundEffect\";\n\nexport class SoundEffectPool {\n  private pool: SoundEffect[];\n  private ids: number[];\n  private duration: number;\n  constructor(poolSize: number, effect: string, start = 0, end = 0) {\n    const baseEffect = new SoundEffect(\n      effect,\n      end,\n      false,\n      start,\n      (duration) => {\n        this.duration = duration;\n      }\n    );\n    this.pool = [baseEffect];\n    this.ids = [];\n    for (let i = 1; i < poolSize; i++) {\n      this.pool.push(new SoundEffect(effect, end, false, start));\n      this.ids.push(i);\n    }\n  }\n\n  public play() {\n    const nextId = this.ids.splice(1, 1)[0];\n    if (nextId === undefined) {\n      return; // No available elements to play\n    }\n    this.pool[nextId].play();\n    setTimeout(() => {\n      this.ids.push(nextId);\n    }, this.duration);\n  }\n}\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport Vector2 from \"../../geometry/Vector2\";\nimport { PositionEntity } from \"../data/Position\";\n\nexport type DraggableEntity = PositionEntity & {\n  data: { draggable: DraggableData };\n};\n\nexport interface DraggableData extends Record<string, unknown> {\n  dragging: boolean;\n  offset: DynamicConstant<Vector2>;\n}\n\nexport class Draggable extends Component {\n  protected defaultData(): DraggableData {\n    return {\n      dragging: false,\n      offset: Vector2.ZERO,\n    };\n  }\n\n  getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n}\n\nexport const DraggableComponent = new Draggable();\nexport default DraggableComponent;\n","import { lowerFirst } from \"lodash\";\nimport { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\n\nexport interface LifetimeData extends Record<string, unknown> {\n  lifetime: number; // seconds\n  elapsed: number; // seconds\n}\n\nexport type LifetimeEntity = Entity & { data: { lifetime: LifetimeData } };\n\nexport class Lifetime extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): LifetimeData {\n    return { lifetime: 1, elapsed: 0 };\n  }\n}\n\nexport const LifetimeComponent = new Lifetime();\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport { ECSManager } from \"../../ecs/ECSManager\";\nimport { Entity } from \"../../ecs/Entity\";\nimport { PositionEntity } from \"../data/Position\";\n\nexport interface MagnetData extends Record<string, unknown> {\n  radius: DynamicConstant<number>;\n  onSnap: (magnet: Entity, target: Entity, manager: ECSManager) => void;\n}\n\nexport type MagnetEntity = PositionEntity & { data: { magnet: MagnetData } };\nexport class Magnet extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): MagnetData {\n    return {\n      radius: 1,\n      onSnap: () => {\n        return;\n      },\n    };\n  }\n}\n\nexport const MagnetComponent = new Magnet();\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport Vector2 from \"../../geometry/Vector2\";\nimport { VelocityTargetEntity } from \"./PositionTarget\";\nimport { RotationTargetEntity } from \"./RotationTarget\";\n\nexport interface PathFollowerData extends Record<string, unknown> {\n  path: DynamicConstant<Array<DynamicConstant<Vector2>>>; // virtual coordinate units\n  invalidated: boolean;\n  point: number;\n}\n\nexport type PathFollowerEntity = RotationTargetEntity &\n  VelocityTargetEntity & { data: { pathFollower: PathFollowerData } };\n\nexport class PathFollower extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): PathFollowerData {\n    return { path: [], point: 0, invalidated: false };\n  }\n}\n\nexport const PathFollowerComponent = new PathFollower();\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\nimport Vector2 from \"../../geometry/Vector2\";\nimport { PositionEntity } from \"../data/Position\";\nimport { VelocityEntity } from \"../data/Velocity\";\n\nexport interface VelocityTargetData extends Record<string, unknown> {\n  target: DynamicConstant<Vector2>;\n  velocity: number; // virtual coordinate units per second\n  strictness: number;\n}\n\nexport type VelocityTargetEntity = Entity &\n  PositionEntity &\n  VelocityEntity & { data: { velocityTarget: VelocityTargetData } };\n\nexport class VelocityTarget extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): VelocityTargetData {\n    return { target: Vector2.ZERO, velocity: 3, strictness: 0.01 };\n  }\n}\n\nexport const VelocityTargetComponent = new VelocityTarget();\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\nimport Vector2 from \"../../geometry/Vector2\";\nimport { PositionEntity } from \"../data/Position\";\nimport { RotationEntity } from \"../data/Rotation\";\n\nexport interface RotationTargetData extends Record<string, unknown> {\n  target: DynamicConstant<Vector2>; // virtual coordinate units\n  turnRate: number; // degrees per second\n  strictness: number; // degrees\n}\n\nexport type RotationTargetEntity = Entity &\n  PositionEntity &\n  RotationEntity & { data: { rotationTarget: RotationTargetData } };\n\nexport class RotationTarget extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): RotationTargetData {\n    return { target: Vector2.ZERO, turnRate: 180, strictness: 0.05 };\n  }\n}\n\nexport const RotationTargetComponent = new RotationTarget();\n","import { lowerFirst } from \"lodash\";\nimport { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\nimport { EntityProducer } from \"../../ecs/EntityProducer\";\nimport { IntervalStorage } from \"../../ecs/System\";\nimport { PositionEntity } from \"../data/Position\";\n\nexport interface SpawnerData extends Record<string, unknown>, IntervalStorage {\n  producer: EntityProducer;\n  rate: number; // entities per second\n  elapsed: number;\n  count: number;\n  limit: number;\n  total: number;\n}\n\nexport interface ChildDataGenerator {\n  (componentName: string, parent: Entity): Record<string, unknown>;\n}\n\nexport type SpawnerEntity = PositionEntity & { data: { spawner: SpawnerData } };\n\nexport class Spawner extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): SpawnerData {\n    return {\n      rate: 1,\n      elapsed: 0,\n      count: 1,\n      producer: () => {\n        return;\n      },\n      limit: -1,\n      total: 0,\n    };\n  }\n}\n\nexport const SpawnerComponent = new Spawner();\nexport default SpawnerComponent;\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport Vector2 from \"../../geometry/Vector2\";\nimport { PositionEntity } from \"../data/Position\";\n\nexport interface StackData extends Record<string, unknown> {\n  offset: DynamicConstant<Vector2>; // virtual coordinate units\n  parent: StackEntity;\n  child: StackEntity;\n  index: number;\n}\n\nexport type StackEntity = PositionEntity & { data: { stack: StackData } };\n\nexport class Stack extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): StackData {\n    return { offset: Vector2.ZERO, parent: null, child: null, index: 0 };\n  }\n}\n\nexport const StackComponent = new Stack();\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\nimport { PositionEntity } from \"../data/Position\";\n\nexport interface UpgradeData extends Record<string, unknown> {\n  cost: DynamicConstant<number>; // currency units\n  dataDelta: DynamicConstant<Record<string, Record<string, unknown>>>;\n}\n\nexport type UpgradeEntity = Entity &\n  PositionEntity & { data: { upgrade: UpgradeData } };\n\nexport class Upgrade extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n  protected defaultData(): UpgradeData {\n    return { cost: 0, dataDelta: {} };\n  }\n}\n\nexport const UpgradeComponent = new Upgrade();\nexport default UpgradeComponent;\n","import { lowerFirst } from \"lodash\";\nimport { Component } from \"../../../ecs/Component\";\nimport { ECSManager } from \"../../../ecs/ECSManager\";\nimport { Entity } from \"../../../ecs/Entity\";\nimport { ClickableEntity } from \"./Clickable\";\n\nexport interface AbstractClickData extends Record<string, unknown> {\n  action: (entity: Entity, ecs: ECSManager) => void;\n}\n\nexport type AbstractClickEntity = ClickableEntity & {\n  data: { abstractClick: AbstractClickData };\n};\n\nexport class AbstractClick extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): AbstractClickData {\n    return {\n      action: () => {\n        return;\n      },\n    };\n  }\n}\n\nexport const AbstractClickComponent = new AbstractClick();\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../../data/DynamicConstant\";\nimport { Component } from \"../../../ecs/Component\";\nimport SelectedComponent from \"../../marker/Selected\";\nimport { ClickableEntity } from \"./Clickable\";\n\nexport interface ClickComponentAddData extends Record<string, unknown> {\n  component: DynamicConstant<Component>;\n  data: DynamicConstant<Record<string, unknown>>;\n}\n\nexport type ClickComponentAddEntity = ClickableEntity & {\n  data: { clickComponentAdd: ClickComponentAddData };\n};\n\nexport class ClickComponentAdd extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): ClickComponentAddData {\n    return {\n      component: SelectedComponent,\n      data: {},\n    };\n  }\n}\n\nexport const ClickComponentAddComponent = new ClickComponentAdd();\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../../data/DynamicConstant\";\nimport { Component } from \"../../../ecs/Component\";\nimport SelectedComponent from \"../../marker/Selected\";\nimport { ClickableEntity } from \"./Clickable\";\n\nexport interface ClickComponentToggleData extends Record<string, unknown> {\n  component: DynamicConstant<Component>;\n  data: DynamicConstant<Record<string, unknown>>;\n}\n\nexport type ClickComponentToggleEntity = ClickableEntity & {\n  data: { clickComponentToggle: ClickComponentToggleData };\n};\n\nexport class ClickComponentToggle extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): ClickComponentToggleData {\n    return {\n      component: SelectedComponent,\n      data: {},\n    };\n  }\n}\n\nexport const ClickComponentToggleComponent = new ClickComponentToggle();\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../../data/DynamicConstant\";\nimport { Component } from \"../../../ecs/Component\";\nimport { ClickableEntity } from \"./Clickable\";\n\nexport interface ClickComponentToggleMultipleData\n  extends Record<string, unknown> {\n  components: DynamicConstant<Array<Component>>;\n  data: DynamicConstant<Array<Record<string, unknown>>>;\n}\n\nexport type ClickComponentToggleMultipleEntity = ClickableEntity & {\n  data: { clickComponentToggleMultiple: ClickComponentToggleMultipleData };\n};\n\nexport class ClickComponentToggleMultiple extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): ClickComponentToggleMultipleData {\n    return {\n      components: [],\n      data: [],\n    };\n  }\n}\n\nexport const ClickComponentToggleMultipleComponent = new ClickComponentToggleMultiple();\n","import { lowerFirst } from \"lodash\";\nimport { Component } from \"../../../ecs/Component\";\nimport { ClickableEntity } from \"./Clickable\";\n\nexport interface ClickDataMutateData extends Record<string, unknown> {\n  data: Record<string, Record<string, unknown>>;\n}\n\nexport type ClickDataMutateEntity = ClickableEntity & {\n  data: { clickDataMutate: ClickDataMutateData };\n};\n\nexport class ClickDataMutate extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): ClickDataMutateData {\n    return {\n      data: {},\n    };\n  }\n}\n\nexport const ClickDataMutateComponent = new ClickDataMutate();\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../../data/DynamicConstant\";\nimport { Component } from \"../../../ecs/Component\";\nimport Vector2 from \"../../../geometry/Vector2\";\nimport { PositionEntity } from \"../../data/Position\";\n\nexport interface ClickableData extends Record<string, unknown> {\n  delta: DynamicConstant<Vector2>; // virtual coordinate units\n  offset: DynamicConstant<Vector2>;\n  thisClick: boolean;\n}\n\nexport type ClickableEntity = PositionEntity & {\n  data: { clickable: ClickableData };\n};\n\nexport class Clickable extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): ClickableData {\n    return {\n      delta: Vector2.ZERO,\n      offset: Vector2.ZERO,\n      thisClick: false,\n    };\n  }\n}\n\nexport const ClickableComponent = new Clickable();\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport Vector2 from \"../../geometry/Vector2\";\nimport { VelocityEntity } from \"./Velocity\";\n\nexport interface AccelerationData extends Record<string, unknown> {\n  acceleration: DynamicConstant<Vector2>; // virtual coordinate units per second\n}\n\nexport type AccelerationEntity = VelocityEntity & {\n  data: { acceleration: AccelerationData };\n};\n\nexport class Acceleration extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): AccelerationData {\n    return { acceleration: Vector2.ZERO };\n  }\n}\n\nexport const AccelerationComponent = new Acceleration();\n","import { lowerFirst } from \"lodash\";\nimport { Component } from \"../../ecs/Component\";\nimport { PositionEntity } from \"./Position\";\n\nexport interface FootprintData extends Record<string, unknown> {\n  size: number; // virtual coordinate units^2\n  tracked: boolean;\n}\n\nexport type FootprintEntity = PositionEntity & {\n  data: { footprint: FootprintData };\n};\n\n/**\n * Deals with grid-aligned sizes of entities.\n */\nexport class Footprint extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): FootprintData {\n    return { size: 1, tracked: false };\n  }\n}\n\nexport const FootprintComponent = new Footprint();\n","import { lowerFirst } from \"lodash\";\nimport { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\n\nexport interface HealthData extends Record<string, unknown> {\n  health: number; // health units\n  maxHealth: number;\n}\n\nexport type HealthEntity = Entity & { data: { health: HealthData } };\n\nexport class Health extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): HealthData {\n    return { health: 10, maxHealth: 10 };\n  }\n}\n\nexport const HealthComponent = new Health();\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\n\nexport interface NameData extends Record<string, unknown> {\n  name: DynamicConstant<string>;\n}\n\nexport type NameEntity = Entity & { data: { name: NameData } };\n\nexport class Name extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): NameData {\n    return { name: \"Unknown\" };\n  }\n}\n\nexport const NameComponent = new Name();\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\nimport Vector2 from \"../../geometry/Vector2\";\n\nexport interface PositionData extends Record<string, unknown> {\n  position: DynamicConstant<Vector2>; // virtual coordinate units\n}\n\nexport type PositionEntity = Entity & { data: { position: PositionData } };\n\nexport class Position extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): PositionData {\n    return { position: Vector2.ZERO };\n  }\n}\n\nexport const PositionComponent = new Position();\n","import { lowerFirst } from \"lodash\";\nimport { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\nimport { PositionEntity } from \"./Position\";\n\nexport interface RangeData extends Record<string, unknown> {\n  range: number; // virtual coordinate units per second\n}\n\nexport type RangeEntity = Entity &\n  PositionEntity & { data: { range: RangeData } };\n\nexport class Range extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): RangeData {\n    return { range: 1 };\n  }\n}\n\nexport const RangeComponent = new Range();\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\n\nexport interface RotationData extends Record<string, unknown> {\n  rotation: DynamicConstant<number>; // degrees\n}\n\nexport type RotationEntity = Entity & { data: { rotation: RotationData } };\n\nexport class Rotation extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n  protected defaultData(): RotationData {\n    return { rotation: 0 };\n  }\n}\n\nexport const RotationComponent = new Rotation();\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\n\nexport interface ValueData extends Record<string, unknown> {\n  value: DynamicConstant<number>; // virtual coordinate units\n}\n\nexport type ValueEntity = Entity & { data: { value: ValueData } };\n\nexport class Value extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): ValueData {\n    return { value: 0 };\n  }\n}\n\nexport const ValueComponent = new Value();\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\nimport Vector2 from \"../../geometry/Vector2\";\nimport { PositionEntity } from \"./Position\";\n\nexport interface VelocityData extends Record<string, unknown> {\n  velocity: DynamicConstant<Vector2>; // virtual coordinate units per second\n}\n\nexport type VelocityEntity = Entity &\n  PositionEntity & { data: { velocity: VelocityData } };\n\nexport class Velocity extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): VelocityData {\n    return { velocity: Vector2.ZERO };\n  }\n}\n\nexport const VelocityComponent = new Velocity();\n","import { Component } from \"../../ecs/Component\";\nimport { AutoName } from \"../../ecs/decorators/AutoName\";\n\n@AutoName\nexport class HealthDisplay extends Component {}\n\nexport const HealthDisplayComponent = new HealthDisplay();\nexport default HealthDisplayComponent;\n","import { lowerFirst } from \"lodash\";\nimport { Component } from \"../../ecs/Component\";\n\nexport class MagnetAttracted extends Component {\n  protected defaultData(): Record<string, unknown> {\n    return {};\n  }\n\n  getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n}\n\nexport const MagnetAttractedComponent = new MagnetAttracted();\nexport default MagnetAttractedComponent;\n","import { Component } from \"../../ecs/Component\";\nimport { AutoName } from \"../../ecs/decorators/AutoName\";\n\n@AutoName\nexport class Selected extends Component {}\n\nexport const SelectedComponent = new Selected();\nexport default SelectedComponent;\n","import { lowerFirst } from \"lodash\";\nimport { Component } from \"../../ecs/Component\";\n\nexport class Sellable extends Component {\n  protected defaultData(): Record<string, unknown> {\n    return {};\n  }\n\n  getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n}\n\nexport const SellableComponent = new Sellable();\nexport default SellableComponent;\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\nimport { Vector2 } from \"../../geometry/Vector2\";\nimport { Texture } from \"../../rendering/Texture\";\nimport { PositionEntity } from \"../data/Position\";\nimport { RotationEntity } from \"../data/Rotation\";\n\nexport interface AnimatedSpriteData extends Record<string, unknown> {\n  size: Vector2; // in virtual coordinates\n  frameSize: Vector2; // in pixel coordinates\n  source: Texture;\n  frames: Array<number>; // in seconds per frame\n  frame: number;\n  currentDuration: number; // in seconds\n  opacity: DynamicConstant<number>;\n}\n\nexport type AnimatedSpriteEntity = Entity &\n  PositionEntity &\n  RotationEntity & { data: { animatedSprite: AnimatedSpriteData } };\n\nexport class AnimatedSprite extends Component {\n  private static NoTex = new Texture(\n    \"assets/notex-anim.png\",\n    new Vector2(64, 32)\n  );\n\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): Record<string, unknown> {\n    return {\n      size: Vector2.ONES,\n      frameSize: Vector2.matching(32),\n      source: AnimatedSprite.NoTex,\n      frames: [1, 1],\n      frame: 0,\n      currentDuration: 0,\n      opacity: 1,\n    };\n  }\n}\n\nexport const AnimatedSpriteComponent = new AnimatedSprite();\nexport default AnimatedSpriteComponent;\n","import { lowerFirst } from \"lodash\";\nimport { Component } from \"../../ecs/Component\";\nimport { LifetimeEntity } from \"../behavior/Lifetime\";\nimport { SpriteEntity } from \"./Sprite\";\n\nexport type LifetimeRenderEntity = SpriteEntity & LifetimeEntity;\n\nexport class LifetimeRender extends Component {\n  protected defaultData(): Record<string, unknown> {\n    return {};\n  }\n\n  getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n}\n\nexport const LifetimeRenderComponent = new LifetimeRender();\nexport default LifetimeRenderComponent;\n","import { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\nimport Vector2 from \"../../geometry/Vector2\";\nimport { PositionEntity } from \"../data/Position\";\nimport { RotationEntity } from \"../data/Rotation\";\nimport { Texture } from \"../../rendering/Texture\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { AutoName } from \"../../ecs/decorators/AutoName\";\n\nexport interface LowSpriteData extends Record<string, unknown> {\n  size: Vector2; // in virtual coordinates\n  source: Texture;\n  offset: DynamicConstant<Vector2>; // in virtual coordinates, added to position\n}\n\nexport type LowSpriteEntity = PositionEntity & {\n  data: { lowSprite: LowSpriteData };\n};\n\n@AutoName\nexport class LowSprite extends Component {\n  private static NO_TEXTURE: Texture = undefined;\n  private static DEFAULT_SIZE = Vector2.ONES;\n\n  constructor() {\n    super();\n    if (LowSprite.NO_TEXTURE === undefined) {\n      LowSprite.NO_TEXTURE = new Texture(\n        \"assets/notex.png\",\n        Vector2.matching(32)\n      );\n    }\n  }\n\n  protected defaultData(): LowSpriteData {\n    return {\n      source: LowSprite.NO_TEXTURE,\n      size: LowSprite.DEFAULT_SIZE,\n      offset: Vector2.ZERO,\n    };\n  }\n}\n\nexport const LowSpriteComponent = new LowSprite();\nexport default LowSpriteComponent;\n","import { lowerFirst } from \"lodash\";\nimport { Component } from \"../../ecs/Component\";\n\nexport class PositionDebug extends Component {\n  protected defaultData(): Record<string, unknown> {\n    return {};\n  }\n\n  getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n}\n\nexport const PositionDebugComponent = new PositionDebug();\nexport default PositionDebugComponent;\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\nimport Vector2 from \"../../geometry/Vector2\";\nimport { PositionEntity } from \"../data/Position\";\nimport { RangeEntity } from \"../data/Range\";\n\nexport interface RangeDisplayData extends Record<string, unknown> {\n  strokeStyle: string;\n  fillStyle: string;\n  lineWidth: number;\n  offset: DynamicConstant<Vector2>;\n}\n\nexport type RangeDisplayEntity = Entity &\n  PositionEntity &\n  RangeEntity & { data: { rangeDisplay: RangeDisplayData } };\n\nexport class RangeDisplay extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): RangeDisplayData {\n    return {\n      range: 1,\n      strokeStyle: \"#ff0000ff\",\n      fillStyle: \"#ffffff00\",\n      lineWidth: 0,\n      offset: Vector2.ZERO,\n    };\n  }\n}\n\nexport const RangeDisplayComponent = new RangeDisplay();\n","import { lowerFirst } from \"lodash\";\nimport { Component } from \"../../ecs/Component\";\n\nexport class RotationDebug extends Component {\n  protected defaultData(): Record<string, unknown> {\n    return {};\n  }\n\n  getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n}\n\nexport const RotationDebugComponent = new RotationDebug();\nexport default RotationDebugComponent;\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\nimport Vector2 from \"../../geometry/Vector2\";\nimport { PositionEntity } from \"../data/Position\";\nimport { RangeEntity } from \"../data/Range\";\n\nexport interface SelectionDisplayData extends Record<string, unknown> {\n  strokeStyle: string;\n  fillStyle: string;\n  lineWidth: number;\n  offset: DynamicConstant<Vector2>;\n  radius: DynamicConstant<number>;\n}\n\nexport type SelectionDisplayEntity = Entity &\n  PositionEntity &\n  RangeEntity & { data: { selectionDisplay: SelectionDisplayData } };\n\nexport class SelectionDisplay extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): SelectionDisplayData {\n    return {\n      range: 1,\n      strokeStyle: \"#ff0000ff\",\n      fillStyle: \"#ffffff00\",\n      lineWidth: 0,\n      offset: Vector2.ZERO,\n      radius: 1,\n    };\n  }\n}\n\nexport const SelectionDisplayComponent = new SelectionDisplay();\n","import { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\nimport Vector2 from \"../../geometry/Vector2\";\nimport { PositionEntity } from \"../data/Position\";\nimport { RotationEntity } from \"../data/Rotation\";\nimport { Texture } from \"../../rendering/Texture\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { AutoName } from \"../../ecs/decorators/AutoName\";\n\nexport interface SpriteData extends Record<string, unknown> {\n  size: Vector2; // in virtual coordinates\n  source: Texture;\n  opacity: DynamicConstant<number>; // percent\n  offset: DynamicConstant<Vector2>; // in virtual coordinates, added to position\n  rotationOffset: DynamicConstant<number>; // degrees, added to rotation\n}\n\nexport type SpriteEntity = Entity &\n  PositionEntity &\n  RotationEntity & { data: { sprite: SpriteData } };\n\n@AutoName\nexport class Sprite extends Component {\n  private static NO_TEXTURE: Texture = undefined;\n  private static DEFAULT_SIZE = Vector2.ONES;\n\n  constructor() {\n    super();\n    if (Sprite.NO_TEXTURE === undefined) {\n      Sprite.NO_TEXTURE = new Texture(\"assets/notex.png\", Vector2.matching(32));\n    }\n  }\n\n  protected defaultData(): SpriteData {\n    return {\n      source: Sprite.NO_TEXTURE,\n      size: Sprite.DEFAULT_SIZE,\n      opacity: 1,\n      offset: Vector2.ZERO,\n      rotationOffset: 0,\n    };\n  }\n}\n\nexport const SpriteComponent = new Sprite();\nexport default SpriteComponent;\n","import { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport { ClickableEntity } from \"../behavior/Clickable\";\nimport { lowerFirst } from \"lodash\";\n\nexport interface ClickableDisplayData extends Record<string, unknown> {\n  background: DynamicConstant<string | CanvasGradient | CanvasPattern>;\n  backgroundHover: DynamicConstant<string | CanvasGradient | CanvasPattern>;\n}\n\nexport type ClickableDisplayEntity = ClickableEntity & {\n  data: { clickableDisplay: ClickableDisplayData };\n};\n\nexport class ClickableDisplay extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): ClickableDisplayData {\n    return {\n      background: \"#77777755\",\n      backgroundHover: \"#aaaaaa55\",\n    };\n  }\n}\n\nexport const ClickableDisplayComponent = new ClickableDisplay();\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport Vector2 from \"../../geometry/Vector2\";\nimport { PositionEntity } from \"../data/Position\";\n\nexport interface RegionData extends Record<string, unknown> {\n  delta: DynamicConstant<Vector2>; // virtual coordinate units\n  fillColor: DynamicConstant<string | CanvasGradient | CanvasPattern>;\n  strokeColor: DynamicConstant<string | CanvasGradient | CanvasPattern>;\n}\n\nexport type RegionEntity = PositionEntity & {\n  data: { region: RegionData };\n};\n\nexport class Region extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): RegionData {\n    return {\n      delta: Vector2.ZERO,\n      fillColor: \"#555555\",\n      strokeColor: \"#55555500\",\n    };\n  }\n}\n\nexport const RegionComponent = new Region();\n","import { lowerFirst } from \"lodash\";\nimport { DynamicConstant } from \"../../data/DynamicConstant\";\nimport { Component } from \"../../ecs/Component\";\nimport { Entity } from \"../../ecs/Entity\";\nimport { PositionEntity } from \"../data/Position\";\n\nexport interface TextRenderData extends Record<string, unknown> {\n  text: DynamicConstant<string>; // virtual coordinate units per second,\n  style: string;\n  size: number;\n  font: string;\n  align: CanvasTextAlign;\n}\n\nexport type TextRenderEntity = Entity &\n  PositionEntity & { data: { textRender: TextRenderData } };\n\nexport class TextRender extends Component {\n  public getName(): string {\n    return lowerFirst(this.constructor.name);\n  }\n\n  protected defaultData(): TextRenderData {\n    return {\n      text: \"Sample text\",\n      style: \"#000000ff\",\n      size: 1,\n      font: \"Montserrat\",\n      align: \"center\",\n    };\n  }\n}\n\nexport const TextRenderComponent = new TextRender();\nexport default TextRenderComponent;\n","export interface ActionHandler {\n  (action: Action, data?: Record<string, unknown>): void;\n}\n\nexport class Action {\n  public _name: string;\n  private handlers: Array<ActionHandler> = [];\n\n  constructor(name: string) {\n    this._name = name;\n  }\n\n  public addHandler(handler: ActionHandler): void {\n    this.handlers.push(handler);\n  }\n\n  public invoke(data?: Record<string, unknown>): void {\n    for (let handler = 0; handler < this.handlers.length; handler++) {\n      this.handlers[handler](this, data);\n    }\n  }\n\n  public clear() {\n    this.handlers = [];\n  }\n\n  public get name(): string {\n    return this._name;\n  }\n}\n\nexport interface ImmutableActionMap {\n  invoke(name: string, data?: Record<string, unknown>): void;\n}\n\nexport class ActionMap {\n  private actions: Map<string, Action>;\n  private serializeActions: Array<string>;\n\n  constructor() {\n    this.actions = new Map();\n    this.serializeActions = [];\n  }\n\n  public createAction(name: string, serialize = false): void {\n    const action = new Action(name);\n    this.actions.set(name, action);\n    if (serialize) {\n      this.serializeActions.push(name);\n    }\n  }\n\n  public addHandler(name: string, handler: ActionHandler): void {\n    if (!this.actions.has(name)) {\n      console.warn(\"Trying to add a handler on a nonexistent action.\");\n      return;\n    }\n    this.actions.get(name).addHandler(handler);\n  }\n\n  public invoke(name: string, data?: Record<string, unknown>): void {\n    if (!this.actions.has(name)) {\n      return;\n    }\n\n    this.actions.get(name).invoke(data);\n  }\n\n  public clear(): void {\n    this.actions.clear();\n  }\n\n  public clearListeners(): void {\n    for (const action of this.actions) {\n      action[1].clear();\n    }\n  }\n\n  public serialize(): Array<string> {\n    return [...this.serializeActions];\n  }\n\n  public asImmutable(): ImmutableActionMap {\n    return this;\n  }\n}\n","import { RangeComponent } from \"../components/data/Range\";\nimport SelectedComponent from \"../components/marker/Selected\";\nimport { RangeDisplayComponent } from \"../components/rendering/RangeDisplay\";\nimport { ECSManager } from \"../ecs/ECSManager\";\nimport { Entity } from \"../ecs/Entity\";\nimport Vector2 from \"../geometry/Vector2\";\nimport { KeyboardInput, KeyboardInteraction } from \"../input/KeyboardInput\";\nimport { MouseInput, MouseInteraction } from \"../input/MouseInput\";\nimport { VirtualCanvas } from \"../rendering/VirtualCanvas\";\nimport { AbstractClickSystem } from \"../systems/AbstractClickSystem\";\nimport { AccelerationSystem } from \"../systems/AccelerationSystem\";\nimport { AnimatedSpriteRenderSystem } from \"../systems/AnimatedSpriteRenderSystem\";\nimport { ClickableDisplaySystem } from \"../systems/ClickableDisplaySystem\";\nimport { ClickableSystem } from \"../systems/ClickableSystem\";\nimport { ClickComponentAddSystem } from \"../systems/ClickComponentAddSystem\";\nimport { ClickComponentToggleMultipleSystem } from \"../systems/ClickComponentToggleMultipleSystem\";\nimport { ClickComponentToggleSystem } from \"../systems/ClickComponentToggleSystem\";\nimport { ClickDataMutateSystem } from \"../systems/ClickDataMutationSystem\";\nimport { DraggableSystem } from \"../systems/DraggableSystem\";\nimport { FootprintSystem } from \"../systems/FootprintSystem\";\nimport { HealthRenderSystem } from \"../systems/HealthDisplaySystem\";\nimport { HealthSystem } from \"../systems/HealthSystem\";\nimport { LifetimeRenderSystem } from \"../systems/LifetimeRenderSystem\";\nimport { LifetimeSystem } from \"../systems/LifetimeSystem\";\nimport { LowSpriteRenderSystem } from \"../systems/LowSpriteRenderSystem\";\nimport { MagnetSystem } from \"../systems/MagnetSystem\";\nimport { PathFollowerSystem } from \"../systems/PathFollowerSystem\";\nimport { PositionDebugSystem } from \"../systems/PositionDebugSystem\";\nimport { RangeDisplaySystem } from \"../systems/RangeDisplaySystem\";\nimport { RegionRenderSystem } from \"../systems/RegionRenderSystem\";\nimport { RotationDebugSystem } from \"../systems/RotationDebugSystem\";\nimport { RotationTargetSystem } from \"../systems/RotationTargetSystem\";\nimport { SelectionSystem } from \"../systems/SelectionRenderSystem\";\nimport { SpawnerSystem } from \"../systems/SpawnerSystem\";\nimport { SpriteRenderSystem } from \"../systems/SpriteRenderSystem\";\nimport { StackSystem } from \"../systems/StackSystem\";\nimport { TextRenderSystem } from \"../systems/TextRenderSystem\";\nimport { VelocitySystem } from \"../systems/VelocitySystem\";\nimport { VelocityTargetSystem } from \"../systems/VelocityTargetSystem\";\nimport { GameMap } from \"./GameMap\";\n\nexport abstract class BaseGameModel {\n  protected eventQueue: Array<string> = [];\n  protected ecs: ECSManager;\n  protected virtualCanvas: VirtualCanvas;\n  protected lastTime: number;\n  protected entityMap: GameMap;\n  protected running: boolean;\n  protected parentElement: HTMLElement;\n  protected readonly virtualSize: Vector2;\n  protected keys: KeyboardInput;\n  protected mouse: MouseInput;\n  protected paused = false;\n  protected timeScale = 1;\n  private keySet: Set<string>;\n  private mouseAction: string;\n  private clicksPerFrame: number;\n  protected actionSet: Set<string>;\n  private selection = -1;\n  private firstLoad = true;\n\n  protected invalidateSelection(): void {\n    this.selection = -1;\n  }\n\n  public getSelection(): Entity | null {\n    if (this.selection === -1) {\n      return null;\n    }\n    const entity = this.ecs.getEntity(this.selection, true);\n    if (entity === undefined || entity === null) {\n      return null;\n    }\n    return entity;\n  }\n\n  public setSelection(id: number): void {\n    this.selection = id;\n    const ids = this.ecs.getEntityIDsWithComponent(SelectedComponent);\n\n    for (let i = 0; i < ids.length; i++) {\n      this.ecs.removeComponent(ids[i], SelectedComponent);\n      // TODO: Move to its own function\n      if (this.ecs.hasComponent(ids[i], RangeComponent)) {\n        this.ecs.removeComponent(ids[i], RangeDisplayComponent);\n      }\n    }\n\n    if (id === -1) {\n      return;\n    }\n\n    this.ecs.addComponent(id, SelectedComponent);\n    if (this.ecs.hasComponent(id, RangeComponent)) {\n      this.ecs.addComponent(id, RangeDisplayComponent);\n    }\n  }\n\n  constructor(virtualSize: Vector2) {\n    this.virtualSize = virtualSize;\n    this.ecs = new ECSManager();\n    this.virtualCanvas = new VirtualCanvas(virtualSize);\n    this.entityMap = new GameMap(Vector2.ZERO, virtualSize, this.ecs);\n    this.running = true;\n    this.keySet = new Set();\n\n    this.keys = new KeyboardInput();\n\n    this.mouse = new MouseInput();\n\n    this.setSelection = this.setSelection.bind(this);\n    this.getSelection = this.getSelection.bind(this);\n  }\n\n  public findCanvas(): void {\n    this.virtualCanvas.findCanvas();\n  }\n\n  public getMousePosition(): Vector2 {\n    return this.mouse.getMousePosition();\n  }\n\n  getMouseAction(): string {\n    return this.mouseAction;\n  }\n\n  protected updateInput(_deltaTime: number): void {\n    this.mouseAction = \"none\";\n    this.clicksPerFrame = 0;\n    this.keySet.clear();\n    this.mouse.update();\n    this.keys.update();\n  }\n\n  clearMouse(): void {\n    this.mouseAction = \"none\";\n  }\n\n  public install(element: HTMLElement): void {\n    this.virtualCanvas.install(element);\n    this.lastTime = performance.now();\n    this.parentElement = element;\n    if (this.firstLoad) {\n      this.firstInit(element);\n    }\n  }\n\n  public onFirstInit(): void {\n    return;\n  }\n\n  public firstInit(element: HTMLElement): void {\n    this.firstLoad = false;\n    this.initSystems();\n    this.mouse.install(element, this.virtualCanvas);\n    this.keys.install();\n    this.mouse.addListener((interaction: MouseInteraction) => {\n      if (interaction.leftDown) {\n        this.mouseAction = \"click\";\n        this.clicksPerFrame++;\n      }\n    });\n    this.keys.addListener((interaction: KeyboardInteraction) => {\n      if (interaction.down) {\n        this.keySet.add(interaction.key);\n      }\n    });\n  }\n\n  public uninstall(): void {\n    this.virtualCanvas.uninstall();\n    this.keys.uninstall();\n    this.ecs.clear();\n    this.parentElement = null;\n  }\n\n  protected addSystems(): void {\n    return;\n  }\n\n  private initSystems() {\n    // Input-based modification\n    this.ecs.createSystem(new ClickableSystem(this.mouse.getMousePosition), -5);\n    this.ecs.createSystem(new ClickComponentAddSystem(), -5);\n    this.ecs.createSystem(new ClickComponentToggleSystem(), -5);\n    this.ecs.createSystem(new ClickComponentToggleMultipleSystem(), -5);\n    this.ecs.createSystem(new ClickDataMutateSystem(), -5);\n    this.ecs.createSystem(new AbstractClickSystem(), -5);\n\n    // Entity creation/deletion\n    this.ecs.createSystem(new HealthSystem(), -2);\n    this.ecs.createSystem(new SpawnerSystem(), -1);\n    this.ecs.createSystem(new LifetimeSystem(), -1);\n\n    // Modifying \"base\" components\n    this.ecs.createSystem(new PathFollowerSystem(), 0);\n    this.ecs.createSystem(new StackSystem(), 0);\n    this.ecs.createSystem(new VelocityTargetSystem(), 0);\n    this.ecs.createSystem(new RotationTargetSystem(), 0);\n    this.ecs.createSystem(new MagnetSystem(), 0);\n    this.ecs.createSystem(new DraggableSystem(this.mouse.getMousePosition), 0);\n    this.ecs.createSystem(new FootprintSystem(this.entityMap), 0);\n\n    // Base components\n    this.ecs.createSystem(new AccelerationSystem());\n    this.ecs.createSystem(new VelocitySystem());\n\n    // Rendering\n    this.ecs.createSystem(new LowSpriteRenderSystem(this.virtualCanvas), 41);\n    this.ecs.createSystem(new LifetimeRenderSystem(), 40);\n    this.ecs.createSystem(new RangeDisplaySystem(this.virtualCanvas), 49);\n    this.ecs.createSystem(new SpriteRenderSystem(this.virtualCanvas), 50);\n    this.ecs.createSystem(\n      new AnimatedSpriteRenderSystem(this.virtualCanvas),\n      50\n    );\n    this.ecs.createSystem(new HealthRenderSystem(this.virtualCanvas), 50);\n    this.ecs.createSystem(new RegionRenderSystem(this.virtualCanvas), 54);\n    this.ecs.createSystem(new TextRenderSystem(this.virtualCanvas), 55);\n    this.ecs.createSystem(\n      new ClickableDisplaySystem(\n        this.mouse.getMousePosition,\n        this.virtualCanvas\n      ),\n      59\n    );\n    this.ecs.createSystem(new SelectionSystem(this.virtualCanvas), 59);\n\n    // Debug\n    this.ecs.createSystem(new RotationDebugSystem(this.virtualCanvas), 60);\n    this.ecs.createSystem(new PositionDebugSystem(this.virtualCanvas), 60);\n\n    // User-defined\n    this.addSystems();\n  }\n\n  public updateLastTime(time: number): void {\n    this.lastTime = time;\n  }\n\n  public updateRawTime(time: number): void {\n    const deltaTime = time - this.lastTime;\n    this.lastTime = time;\n    this.update(deltaTime / 1000);\n  }\n\n  private update(deltaTime: number): void {\n    this.updateInput(deltaTime);\n    this.virtualCanvas.clear();\n    if (this.paused) {\n      this.ecs.update(0, this);\n    } else {\n      this.ecs.update(deltaTime * this.timeScale, this);\n    }\n    this.onUpdate(deltaTime * this.timeScale);\n  }\n\n  protected onUpdate(_deltaTime: number): void {\n    return;\n  }\n\n  public isRunning(): boolean {\n    return this.running;\n  }\n\n  public preStart(): void {\n    return;\n  }\n}\n","// eslint-disable-next-line @typescript-eslint/ban-types\nexport type DynamicConstant<T> = T extends Function ? never : T | (() => T);\n\nexport function getDynamic<T>(dc: DynamicConstant<T>): T {\n  return typeof dc === \"function\" ? dc() : dc;\n}\n","import { Entity } from \"../../core/ecs/Entity\";\nimport Vector2 from \"../../core/geometry/Vector2\";\nimport { ECSManager, EntityEvent } from \"../ecs/ECSManager\";\nimport { Pathable } from \"./Pathable\";\n\nexport class GameMap implements Pathable {\n  private positions: Map<number, Entity>;\n  private owners: Map<number, Set<number>>;\n  private entities: Set<number>;\n  private minimumBound: Vector2;\n  private maximumBound: Vector2;\n  private yScale: number;\n\n  constructor(minimum: Vector2, maximum: Vector2, manager: ECSManager) {\n    this.positions = new Map();\n    this.owners = new Map();\n    this.entities = new Set();\n    this.minimumBound = minimum;\n    this.maximumBound = maximum;\n    this.yScale = this.maximumBound.x - this.minimumBound.x;\n    manager.listenEvent(\"ecs:delete\", this.listener.bind(this));\n  }\n\n  private getCoordinate(vector: Vector2): number {\n    const x = vector.x - this.minimumBound.x;\n    const y = vector.y - this.minimumBound.y;\n    return y * (this.maximumBound.x - this.minimumBound.x) + x;\n  }\n\n  private listener(entityEvent: EntityEvent) {\n    const entityID = entityEvent.entity.id;\n    if (this.owners.has(entityID)) {\n      const spaces = this.owners.get(entityID);\n      for (const space of spaces) {\n        this.positions.delete(space);\n      }\n      this.owners.delete(entityID);\n    }\n    this.entities.delete(entityID);\n  }\n\n  public clear(): void {\n    this.positions.clear();\n  }\n\n  public checkArea(northWest: Vector2, southEast: Vector2): boolean {\n    for (let y = northWest.y; y < southEast.y; y++) {\n      for (let x = northWest.x; x < southEast.x; x++) {\n        if (this.hasEntityAt(new Vector2(x, y))) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  public getEntityAt(position: Vector2): Entity | null {\n    const coord = this.getCoordinate(position);\n    if (this.positions.has(coord)) {\n      return this.positions.get(coord);\n    }\n    return null;\n  }\n\n  public hasEntityAt(position: Vector2): boolean {\n    const coord = this.getCoordinate(position);\n    return this.positions.has(coord);\n  }\n\n  public createEntityLink(position: Vector2, entity: Entity): void {\n    if (!this.hasEntityAt(position)) {\n      const coord = this.getCoordinate(position);\n      this.positions.set(coord, entity);\n      this.entities.add(entity.id);\n      if (!this.owners.has(entity.id)) {\n        this.owners.set(entity.id, new Set());\n      }\n      this.owners.get(entity.id).add(coord);\n    } else {\n      console.warn(`Overlapping entity at ${position.toString()}`);\n    }\n  }\n\n  public region(northWest: Vector2, southEast: Vector2, entity: Entity): void {\n    for (let y = northWest.y; y < southEast.y; y++) {\n      for (let x = northWest.x; x < southEast.x; x++) {\n        const loc = northWest.addConstant(x, y);\n        this.createEntityLink(loc, entity);\n      }\n    }\n  }\n\n  public getNeighbors(position: Vector2): Array<Entity> {\n    const { x, y } = position;\n    const results: Array<Entity> = [];\n    for (let dx = -1; dx <= 1; dx++) {\n      for (let dy = -1; dy <= 1; dy++) {\n        // Skip out of bounds\n        if (x + dx > this.maximumBound.x || x + dx < this.minimumBound.x) {\n          continue;\n        }\n        if (y + dy > this.maximumBound.y || y + dy < this.minimumBound.y) {\n          continue;\n        }\n        // Skip self\n        if (x == 0 && y == 0) {\n          continue;\n        }\n        const neighborCoordinate = new Vector2(x + dx, y + dy);\n        if (!this.hasEntityAt(neighborCoordinate)) {\n          continue;\n        }\n        results.push(this.getEntityAt(neighborCoordinate));\n      }\n    }\n    return results;\n  }\n\n  isBlocked(v: Vector2): boolean {\n    return this.hasEntityAt(v);\n  }\n}\n","import Vector2 from \"../geometry/Vector2\";\nimport { Direction } from \"../geometry/Direction\";\nimport { Pathable } from \"./Pathable\";\n\nclass PathNode {\n  public readonly parent: PathNode;\n  public readonly position: Vector2;\n\n  constructor(parent: PathNode, position: Vector2) {\n    this.parent = parent;\n    this.position = position;\n  }\n}\n\nexport class Pathfinder {\n  // TODO: Replace me with A*.\n  static findPath(\n    pathable: Pathable,\n    startingPosition: Vector2,\n    endingPositions: Set<Vector2>,\n    allowedDirections = Direction.getAllCardinal(),\n    nwBound?: Vector2,\n    seBound?: Vector2,\n    blocked?: Set<Vector2>,\n    compress = true\n  ): Array<Vector2> {\n    const queue = [new PathNode(null, startingPosition)];\n    const newEndingPositions = new Set<string>();\n    const newBlocked = new Set<string>();\n    if (blocked) {\n      blocked.forEach((it) => newBlocked.add(it.toString()));\n    }\n    endingPositions.forEach((it) => newEndingPositions.add(it.toString()));\n    let visited: Set<string> = new Set<string>();\n    visited = visited.add(startingPosition.toString());\n    while (queue.length > 0) {\n      const node = queue.splice(0, 1)[0];\n      const { position } = node;\n      for (const dir of allowedDirections) {\n        const child = position.add(dir.offset);\n        if (child === undefined) {\n          console.error(\"Something went wrong:\");\n          console.error(JSON.stringify(node));\n          console.error(JSON.stringify(dir));\n          console.error(queue);\n          continue;\n        }\n\n        if (visited.has(child.toString())) {\n          continue;\n        }\n        visited.add(child.toString());\n\n        if ((nwBound && child.x < nwBound.x) || child.y < nwBound.y) {\n          continue;\n        }\n\n        if ((seBound && child.x > seBound.x) || child.y > seBound.y) {\n          continue;\n        }\n\n        if (pathable.isBlocked(child) || newBlocked.has(child.toString())) {\n          continue;\n        }\n\n        const path = new PathNode(node, child);\n        if (newEndingPositions.has(child.toString())) {\n          return Pathfinder.fromPath(path, compress);\n        }\n        visited = visited.add(child.toString());\n        queue.push(path);\n      }\n    }\n    console.log(\"No path found.\");\n    return [];\n  }\n\n  private static fromPath(path: PathNode, compress: boolean): Array<Vector2> {\n    let current = path;\n    let res: Array<Vector2> = [];\n    while (current != null) {\n      res = [current.position, ...res];\n      current = current.parent;\n    }\n    if (compress) {\n      const newSolution = [res[0]];\n      for (let i = 1; i < res.length - 1; i++) {\n        const prev = newSolution[newSolution.length - 1];\n        const curr = res[i];\n        const next = res[i + 1];\n        const prevDelta = curr.subtract(prev).normalize();\n        const newDelta = next.subtract(curr).normalize();\n        // Same direction?\n        if (!prevDelta.equals(newDelta)) {\n          newSolution.push(curr);\n          i++;\n        }\n      }\n      newSolution.push(res[res.length - 1]);\n      return newSolution;\n    }\n    return res;\n  }\n}\n","export abstract class Component {\n  public abstract getName(): string;\n  protected defaultData(): Record<string, unknown> {\n    return {};\n  }\n\n  public init(initialData?: Record<string, unknown>): Record<string, unknown> {\n    return Object.assign(this.defaultData(), initialData || {});\n  }\n}\n","import { BaseGameModel } from \"../data/BaseGameModel\";\nimport { Component } from \"./Component\";\nimport { Entity } from \"./Entity\";\nimport { System } from \"./System\";\n\nexport interface EntityEvent {\n  event: string;\n  entity: Entity;\n  extra?: Record<string, unknown>;\n}\n\ninterface EntityEventListener {\n  (event: EntityEvent): void;\n}\n\nexport type EntityResolvable = Entity | number;\n\nexport class ECSManager {\n  private nextId = 0;\n  private entities: Map<number, Entity>;\n  private entityComponents: Map<string, Set<number>>;\n  private systems: Map<number, Set<System>>;\n  private interestedSystems: Map<string, Set<System>>;\n  private allSystems: Set<System>;\n  private systemOrder: Array<number>;\n  private availableIDs: Array<number>;\n  private events: Array<EntityEvent>;\n  private listeners: Map<string, Array<EntityEventListener>>;\n\n  constructor(initialPoolSize = 250) {\n    this.entities = new Map();\n    this.systems = new Map();\n    this.entityComponents = new Map();\n    this.allSystems = new Set();\n    this.systemOrder = [];\n    this.update = this.update.bind(this);\n    this.getEntityIDsWithComponent = this.getEntityIDsWithComponent.bind(this);\n    this.getEntitiesWithComponent = this.getEntitiesWithComponent.bind(this);\n    this.interestedSystems = new Map();\n    this.availableIDs = [];\n    this.events = [];\n    this.listeners = new Map();\n    for (let i = 0; i < initialPoolSize; i++) {\n      this.createEntity({}, false);\n      this.removeEntity(i);\n    }\n  }\n\n  public createEntity(\n    initialData?: Record<string, Record<string, unknown>>,\n    allowReuse = true\n  ): number {\n    if (this.availableIDs.length > 0 && allowReuse) {\n      const id = this.availableIDs.splice(0, 1)[0];\n      const entity = this.entities.get(id);\n      entity.data = initialData || {};\n      entity.active = true;\n      this.emitEvent(\"ecs:create\", entity);\n      return id;\n    } else {\n      const id = this.nextId++;\n      const entity = new Entity(id, initialData);\n      this.entities.set(id, entity);\n      this.emitEvent(\"ecs:create\", entity);\n      return id;\n    }\n  }\n\n  public listenEvent(event: string, listener: EntityEventListener): void {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, []);\n    }\n    this.listeners.get(event).push(listener);\n  }\n\n  public emitEvent(\n    event: string,\n    entity: Entity,\n    extra?: Record<string, unknown>\n  ): void {\n    this.events.push({ event, entity, extra });\n  }\n\n  private resolveId(entity: EntityResolvable): number {\n    if (typeof entity === \"number\" || typeof entity === \"bigint\") {\n      if (entity >= this.nextId || !this.entities.has(entity)) {\n        console.warn(`Cannot resolve entity ${entity}; it does not exist.`);\n        return -1;\n      }\n      return entity;\n    }\n    return entity.id;\n  }\n\n  private resolveEntity(\n    entity: EntityResolvable,\n    quiet = false\n  ): Entity | null {\n    if (typeof entity === \"number\" || typeof entity === \"bigint\") {\n      const entityID = entity;\n      if (entityID >= this.nextId || !this.entities.has(entityID)) {\n        if (!quiet) {\n          console.warn(`Cannot resolve entity ${entity}; it does not exist.`);\n        }\n        return null;\n      }\n      const e = this.entities.get(entity);\n      if (!e.active) {\n        if (!quiet) {\n          console.warn(`Cannot resolve entity ${entity}; it has been deleted.`);\n        }\n        return null;\n      }\n      return e;\n    }\n    return entity;\n  }\n\n  public createSystem(system: System, wave = 1): void {\n    if (!this.systems.has(wave)) {\n      this.systems.set(wave, new Set());\n      this.systemOrder.push(wave);\n      this.systemOrder.sort();\n    }\n    this.systems.get(wave).add(system);\n    this.allSystems.add(system);\n    const basis = system.getBasisComponent();\n    if (basis !== null) {\n      if (!this.interestedSystems.has(basis.getName())) {\n        this.interestedSystems.set(basis.getName(), new Set());\n      }\n      this.interestedSystems.get(basis.getName()).add(system);\n    }\n    system.setManager(this);\n  }\n\n  public removeSystem(system: System): void {\n    this.allSystems.delete(system);\n    this.systems.forEach((systemSet) => {\n      if (systemSet.has(system)) {\n        systemSet.delete(system);\n      }\n    });\n  }\n\n  public hasComponent(entity: EntityResolvable, component: Component): boolean {\n    const e = this.resolveEntity(entity);\n    if (e === null || e === undefined) {\n      return false;\n    }\n    return component.getName() in e.data;\n  }\n\n  public addComponent(\n    entityID: EntityResolvable,\n    component: Component,\n    initialData?: Record<string, unknown>\n  ): void {\n    const entity = this.resolveEntity(entityID);\n    if (entity === null) return;\n    entity.data[component.getName()] = component.init(initialData);\n\n    if (this.interestedSystems.get(component.getName()) !== undefined) {\n      for (const system of this.interestedSystems.get(component.getName())) {\n        system.notify(component.getName(), entity);\n      }\n    }\n    this.emitEvent(\"ecs:addComponent\", entity, { component });\n\n    if (!this.entityComponents.has(component.getName())) {\n      this.entityComponents.set(component.getName(), new Set());\n    }\n    this.entityComponents.get(component.getName()).add(entity.id);\n  }\n\n  public getEntity(entity: EntityResolvable, quiet = false): Entity | null {\n    return this.resolveEntity(entity, quiet);\n  }\n\n  public getEntityIDsWithComponent(component: Component): Array<number> {\n    const componentName = component.getName();\n    if (this.entityComponents.has(componentName)) {\n      const res: Array<number> = [];\n      for (const id of this.entityComponents.get(componentName)) {\n        const entity = this.resolveEntity(id, true);\n        if (entity !== null && entity.active) {\n          res.push(id);\n        }\n      }\n      return res;\n    }\n    return [];\n  }\n\n  public getEntitiesWithComponent(component: Component): Array<Entity> {\n    const componentName = component.getName();\n    if (this.entityComponents.has(componentName)) {\n      const res: Array<Entity> = [];\n      for (const id of this.entityComponents.get(componentName)) {\n        const entity = this.resolveEntity(id, true);\n        if (\n          entity !== null &&\n          entity.active &&\n          entity.data[componentName] !== undefined\n        ) {\n          res.push(entity);\n        }\n      }\n      return res;\n    }\n    return [];\n  }\n\n  public removeComponent(\n    entityID: EntityResolvable,\n    component: Component\n  ): void {\n    const entity = this.resolveEntity(entityID);\n    if (entity === null) return;\n    if (component.getName() in entity.data) {\n      delete entity.data[component.getName()];\n    }\n\n    if (!this.entityComponents.has(component.getName())) {\n      this.entityComponents.set(component.getName(), new Set());\n    }\n    this.emitEvent(\"ecs:removeComponent\", entity, { component });\n\n    this.entityComponents.get(component.getName()).delete(entity.id);\n\n    if (this.interestedSystems.has(component.getName())) {\n      const systems = this.interestedSystems.get(component.getName());\n      for (const system of systems) {\n        system.notify(\"__delete\", this.entities.get(entity.id));\n      }\n    }\n  }\n\n  public update(elapsedTime: number, model: BaseGameModel): void {\n    for (let eventIdx = 0; eventIdx < this.events.length; eventIdx++) {\n      const { event } = this.events[eventIdx];\n      if (this.listeners.has(event)) {\n        const listeners = this.listeners.get(event);\n        for (\n          let listenerIdx = 0;\n          listenerIdx < listeners.length;\n          listenerIdx++\n        ) {\n          listeners[listenerIdx](this.events[eventIdx]);\n        }\n      }\n    }\n    this.events.length = 0;\n    for (let orderIdx = 0; orderIdx < this.systemOrder.length; orderIdx++) {\n      const wave = this.systemOrder[orderIdx];\n      const systems = this.systems.get(wave);\n      for (const system of systems) {\n        system.update(elapsedTime, model);\n      }\n    }\n  }\n\n  public removeEntity(entityID: EntityResolvable): void {\n    const entity = this.resolveEntity(entityID);\n    if (entity === null) return;\n    for (const system of this.allSystems) {\n      system.notify(\"__delete\", this.entities.get(entity.id));\n    }\n    this.emitEvent(\"ecs:delete\", entity);\n    entity.data = {};\n    entity.active = false;\n    this.availableIDs.push(entity.id);\n  }\n\n  clear(): void {\n    // Notify all systems that we're done with this.\n    for (const system of this.allSystems) {\n      system.notify(\"__clear\", null);\n    }\n    // Actually remove the entity.\n    for (const entityID of this.entities.keys()) {\n      this.entities.delete(entityID);\n    }\n    this.availableIDs = [];\n    this.nextId = 0;\n  }\n}\n\nexport const DefaultManager = new ECSManager();\nexport default DefaultManager;\n","export class Entity {\n  id: number;\n  data: Record<string, Record<string, unknown>>;\n  active = true;\n\n  constructor(\n    id: number,\n    initialData?: Record<string, Record<string, unknown>>\n  ) {\n    this.id = id;\n    this.data = initialData || {};\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { BaseGameModel } from \"../data/BaseGameModel\";\nimport { Component } from \"./Component\";\nimport { ECSManager, EntityEvent } from \"./ECSManager\";\nimport { Entity } from \"./Entity\";\n\nexport interface System {\n  update(elapsedTime: number, gameMode: BaseGameModel): void;\n  notify(\n    deltaTime: string,\n    entity: Entity,\n    data?: Record<string, unknown>\n  ): void;\n  setManager(manager: ECSManager): void;\n\n  /**\n   * @returns The component that triggers interest in an entity.\n   */\n  getBasisComponent(): Component | null;\n\n  /**\n   * @returns The components that must already be present on the entity.\n   */\n  getRequiredComponents(): Set<Component>;\n\n  /**\n   * @returns The components that must not be present on the entity.\n   */\n  getExcludedComponents(): Set<Component>;\n}\n\nexport interface IntervalStorage {\n  rate: number;\n  elapsed: number;\n}\n\nexport abstract class BaseSystem implements System {\n  protected entities: Map<number, Entity> = new Map();\n  protected manager: ECSManager;\n\n  protected checkInterval(deltaTime: number, data: IntervalStorage): boolean {\n    if (deltaTime < 0) {\n      return false;\n    }\n    if (data.rate <= 0 || data.elapsed < 0) {\n      return false;\n    }\n    data.elapsed += deltaTime;\n    if (data.elapsed >= data.rate) {\n      data.elapsed -= data.rate;\n      return true;\n    }\n    return false;\n  }\n\n  public notify(\n    notification: string,\n    entity: Entity,\n    data?: Record<string, unknown>\n  ): void {\n    if (notification === \"__clear\") {\n      this.entities.clear();\n    } else if (notification === \"__delete\") {\n      this.entities.delete(entity.id);\n    } else if (notification === \"__remove_component\") {\n      const { componentName } = data;\n      const basis = this.getBasisComponent();\n      if (basis.getName() === componentName) {\n        this.entities.delete(entity.id);\n      }\n    } else if (this.checkBasis(notification, entity)) {\n      if (this.isInterested(notification, entity)) {\n        this.entities.set(entity.id, entity);\n      }\n    }\n  }\n\n  protected onManagerAwake(): void {\n    return;\n  }\n\n  public setManager(manager: ECSManager): void {\n    this.manager = manager;\n    this.onManagerAwake();\n  }\n\n  protected checkBasis(componentName: string, entity: Entity): boolean {\n    const required = this.getRequiredComponents();\n    const excluded = this.getExcludedComponents();\n    return (\n      this.checkRequired(componentName, entity, required) &&\n      this.checkExcluded(componentName, entity, excluded)\n    );\n  }\n\n  protected checkRequired(\n    componentName: string,\n    entity: Entity,\n    required: Set<Component>\n  ): boolean {\n    for (const requirement of required) {\n      if (!(requirement.getName() in entity.data)) {\n        console.warn(\n          `Could not find required component ${requirement.getName()} while adding ${componentName}; this is a required component and ${componentName} will not trigger related systems' interest.`\n        );\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected checkExcluded(\n    componentName: string,\n    entity: Entity,\n    excluded: Set<Component>\n  ): boolean {\n    for (const exclusion of excluded) {\n      if (exclusion.getName() in entity.data) {\n        console.warn(\n          `Found excluded component ${exclusion.getName()} while adding ${componentName}; this is an excluded component and ${componentName} will not trigger related systems' interest.`\n        );\n        return false;\n      }\n    }\n    return true;\n  }\n\n  public update(deltaTime: number, model: BaseGameModel): void {\n    this.systemUpdate(deltaTime, model);\n    for (const entity of this.entities.values()) {\n      this.updateEntity(deltaTime, entity, model);\n    }\n  }\n\n  protected systemUpdate(deltaTime: number, model: BaseGameModel): void {\n    return;\n  }\n\n  private listener(entityEvent: EntityEvent) {\n    const { event, entity, extra } = entityEvent;\n    if (!this.entities.has(entity.id)) {\n      return;\n    }\n    this.onEvent(event, entity, extra);\n  }\n\n  private listenerNoCheck(entityEvent: EntityEvent) {\n    const { event, entity, extra } = entityEvent;\n    this.onEvent(event, entity, extra);\n  }\n\n  protected listen(event: string, requireComponent = true): void {\n    if (requireComponent) {\n      this.manager.listenEvent(event, this.listener.bind(this));\n    } else {\n      this.manager.listenEvent(event, this.listenerNoCheck.bind(this));\n    }\n  }\n\n  protected onEvent(\n    event: string,\n    entity: Entity,\n    extra?: Record<string, unknown>\n  ): void {\n    return;\n  }\n\n  /**\n   * @returns The component that triggers interest in an entity.\n   */\n  getBasisComponent(): Component | null {\n    return null;\n  }\n\n  /**\n   * @returns The components that must already be present on the entity.\n   */\n  getRequiredComponents(): Set<Component> {\n    return new Set();\n  }\n\n  /**\n   * @returns The components that must not be present on the entity.\n   */\n  getExcludedComponents(): Set<Component> {\n    return new Set();\n  }\n\n  protected isInterested(_componentName: string, _entity: Entity): boolean {\n    return true;\n  }\n\n  protected updateEntity(\n    deltaTime: number,\n    entity: Entity,\n    mode: BaseGameModel\n  ): void {\n    return;\n  }\n}\n","import { Constructor } from \"./Constructor\";\nimport { lowerFirst } from \"lodash\";\nimport { Component } from \"../Component\";\n\nexport function AutoName(target: Constructor<Component>) {\n  return class extends target {\n    getName(): string {\n      return lowerFirst(target.name);\n    }\n  };\n}\n","import { Component } from \"../Component\";\nimport { BaseSystem } from \"../System\";\nimport { Constructor } from \"./Constructor\";\n\nexport const Basis = (\n  basisComponent: Component\n): ((target: Constructor<BaseSystem>) => void) => {\n  return function (target: Constructor<BaseSystem>) {\n    target.prototype.getBasisComponent = function (): Component {\n      return basisComponent;\n    };\n  };\n};\n","import { Component } from \"../Component\";\nimport { BaseSystem } from \"../System\";\nimport { Constructor } from \"./Constructor\";\n\nexport const Required = (\n  components: Array<Component>\n): ((target: Constructor<BaseSystem>) => void) => {\n  return function (target: Constructor<BaseSystem>) {\n    const set = new Set<Component>();\n    for (let i = 0; i < components.length; i++) {\n      set.add(components[i]);\n    }\n    target.prototype.getRequiredComponents = function (): Set<Component> {\n      return set;\n    };\n  };\n};\n","import Vector2 from \"./Vector2\";\n\nexport default class Circle {\n  private _center: Vector2;\n  private _radius: number;\n\n  constructor(center: Vector2, radius: number) {\n    this._center = center;\n    this._radius = radius;\n  }\n\n  public get center(): Vector2 {\n    return this._center;\n  }\n\n  public get radius(): number {\n    return this._radius;\n  }\n}\n","import Vector2 from \"./Vector2\";\nimport Circle from \"./Circle\";\n\n/**\n * Line-Circle Intersection\n * @source https://stackoverflow.com/questions/37224912/circle-line-segment-collision\n *\n * @param circle The circle to test for intersection.\n * @param pt1 The first point of the line.\n * @param pt2 The second point of the line.\n */\nexport function circleLineCollision(\n  circle: Circle,\n  pt1: Vector2,\n  pt2: Vector2\n): boolean {\n  const v1 = new Vector2(pt2.x - pt1.x, pt2.y - pt1.y);\n  const v2 = new Vector2(pt1.x - circle.center.x, pt1.y - circle.center.y);\n  const b = -2 * (v1.x * v2.x + v1.y * v2.y);\n  const c = 2 * (v1.x * v1.x + v1.y * v1.y);\n  const d = Math.sqrt(\n    b * b - 2 * c * (v2.x * v2.x + v2.y * v2.y - circle.radius * circle.radius)\n  );\n  if (isNaN(d)) {\n    // no intercept\n    return false;\n  }\n  // These represent the unit distance of point one and two on the line\n  const u1 = (b - d) / c;\n  const u2 = (b + d) / c;\n  if (u1 <= 1 && u1 >= 0) {\n    // If point on the line segment\n    return true;\n  }\n  if (u2 <= 1 && u2 >= 0) {\n    // If point on the line segment\n    return true;\n  }\n  return false;\n}\n\nexport function circlePointCollision(circle: Circle, point: Vector2): boolean {\n  return PointRadiusPointCollision(circle.center, circle.radius, point);\n}\n\nexport function PointRadiusPointCollision(\n  point1: Vector2,\n  radius: number,\n  point2: Vector2\n): boolean {\n  return Vector2.distance(point1, point2) <= radius;\n}\n\nexport function rectPointCollision(\n  nw1: Vector2,\n  se1: Vector2,\n  pt: Vector2\n): boolean {\n  return pt.x >= nw1.x && pt.x <= se1.x && pt.y >= nw1.y && pt.y <= se1.y;\n}\n\nexport function rectRectCollision(\n  nw1: Vector2,\n  se1: Vector2,\n  nw2: Vector2,\n  se2: Vector2\n): boolean {\n  return nw1.x <= se2.x && se1.x >= nw2.x && nw1.y <= se2.y && se1.x >= nw2.y;\n}\n","import Vector2 from \"./Vector2\";\n\nexport class Direction {\n  static readonly NORTH = new Direction(new Vector2(0, -1));\n  static readonly NORTHEAST = new Direction(new Vector2(1, -1));\n  static readonly EAST = new Direction(new Vector2(1, 0));\n  static readonly SOUTHEAST = new Direction(new Vector2(1, 1));\n  static readonly SOUTH = new Direction(new Vector2(0, 1));\n  static readonly SOUTHWEST = new Direction(new Vector2(-1, 1));\n  static readonly WEST = new Direction(new Vector2(-1, 0));\n  static readonly NORTHWEST = new Direction(new Vector2(-1, -1));\n\n  public readonly offset: Vector2;\n  private constructor(offset: Vector2) {\n    this.offset = offset;\n  }\n\n  private static all: Set<Direction> = undefined;\n  private static cardinal: Set<Direction> = undefined;\n\n  public static getAllCardinal(): Set<Direction> {\n    if (this.cardinal === undefined) {\n      this.cardinal = new Set();\n      this.cardinal.add(this.NORTH);\n      this.cardinal.add(this.EAST);\n      this.cardinal.add(this.SOUTH);\n      this.cardinal.add(this.WEST);\n    }\n    return this.cardinal;\n  }\n\n  public static getAllDirections(): Set<Direction> {\n    if (this.all === undefined) {\n      this.all = new Set();\n      this.all.add(this.NORTH);\n      this.all.add(this.NORTHEAST);\n      this.all.add(this.EAST);\n      this.all.add(this.SOUTHEAST);\n      this.all.add(this.SOUTH);\n      this.all.add(this.SOUTHWEST);\n      this.all.add(this.WEST);\n      this.all.add(this.NORTHWEST);\n    }\n    return this.all;\n  }\n}\n","/**\n * Immutable Vector2 class.\n */\nexport class Vector2 {\n  /**\n   * A constant zero vector.\n   */\n  static ZERO: Vector2 = new Vector2(0, 0);\n\n  /**\n   * A constant one vector.\n   */\n  static ONES: Vector2 = new Vector2(1, 1);\n\n  private _x = 0;\n  private _y = 0;\n\n  /**\n   * Initializes a vector with X and Y components.\n   *\n   * @param x The X component.\n   * @param y The Y component.\n   */\n  constructor(x: number, y: number) {\n    this._x = x;\n    this._y = y;\n  }\n\n  /**\n   * @returns A normalized random vector in Quadrant 1.\n   */\n  static random(): Vector2 {\n    return new Vector2(Math.random(), Math.random()).normalize();\n  }\n\n  /**\n   * @param angle The angle to create the vector from, in degrees.\n   * @returns A unit vector pointing towards the given angle.\n   */\n  static fromAngle(angle: number, scalar?: number): Vector2 {\n    return new Vector2(\n      Math.cos(angle * (Math.PI / 180)) * (scalar || 1),\n      Math.sin(angle * (Math.PI / 180)) * (scalar || 1)\n    );\n  }\n\n  /**\n   * @param number The number to put into both components of the vector.\n   * @returns A vector with both components equal to number.\n   */\n  static matching(number: number): Vector2 {\n    return new Vector2(number, number);\n  }\n\n  /**\n   * Finds the distance between two Vector2s.\n   *\n   * @param pos1 The first point.\n   * @param pos2 The second point.\n   * @returns The distance between the two points.\n   */\n  public static distance(pos1: Vector2, pos2: Vector2): number {\n    return Math.sqrt(\n      Math.pow(pos1.x - pos2.x, 2) + Math.pow(pos1.y - pos2.y, 2)\n    );\n  }\n\n  /**\n   * Finds the square distance between two Vector2s. Tends to be faster than\n   * {@link Vector2#distance}.\n   *\n   * @param pos1 The first point.\n   * @param pos2 The second point.\n   * @returns The distance between the two points.\n   */\n  public static squareDistance(pos1: Vector2, pos2: Vector2): number {\n    return Math.pow(pos1.x - pos2.x, 2) + Math.pow(pos1.y - pos2.y, 2);\n  }\n\n  get x(): number {\n    return this._x;\n  }\n\n  get y(): number {\n    return this._y;\n  }\n\n  squareMagnitude(): number {\n    return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n  }\n\n  magnitude(): number {\n    return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n  }\n\n  normalize(): Vector2 {\n    const magnitude = this.magnitude();\n    if (magnitude == 0) {\n      return Vector2.ZERO;\n    }\n    return new Vector2(this.x / magnitude, this.y / magnitude);\n  }\n\n  piecewiseScale(scalar: Vector2): Vector2 {\n    return new Vector2(this.x * scalar.x, this.y * scalar.y);\n  }\n\n  scale(scalar: number): Vector2 {\n    return new Vector2(this.x * scalar, this.y * scalar);\n  }\n\n  add(other: Vector2): Vector2 {\n    return new Vector2(this.x + other.x, this.y + other.y);\n  }\n\n  addConstant(x: number, y: number): Vector2 {\n    return new Vector2(this.x + x, this.y + y);\n  }\n\n  floor(): Vector2 {\n    return new Vector2(Math.floor(this.x), Math.floor(this.y));\n  }\n\n  ceil(): Vector2 {\n    return new Vector2(Math.ceil(this.x), Math.ceil(this.y));\n  }\n\n  /**\n   * Adds another vector to this vector, scaling the other by a given factor.\n   *\n   * @param other The other vector to add.\n   * @param scalar The amount to scale the other vector by.\n   * @returns The resulting vector of this + other * scalar.\n   */\n  addScaled(other: Vector2, scalar: number): Vector2 {\n    return new Vector2(this.x + other.x * scalar, this.y + other.y * scalar);\n  }\n\n  subtract(other: Vector2): Vector2 {\n    return new Vector2(this.x - other.x, this.y - other.y);\n  }\n\n  /**\n   * Subtracts another vector from this vector, scaling the other by a given factor.\n   *\n   * @param other The other vector to subtract.\n   * @param scalar The amount to scale the other vector by.\n   * @returns The resulting vector of this - other * scalar.\n   */\n  subtractScaled(other: Vector2, scalar: number): Vector2 {\n    return new Vector2(this.x - other.x * scalar, this.y - other.y * scalar);\n  }\n\n  rotate(degrees: number): Vector2 {\n    const rad = (degrees * Math.PI) / 180;\n    const val = new Vector2(\n      this.x * Math.cos(rad) - Math.sin(rad) * this.y,\n      this.x * Math.sin(rad) + this.y * Math.cos(rad)\n    );\n    return val;\n  }\n\n  toAngle(): number {\n    return Math.atan2(this.y, this.x) * (180 / Math.PI);\n  }\n\n  determinant(other: Vector2): number {\n    return this.x * other.y - this.y * other.x;\n  }\n\n  toString(): string {\n    return `${this.x},${this.y}`;\n  }\n\n  public equals(other: unknown): boolean {\n    return (\n      other !== undefined &&\n      typeof other === \"object\" &&\n      Object.prototype.hasOwnProperty.call(other, \"_x\") &&\n      Object.prototype.hasOwnProperty.call(other, \"_y\") &&\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore We literally test for it above\n      other.x === this.x &&\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore We literally test for it above\n      other.y === this.y\n    );\n  }\n\n  public hashCode(): number {\n    return 31 * this.x + this.y;\n  }\n}\n\nexport default Vector2;\n","export class KeyboardInput {\n  private listeners: Array<KeyboardListener> = [];\n  private events: Array<KeyboardInteraction> = [];\n  private keyListeners: Map<string, Array<KeyboardListener>> = new Map();\n  private keyPushed: Map<string, boolean> = new Map();\n\n  constructor() {\n    this.keyDown = this.keyDown.bind(this);\n    this.keyUp = this.keyUp.bind(this);\n  }\n\n  public install(): void {\n    window.addEventListener(\"keydown\", this.keyDown);\n    window.addEventListener(\"keyup\", this.keyUp);\n  }\n\n  private keyDown(evt: KeyboardEvent) {\n    this.events.push({ key: evt.key, down: true });\n  }\n\n  private keyUp(evt: KeyboardEvent) {\n    this.events.push({ key: evt.key, down: false });\n  }\n\n  public addListener(listener: KeyboardListener): void {\n    this.listeners.push(listener);\n  }\n\n  public addKeyListener(key: string, listener: KeyboardListener): void {\n    if (!this.keyListeners.has(key.toLowerCase())) {\n      this.keyListeners.set(key.toLowerCase(), []);\n    }\n    this.keyListeners.get(key.toLowerCase()).push(listener);\n  }\n\n  public clearListeners(): void {\n    this.keyListeners.clear();\n    this.listeners = [];\n  }\n\n  public update(): void {\n    for (let i = 0; i < this.events.length; i++) {\n      const event = this.events[i];\n      const key = event.key.toLowerCase();\n      if (this.keyPushed.get(key) !== event.down) {\n        this.keyPushed.set(key, event.down);\n        if (this.keyListeners.has(key)) {\n          const keyListeners = this.keyListeners.get(key);\n          for (let listener = 0; listener < keyListeners.length; listener++) {\n            keyListeners[listener](event);\n          }\n        }\n        for (let listener = 0; listener < this.listeners.length; listener++) {\n          this.listeners[listener](event);\n        }\n      }\n    }\n    this.events.length = 0;\n  }\n\n  public uninstall(): void {\n    window.removeEventListener(\"keydown\", this.keyDown);\n    window.removeEventListener(\"keyup\", this.keyUp);\n  }\n}\n\nexport interface KeyboardInteraction {\n  down: boolean;\n  key: string;\n}\n\nexport interface KeyboardListener {\n  (interaction: KeyboardInteraction): void;\n}\n","import { BaseGameModel } from \"../data/BaseGameModel\";\nimport Vector2 from \"../geometry/Vector2\";\nimport { VirtualCanvas } from \"../rendering/VirtualCanvas\";\nexport class MouseState {\n  public isLeftMouseDown = false;\n  public isRightMouseDown = false;\n  public mouseCoordinate: Vector2 = Vector2.ZERO;\n}\n\nexport class MouseInput {\n  private mouse: MouseState = new MouseState();\n  private listeners: Array<OnClickListener> = [];\n  private events: Array<MouseInteraction> = [];\n\n  constructor() {\n    this.getMousePosition = this.getMousePosition.bind(this);\n  }\n\n  public install(element: HTMLElement, virtualCanvas: VirtualCanvas) {\n    element.addEventListener(\"mousemove\", (evt) => {\n      const coordinates = virtualCanvas.getCoordinates();\n      const offset = virtualCanvas.getOffset();\n      this.mouse.mouseCoordinate = coordinates.inverseTranslate(\n        new Vector2(evt.x, evt.y).subtract(offset)\n      );\n    });\n    element.addEventListener(\"mousedown\", (_evt) => {\n      this.mouse.isLeftMouseDown = true;\n      this.events.push({\n        coordinate: this.mouse.mouseCoordinate,\n        leftDown: true,\n      });\n    });\n    element.addEventListener(\"mouseup\", (_evt) => {\n      this.mouse.isLeftMouseDown = false;\n      this.events.push({\n        coordinate: this.mouse.mouseCoordinate,\n        leftDown: false,\n      });\n    });\n  }\n\n  public addListener(listener: OnClickListener) {\n    this.listeners.push(listener);\n  }\n\n  public update() {\n    for (let i = 0; i < this.events.length; i++) {\n      const event = this.events[i];\n      for (let listener = 0; listener < this.listeners.length; listener++) {\n        this.listeners[listener](event);\n      }\n    }\n    this.events.length = 0;\n  }\n\n  public getMousePosition(): Vector2 {\n    return this.mouse.mouseCoordinate;\n  }\n}\n\nexport interface MouseInteraction {\n  coordinate: Vector2;\n  leftDown: boolean;\n}\n\nexport interface OnClickListener {\n  (interaction: MouseInteraction): void;\n}\n","import { LifetimeComponent } from \"../components/behavior/Lifetime\";\nimport LifetimeRenderComponent from \"../components/rendering/LifetimeRender\";\nimport { PositionComponent, PositionEntity } from \"../components/data/Position\";\nimport { RangeComponent } from \"../components/data/Range\";\nimport { RangeDisplayComponent } from \"../components/rendering/RangeDisplay\";\nimport { RotationComponent } from \"../components/data/Rotation\";\nimport SpriteComponent from \"../components/rendering/Sprite\";\nimport { VelocityComponent } from \"../components/data/Velocity\";\nimport { DynamicConstant, getDynamic } from \"../data/DynamicConstant\";\nimport Vector2 from \"../geometry/Vector2\";\nimport { random } from \"../Random\";\nimport { Texture } from \"../rendering/Texture\";\nimport { ECSManager } from \"../ecs/ECSManager\";\nimport { Entity } from \"../ecs/Entity\";\n\nexport function makeSmokeTrail(\n  parent: PositionEntity,\n  manager: ECSManager\n): Entity {\n  let baseVelocity = Vector2.ZERO;\n  if (\"rotation\" in parent.data) {\n    baseVelocity = Vector2.fromAngle(\n      getDynamic<number>(\n        parent.data.rotation.rotation as DynamicConstant<number>\n      )\n    );\n  }\n  if (\"velocity\" in parent.data) {\n    baseVelocity = getDynamic<Vector2>(\n      parent.data.velocity.velocity as DynamicConstant<Vector2>\n    );\n  }\n  const vel = baseVelocity\n    .scale(-1)\n    .rotate(random.gaussian() * 30)\n    .scale(1 + random.gaussian() / 2);\n  if (vel.equals(Vector2.ZERO)) return;\n\n  const entity = manager.createEntity();\n  manager.addComponent(entity, PositionComponent, {\n    position: parent.data.position.position,\n  });\n  manager.addComponent(entity, RotationComponent);\n  manager.addComponent(entity, VelocityComponent, {\n    velocity: vel,\n  });\n  manager.addComponent(entity, LifetimeComponent);\n  manager.addComponent(entity, SpriteComponent, {\n    size: Vector2.matching(0.25),\n    source: new Texture(\"assets/smoke.png\"),\n  });\n  manager.addComponent(entity, LifetimeRenderComponent);\n  return manager.getEntity(entity);\n}\n","import Vector2 from \"../geometry/Vector2\";\nimport { Texture } from \"./Texture\";\nimport { VirtualCanvas } from \"./VirtualCanvas\";\n\nexport interface EffectCreator<T> {\n  create(position: Vector2, state: T): ParticleEffect;\n}\n\nexport interface EffectMutator<T> {\n  update(particleEffect: ParticleEffect, deltaTime: number, state: T): void;\n}\n\nexport interface EffectRenderer<T> {\n  draw(\n    particleEffect: ParticleEffect,\n    virtualCanvas: VirtualCanvas,\n    state: T\n  ): void;\n}\n\nexport interface EffectManager<T>\n  extends EffectCreator<T>,\n    EffectMutator<T>,\n    EffectRenderer<T> {}\n\nexport class ParticleManager<T> {\n  private creators: Map<string, EffectCreator<T>>;\n  private mutators: Map<string, EffectMutator<T>>;\n  private renderers: Map<string, EffectRenderer<T>>;\n  private particles: Map<number, ParticleEffect>;\n  private nextParticle = 0;\n  public addEffectManager(effectName: string, manager: EffectManager<T>) {\n    if (!this.creators.has(effectName)) {\n      this.creators.set(effectName, manager);\n    }\n    if (!this.mutators.has(effectName)) {\n      this.mutators.set(effectName, manager);\n    }\n    if (!this.renderers.has(effectName)) {\n      this.renderers.set(effectName, manager);\n    }\n  }\n  public addEffect(\n    effectName: string,\n    creator: EffectCreator<T>,\n    renderer: EffectRenderer<T>,\n    mutator: EffectMutator<T>\n  ) {\n    if (!this.creators.has(effectName)) {\n      this.creators.set(effectName, creator);\n    }\n    if (!this.mutators.has(effectName)) {\n      this.mutators.set(effectName, mutator);\n    }\n    if (!this.renderers.has(effectName)) {\n      this.renderers.set(effectName, renderer);\n    }\n  }\n  createEffect(effect: string, position: Vector2, state: T) {\n    this.particles.set(\n      this.nextParticle++,\n      this.creators.get(effect).create(position, state)\n    );\n  }\n  draw(virtualCanvas: VirtualCanvas, state: T): void {\n    for (const key of this.particles.keys()) {\n      const particle = this.particles.get(key);\n      const renderer = this.renderers.get(particle.effect);\n      renderer.draw(particle, virtualCanvas, state);\n    }\n  }\n\n  update(delta: number, state: T): void {\n    for (const key of this.particles.keys()) {\n      const particle = this.particles.get(key);\n      const mutator = this.mutators.get(particle.effect);\n      mutator.update(particle, delta, state);\n    }\n  }\n}\n\nexport class ParticleEffect {\n  readonly center: Vector2;\n  readonly direction: Vector2;\n  readonly velocity: Vector2;\n  readonly lifetime: number;\n  readonly rotation: number;\n  readonly elapsedLifetime: number;\n  readonly texture: Texture;\n  readonly size: Vector2;\n  readonly effect: string;\n  constructor(\n    center: Vector2,\n    velocity: Vector2,\n    lifetime: number,\n    rotation: number,\n    texture: Texture,\n    size: Vector2,\n    effect: string\n  ) {\n    this.center = center;\n    this.velocity = velocity;\n    this.lifetime = lifetime;\n    this.rotation = rotation;\n    this.texture = texture;\n    this.size = size;\n    this.elapsedLifetime = 0;\n    this.effect = effect;\n  }\n}\n","import Vector2 from \"../geometry/Vector2\";\n\nexport class Texture {\n  size: Vector2;\n  el: HTMLImageElement;\n  ready = false;\n  constructor(texture: string, size?: Vector2) {\n    this.el = new Image();\n    this.el.src = texture;\n    this.el.addEventListener(\"load\", (evt) => {\n      this.ready = true;\n      if (!size) {\n        this.size = new Vector2(this.el.naturalWidth, this.el.naturalHeight);\n      }\n    });\n  }\n\n  get texture(): CanvasImageSource {\n    return this.el;\n  }\n}\n","import Vector2 from \"../geometry/Vector2\";\nimport { Texture } from \"./Texture\";\nimport { VirtualCoordinateSystem } from \"./VirtualCoordinate\";\n\nexport class VirtualCanvas {\n  private canvas: HTMLCanvasElement;\n  private context: CanvasRenderingContext2D;\n  private virtualSize: Vector2;\n  private aspectRatio: Vector2;\n  private offset: Vector2 = Vector2.matching(0.5);\n  private vcs: VirtualCoordinateSystem;\n  private installed = false;\n  private parent: HTMLElement;\n\n  constructor(virtualSize: Vector2) {\n    this.virtualSize = virtualSize;\n    this.aspectRatio = virtualSize.normalize();\n  }\n\n  public install(element: HTMLElement): void {\n    const canvas = document.createElement(\"canvas\");\n    this.canvas = canvas;\n    this.initCanvas();\n    element.appendChild(canvas);\n    this.parent = element;\n    this.installed = true;\n    this.resize();\n  }\n\n  private initCanvas() {\n    const canvas = this.canvas;\n    this.context = this.canvas.getContext(\"2d\");\n    canvas.width = this.virtualSize.x;\n    canvas.height = this.virtualSize.y;\n    canvas.id = \"canvas\";\n    window.addEventListener(\"resize\", this.resize.bind(this));\n  }\n\n  public drawGrid(): void {\n    for (let x = 0; x < this.virtualSize.x; x++) {\n      this.line(\n        new Vector2(x, 0),\n        new Vector2(x, this.virtualSize.y),\n        \"#000000ff\"\n      );\n    }\n    for (let y = 0; y < this.virtualSize.y; y++) {\n      this.line(\n        new Vector2(0, y),\n        new Vector2(this.virtualSize.x, y),\n        \"#000000ff\"\n      );\n    }\n  }\n\n  public findCanvas(): void {\n    const el = document.getElementById(\"canvas\");\n    if (el.nodeName.toLowerCase() !== \"canvas\") {\n      console.error(`Cannot find valid canvas, found ${el.nodeName} instead.`);\n    } else {\n      this.canvas = el as HTMLCanvasElement;\n      this.initCanvas();\n    }\n  }\n\n  public uninstall(): void {\n    this.installed = false;\n    this.parent.removeEventListener(\"resize\", this.resize);\n  }\n\n  public drawWorldText(\n    text: string,\n    position: Vector2,\n    style?: string,\n    size = 1,\n    font = \"Montserrat\",\n    textAlign: CanvasTextAlign = \"center\",\n    weight = 500\n  ): void {\n    const splits = text.trim().split(\"\\n\");\n    this.context.fillStyle = style || \"#ffffff\";\n    this.context.font = `${weight} ${\n      size * this.vcs.translateValueY(0.5)\n    }px ${font}`;\n    this.context.textAlign = textAlign;\n    for (let i = 0; i < splits.length; i++) {\n      const adjustedPosition = this.vcs.translate(\n        position.addConstant(0.5, i + 0.5)\n      );\n      this.context.fillText(splits[i], adjustedPosition.x, adjustedPosition.y);\n    }\n  }\n\n  public drawText(\n    text: string,\n    position: Vector2,\n    style?: string,\n    size = 1,\n    font = \"Montserrat\",\n    textAlign: CanvasTextAlign = \"center\",\n    weight = 500\n  ): void {\n    const splits = text.trim().split(\"\\n\");\n    this.context.fillStyle = style || \"#ffffff\";\n    this.context.font = `${weight} ${\n      size * this.vcs.translateValueY(0.5)\n    }px ${font}`;\n    this.context.textAlign = textAlign;\n    for (let i = 0; i < splits.length; i++) {\n      const adjustedPosition = this.vcs.translate(position.addConstant(0, i));\n      this.context.fillText(splits[i], adjustedPosition.x, adjustedPosition.y);\n    }\n  }\n\n  public drawImage(\n    texture: Texture,\n    position: Vector2,\n    size: Vector2,\n    rotation = 0,\n    opacity = 1\n  ): void {\n    if (!texture || !texture.ready) {\n      return;\n    }\n    this.context.globalAlpha = opacity;\n    const adjustedPosition = this.vcs.translate(position.add(this.offset));\n    const adjustedSize = this.vcs.translate(size);\n    this.context.save();\n    this.context.translate(adjustedPosition.x, adjustedPosition.y);\n    this.context.rotate((rotation * Math.PI) / 180);\n    this.context.translate(-adjustedPosition.x, -adjustedPosition.y);\n    this.context.drawImage(\n      texture.texture,\n      adjustedPosition.x - adjustedSize.x / 2,\n      adjustedPosition.y - adjustedSize.y / 2,\n      adjustedSize.x,\n      adjustedSize.y\n    );\n    this.context.restore();\n    this.context.globalAlpha = 1;\n  }\n\n  public drawCircle(\n    center: Vector2,\n    radius: number,\n    fillStyle?: string,\n    strokeStyle?: string,\n    lineWidth?: number\n  ): void {\n    const adjustedPosition = this.vcs.translate(center.add(this.offset));\n    const adjustedRadius = this.vcs.translateValueX(radius);\n\n    this.context.fillStyle = fillStyle || \"#ffffff00\";\n    this.context.beginPath();\n    this.context.arc(\n      adjustedPosition.x,\n      adjustedPosition.y,\n      adjustedRadius,\n      0,\n      2 * Math.PI\n    );\n    this.context.fill();\n\n    this.context.strokeStyle = strokeStyle || \"#ff0000\";\n    this.context.lineWidth = this.vcs.translateValueX(lineWidth) || 1;\n    this.context.arc(\n      adjustedPosition.x,\n      adjustedPosition.y,\n      adjustedRadius,\n      0,\n      2 * Math.PI\n    );\n    this.context.stroke();\n  }\n\n  public drawImageAnimated(\n    texture: Texture,\n    position: Vector2,\n    rotation: number,\n    size: Vector2,\n    frameSize: Vector2,\n    frame: number,\n    opacity = 1\n  ): void {\n    if (!texture.ready) {\n      return;\n    }\n    this.context.globalAlpha = opacity;\n    const adjustedPosition = this.vcs.translate(position.add(this.offset));\n    const adjustedSize = this.vcs.translate(size);\n    this.context.save();\n    this.context.translate(adjustedPosition.x, adjustedPosition.y);\n    this.context.rotate((rotation * Math.PI) / 180);\n    this.context.translate(-adjustedPosition.x, -adjustedPosition.y);\n    this.context.drawImage(\n      texture.texture,\n      frameSize.x * frame,\n      0,\n      frameSize.x,\n      frameSize.y,\n      adjustedPosition.x - adjustedSize.x / 2,\n      adjustedPosition.y - adjustedSize.y / 2,\n      adjustedSize.x,\n      adjustedSize.y\n    );\n    this.context.restore();\n    this.context.globalAlpha = 1;\n  }\n\n  public drawWorldRectangle(\n    p1: Vector2,\n    p2: Vector2,\n    fillStyle: string | CanvasPattern | CanvasGradient = \"#ffffff00\",\n    strokeStyle: string | CanvasPattern | CanvasGradient = \"#ffffff00\"\n  ): void {\n    const p1adj = this.vcs.translate(p1.addConstant(0.5, 0.5));\n    const p2adj = this.vcs.translate(p2.addConstant(0.5, 0.5));\n\n    this.context.fillStyle = fillStyle || \"#ff0000\";\n    this.context.fillRect(\n      p1adj.x,\n      p1adj.y,\n      p2adj.x - p1adj.x,\n      p2adj.y - p1adj.y\n    );\n\n    this.context.strokeStyle = strokeStyle || \"#ff0000\";\n    this.context.strokeRect(\n      p1adj.x,\n      p1adj.y,\n      p2adj.x - p1adj.x,\n      p2adj.y - p1adj.y\n    );\n  }\n\n  public drawRectangle(\n    p1: Vector2,\n    p2: Vector2,\n    fillStyle: string | CanvasPattern | CanvasGradient = \"#ffffff00\",\n    strokeStyle: string | CanvasPattern | CanvasGradient = \"#ffffff00\"\n  ): void {\n    const p1adj = this.vcs.translate(p1);\n    const p2adj = this.vcs.translate(p2);\n\n    this.context.fillStyle = fillStyle || \"#ff0000\";\n    this.context.fillRect(\n      p1adj.x,\n      p1adj.y,\n      p2adj.x - p1adj.x,\n      p2adj.y - p1adj.y\n    );\n\n    this.context.strokeStyle = strokeStyle || \"#ff0000\";\n    this.context.strokeRect(\n      p1adj.x,\n      p1adj.y,\n      p2adj.x - p1adj.x,\n      p2adj.y - p1adj.y\n    );\n  }\n\n  public line(\n    p1: Vector2,\n    p2: Vector2,\n    style?: string | CanvasPattern | CanvasGradient\n  ): void {\n    const p1adj = this.vcs.translate(p1);\n    const p2adj = this.vcs.translate(p2);\n    this.beginPath();\n    this.strokeStyle = style || \"#ff0000\";\n    this.context.lineTo(p1adj.x, p1adj.y);\n    this.context.lineTo(p2adj.x, p2adj.y);\n    this.stroke();\n  }\n\n  public beginPath(): void {\n    this.context.beginPath();\n  }\n\n  public set strokeStyle(style: string | CanvasPattern | CanvasGradient) {\n    this.context.strokeStyle = style;\n  }\n\n  public stroke(): void {\n    this.context.stroke();\n  }\n\n  private translate(vec: Vector2): void {\n    const target = this.vcs.translate(vec);\n    this.context.translate(target.x, target.y);\n  }\n\n  public clear(): void {\n    this.context.clearRect(\n      0,\n      0,\n      this.vcs.translateValueX(this.virtualSize.x),\n      this.vcs.translateValueY(this.virtualSize.y)\n    );\n  }\n\n  public getCoordinates(): VirtualCoordinateSystem {\n    return this.vcs;\n  }\n\n  public getOffset(): Vector2 {\n    const rect = this.canvas.getBoundingClientRect();\n    return new Vector2(rect.x, rect.y);\n  }\n\n  private resize(): void {\n    if (\n      this.parent.clientWidth / this.aspectRatio.x <\n      this.parent.clientHeight / this.aspectRatio.y\n    ) {\n      this.canvas.width = this.parent.clientWidth;\n      this.canvas.height =\n        (this.parent.clientWidth * this.aspectRatio.y) / this.aspectRatio.x;\n    } else {\n      this.canvas.width =\n        (this.parent.clientHeight * this.aspectRatio.x) / this.aspectRatio.y;\n      this.canvas.height = this.parent.clientHeight;\n    }\n\n    this.vcs = new VirtualCoordinateSystem(\n      this.canvas.width / this.virtualSize.x,\n      this.canvas.height / this.virtualSize.y\n    );\n  }\n}\n","import Vector2 from \"../geometry/Vector2\";\n\nexport class VirtualCoordinateSystem {\n  private scaleX: number;\n  private scaleY: number;\n\n  constructor(scaleX: number, scaleY: number) {\n    this.scaleX = scaleX;\n    this.scaleY = scaleY;\n    this.translate = this.translate.bind(this);\n    this.translateValueX = this.translateValueX.bind(this);\n    this.translateValueY = this.translateValueY.bind(this);\n  }\n\n  translate(v1: Vector2): Vector2 {\n    return new Vector2(v1.x * this.scaleX, v1.y * this.scaleY);\n  }\n\n  inverseTranslate(v1: Vector2): Vector2 {\n    return new Vector2(v1.x / this.scaleX, v1.y / this.scaleY);\n  }\n\n  translateValueX(p: number): number {\n    return p * this.scaleX;\n  }\n\n  translateValueY(p: number): number {\n    return p * this.scaleY;\n  }\n}\n\nexport interface CoordinateTranslatable {\n  translate(v1: Vector2): Vector2;\n  translateValueX(p: number): number;\n  translateValueY(p: number): number;\n}\n","import {\n  AbstractClickComponent,\n  AbstractClickEntity,\n} from \"../components/behavior/click/AbstractClick\";\nimport { ClickableComponent } from \"../components/behavior/click/Clickable\";\nimport { PositionComponent } from \"../components/data/Position\";\nimport { Component } from \"../ecs/Component\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\n\nexport class AbstractClickSystem extends BaseSystem {\n  protected onManagerAwake(): void {\n    this.listen(\"click\");\n  }\n\n  protected onEvent(_event: string, entity: Entity): void {\n    const targetEntity = entity as AbstractClickEntity;\n    const { abstractClick } = targetEntity.data;\n    abstractClick.action(entity, this.manager);\n  }\n\n  getBasisComponent(): Component {\n    return AbstractClickComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    set.add(ClickableComponent);\n    return set;\n  }\n}\n","import { PositionComponent } from \"../components/data/Position\";\nimport {\n  AccelerationComponent,\n  AccelerationEntity,\n} from \"../components/data/Acceleration\";\nimport { getDynamic } from \"../data/DynamicConstant\";\nimport { Component } from \"../ecs/Component\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport { VelocityComponent } from \"../components/data/Velocity\";\n\nexport class AccelerationSystem extends BaseSystem {\n  protected updateEntity(elapsedTime: number, entity: Entity): void {\n    const targetEntity = entity as AccelerationEntity;\n    const { velocity, acceleration } = targetEntity.data;\n    velocity.velocity = getDynamic(velocity.velocity).addScaled(\n      getDynamic(acceleration.acceleration),\n      elapsedTime\n    );\n  }\n\n  getBasisComponent(): Component {\n    return AccelerationComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    set.add(VelocityComponent);\n    return set;\n  }\n}\n","import { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport { Component } from \"../ecs/Component\";\nimport { PositionComponent } from \"../components/data/Position\";\nimport { RotationComponent } from \"../components/data/Rotation\";\nimport AnimatedSpriteComponent, {\n  AnimatedSpriteEntity,\n} from \"../components/rendering/AnimatedSprite\";\nimport { VirtualCanvas } from \"../rendering/VirtualCanvas\";\nimport { getDynamic } from \"../data/DynamicConstant\";\n\nexport class AnimatedSpriteRenderSystem extends BaseSystem {\n  private readonly virtualCanvas: VirtualCanvas;\n\n  constructor(virtualCanvas: VirtualCanvas) {\n    super();\n    this.virtualCanvas = virtualCanvas;\n  }\n\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as AnimatedSpriteEntity;\n    const { animatedSprite, rotation, position } = targetEntity.data;\n    animatedSprite.currentDuration += deltaTime;\n    while (\n      animatedSprite.currentDuration >\n      animatedSprite.frames[animatedSprite.frame]\n    ) {\n      animatedSprite.currentDuration -=\n        animatedSprite.frames[animatedSprite.frame];\n      animatedSprite.frame =\n        (animatedSprite.frame + 1) % animatedSprite.frames.length;\n    }\n    this.virtualCanvas.drawImageAnimated(\n      animatedSprite.source,\n      getDynamic(position.position),\n      getDynamic(rotation.rotation),\n      animatedSprite.size,\n      animatedSprite.frameSize,\n      animatedSprite.frame,\n      getDynamic(animatedSprite.opacity)\n    );\n  }\n\n  getBasisComponent(): Component | null {\n    return AnimatedSpriteComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    set.add(RotationComponent);\n    return set;\n  }\n}\n","import {\n  ClickComponentAddComponent,\n  ClickComponentAddEntity,\n} from \"../components/behavior/click/ClickComponentAdd\";\nimport { PositionComponent } from \"../components/data/Position\";\nimport { getDynamic } from \"../data/DynamicConstant\";\nimport { Component } from \"../ecs/Component\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\n\nexport class ClickComponentAddSystem extends BaseSystem {\n  protected onManagerAwake(): void {\n    this.listen(\"click\");\n  }\n\n  protected onEvent(_event: string, entity: Entity): void {\n    const { clickComponentAdd } = (entity as ClickComponentAddEntity).data;\n    this.manager.addComponent(\n      entity.id,\n      getDynamic(clickComponentAdd.component),\n      getDynamic(clickComponentAdd.data)\n    );\n  }\n\n  getBasisComponent(): Component {\n    return ClickComponentAddComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    return set;\n  }\n}\n","import { ClickableComponent } from \"../components/behavior/click/Clickable\";\nimport {\n  ClickComponentToggleMultipleComponent,\n  ClickComponentToggleMultipleEntity,\n} from \"../components/behavior/click/ClickComponentToggleMultiple\";\nimport { getDynamic } from \"../data/DynamicConstant\";\nimport { Component } from \"../ecs/Component\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\n\nexport class ClickComponentToggleMultipleSystem extends BaseSystem {\n  protected onManagerAwake(): void {\n    this.listen(\"click\");\n  }\n\n  protected onEvent(_event: string, entity: Entity): void {\n    const targetEntity = entity as ClickComponentToggleMultipleEntity;\n    const { clickComponentToggleMultiple } = targetEntity.data;\n    const components = getDynamic(clickComponentToggleMultiple.components);\n    const data = getDynamic(clickComponentToggleMultiple.data);\n    for (let compIdx = 0; compIdx < components.length; compIdx++) {\n      const comp = components[compIdx];\n      if (this.manager.hasComponent(targetEntity.id, comp)) {\n        this.manager.removeComponent(targetEntity.id, comp);\n      } else {\n        this.manager.addComponent(targetEntity.id, comp, data[compIdx]);\n      }\n    }\n  }\n\n  getBasisComponent(): Component {\n    return ClickComponentToggleMultipleComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(ClickableComponent);\n    return set;\n  }\n}\n","import { ClickableComponent } from \"../components/behavior/click/Clickable\";\nimport {\n  ClickComponentToggleComponent,\n  ClickComponentToggleEntity,\n} from \"../components/behavior/click/ClickComponentToggle\";\nimport { getDynamic } from \"../data/DynamicConstant\";\nimport { Component } from \"../ecs/Component\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\n\nexport class ClickComponentToggleSystem extends BaseSystem {\n  protected onManagerAwake(): void {\n    this.listen(\"click\");\n  }\n\n  protected onEvent(_event: string, entity: Entity): void {\n    const targetEntity = entity as ClickComponentToggleEntity;\n    const { clickComponentToggle } = targetEntity.data;\n    const cmp = getDynamic(clickComponentToggle.component);\n    if (this.manager.hasComponent(targetEntity.id, cmp)) {\n      this.manager.removeComponent(targetEntity.id, cmp);\n    } else {\n      this.manager.addComponent(\n        targetEntity.id,\n        cmp,\n        getDynamic(clickComponentToggle.data)\n      );\n    }\n  }\n\n  getBasisComponent(): Component {\n    return ClickComponentToggleComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(ClickableComponent);\n    return set;\n  }\n}\n","import { merge } from \"lodash\";\nimport { ClickableComponent } from \"../components/behavior/click/Clickable\";\nimport {\n  ClickDataMutateComponent,\n  ClickDataMutateEntity,\n} from \"../components/behavior/click/ClickDataMutate\";\nimport { getDynamic } from \"../data/DynamicConstant\";\nimport { Component } from \"../ecs/Component\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\n\nexport class ClickDataMutateSystem extends BaseSystem {\n  protected onManagerAwake(): void {\n    this.listen(\"click\");\n  }\n\n  onEvent(_event: string, entity: Entity): void {\n    const targetEntity = entity as ClickDataMutateEntity;\n    const { clickDataMutate } = targetEntity.data;\n    targetEntity.data = merge(\n      targetEntity.data,\n      getDynamic(clickDataMutate.data)\n    );\n  }\n\n  getBasisComponent(): Component {\n    return ClickDataMutateComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(ClickableComponent);\n    return set;\n  }\n}\n","import {\n  ClickableDisplayComponent,\n  ClickableDisplayEntity,\n} from \"../components/ui/ClickableDisplay\";\nimport { PositionComponent } from \"../components/data/Position\";\nimport { DynamicConstant, getDynamic } from \"../data/DynamicConstant\";\nimport { Component } from \"../ecs/Component\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport Vector2 from \"../geometry/Vector2\";\nimport { VirtualCanvas } from \"../rendering/VirtualCanvas\";\n\nexport class ClickableDisplaySystem extends BaseSystem {\n  private mouse: DynamicConstant<Vector2>;\n  virtualCanvas: VirtualCanvas;\n\n  constructor(mouse: DynamicConstant<Vector2>, virtualCanvas: VirtualCanvas) {\n    super();\n    this.mouse = mouse;\n    this.virtualCanvas = virtualCanvas;\n  }\n\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const mouse = getDynamic(this.mouse);\n    const targetEntity = entity as ClickableDisplayEntity;\n    const { position, clickable, clickableDisplay } = targetEntity.data;\n    const delta = getDynamic(clickable.delta);\n    const pos = getDynamic(position.position);\n    const northWest = pos.subtract(delta);\n    const southEast = pos.add(delta);\n    if (\n      mouse.x > northWest.x &&\n      mouse.y > northWest.y &&\n      mouse.x < southEast.x &&\n      mouse.y < southEast.y\n    ) {\n      this.virtualCanvas.drawRectangle(\n        northWest,\n        southEast,\n        getDynamic(clickableDisplay.backgroundHover)\n      );\n    } else {\n      this.virtualCanvas.drawRectangle(\n        northWest,\n        southEast,\n        getDynamic(clickableDisplay.backgroundHover)\n      );\n    }\n  }\n\n  getBasisComponent(): Component {\n    return ClickableDisplayComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    return set;\n  }\n}\n","import {\n  ClickableComponent,\n  ClickableEntity,\n} from \"../components/behavior/click/Clickable\";\nimport { PositionComponent } from \"../components/data/Position\";\nimport { BaseGameModel } from \"../data/BaseGameModel\";\nimport { DynamicConstant, getDynamic } from \"../data/DynamicConstant\";\nimport { Component } from \"../ecs/Component\";\nimport { BaseSystem } from \"../ecs/System\";\nimport { rectPointCollision, rectRectCollision } from \"../geometry/Collision\";\nimport Vector2 from \"../geometry/Vector2\";\n\nexport class ClickableSystem extends BaseSystem {\n  private mouse: DynamicConstant<Vector2>;\n  private runCheck: boolean;\n\n  constructor(mouse: DynamicConstant<Vector2>) {\n    super();\n    this.mouse = mouse;\n    this.runCheck = false;\n  }\n\n  public update(elapsedTime: number, model: BaseGameModel): void {\n    if (model.getMouseAction() === \"click\") {\n      const entities = this.entities as Map<number, ClickableEntity>;\n      let best = undefined as ClickableEntity;\n      let bestNW = undefined as Vector2;\n      let bestSE = undefined as Vector2;\n      const mouse = getDynamic(this.mouse);\n      for (const targetEntity of entities.values()) {\n        const { position, clickable } = targetEntity.data;\n        const mouseAdj = mouse.add(getDynamic(clickable.offset));\n        const [nw, se] = this.offsetDelta(\n          getDynamic(position.position),\n          getDynamic(clickable.delta)\n        );\n\n        // No need to keep on working if there's no collision.\n        if (!rectPointCollision(nw, se, mouseAdj)) {\n          continue;\n        }\n\n        // Best check.\n        if (best === undefined) {\n          best = targetEntity;\n          bestNW = nw;\n          bestSE = se;\n          continue;\n        }\n\n        // See if these two collide; we already know the first one is within click range.\n        if (rectRectCollision(nw, se, bestNW, bestSE)) {\n          if (targetEntity.id > best.id) {\n            best = targetEntity;\n          }\n        }\n      }\n      if (best !== undefined) {\n        this.manager.emitEvent(\"click\", best);\n      }\n    }\n  }\n\n  updateEntity(): void {\n    return;\n  }\n\n  offsetDelta(v1: Vector2, delta: Vector2): [Vector2, Vector2] {\n    return [v1.subtract(delta), v1.add(delta)];\n  }\n\n  getBasisComponent(): Component {\n    return ClickableComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    return set;\n  }\n}\n","import { PositionComponent } from \"../components/data/Position\";\nimport {\n  DraggableComponent,\n  DraggableEntity,\n} from \"../components/behavior/Draggable\";\nimport { Component } from \"../ecs/Component\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport Vector2 from \"../geometry/Vector2\";\nimport { getDynamic } from \"../data/DynamicConstant\";\n\nexport class DraggableSystem extends BaseSystem {\n  constructor(private source: () => Vector2) {\n    super();\n  }\n\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as DraggableEntity;\n    const { draggable, position } = targetEntity.data;\n    if (!draggable.dragging) {\n      return;\n    }\n    position.position = this.source().add(getDynamic(draggable.offset));\n  }\n\n  getBasisComponent(): Component {\n    return DraggableComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    return set;\n  }\n}\n","import {\n  FootprintComponent,\n  FootprintEntity,\n} from \"../components/data/Footprint\";\nimport { PositionComponent } from \"../components/data/Position\";\nimport { getDynamic } from \"../data/DynamicConstant\";\nimport { GameMap } from \"../data/GameMap\";\nimport { Basis } from \"../ecs/decorators/Basis\";\nimport { Required } from \"../ecs/decorators/Required\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport Vector2 from \"../geometry/Vector2\";\n\n@Basis(FootprintComponent)\n@Required([PositionComponent])\nexport class FootprintSystem extends BaseSystem {\n  private map: GameMap;\n\n  constructor(map: GameMap) {\n    super();\n    this.map = map;\n  }\n\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as FootprintEntity;\n    const { position, footprint } = targetEntity.data;\n    if (!footprint.tracked) {\n      footprint.tracked = true;\n      const pos = getDynamic(position.position).floor();\n\n      const nwOffset = Math.floor((footprint.size - 1) / 2);\n      const northWest = new Vector2(pos.x - nwOffset, pos.y - nwOffset);\n      const swOffset = Math.floor(footprint.size / 2);\n      const southEast = new Vector2(pos.x + swOffset, pos.y + swOffset);\n      for (let x = northWest.x; x <= southEast.x; x++) {\n        for (let y = northWest.y; y <= southEast.y; y++) {\n          this.map.createEntityLink(new Vector2(x, y), entity);\n        }\n      }\n    }\n  }\n}\n","import { HealthDisplayComponent } from \"../components/marker/HealthDisplay\";\nimport { HealthComponent, HealthEntity } from \"../components/data/Health\";\nimport { PositionComponent, PositionEntity } from \"../components/data/Position\";\nimport { getDynamic } from \"../data/DynamicConstant\";\nimport { Basis } from \"../ecs/decorators/Basis\";\nimport { Required } from \"../ecs/decorators/Required\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport { VirtualCanvas } from \"../rendering/VirtualCanvas\";\n\n@Basis(HealthDisplayComponent)\n@Required([PositionComponent, HealthComponent])\nexport class HealthRenderSystem extends BaseSystem {\n  constructor(private virtualCanvas: VirtualCanvas) {\n    super();\n  }\n\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as HealthEntity & PositionEntity;\n\n    const { position, health } = targetEntity.data;\n    const pos = getDynamic(position.position);\n    const northWest = pos.addConstant(-0.5, -0.5);\n    const southEast = pos.addConstant(0.5, -0.4);\n    const proportion = health.health / health.maxHealth;\n    const southEast2 = pos.addConstant(proportion - 0.5, -0.4);\n    this.virtualCanvas.drawWorldRectangle(\n      northWest,\n      southEast,\n      \"#ff000099\",\n      \"#00000099\"\n    );\n    this.virtualCanvas.drawWorldRectangle(\n      northWest,\n      southEast2,\n      \"#00ff0099\",\n      \"#00000099\"\n    );\n  }\n}\n","import { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport { Basis } from \"../ecs/decorators/Basis\";\nimport { HealthComponent, HealthEntity } from \"../components/data/Health\";\n\n@Basis(HealthComponent)\nexport class HealthSystem extends BaseSystem {\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as HealthEntity;\n    const { health } = targetEntity.data;\n\n    if (health.health <= 0) {\n      this.manager.emitEvent(\"health:die\", targetEntity, {\n        ...targetEntity.data,\n      });\n      this.manager.removeEntity(targetEntity);\n    }\n  }\n}\n","import { LifetimeComponent } from \"../components/behavior/Lifetime\";\nimport LifetimeRenderComponent, {\n  LifetimeRenderEntity,\n} from \"../components/rendering/LifetimeRender\";\nimport SpriteComponent from \"../components/rendering/Sprite\";\nimport { Component } from \"../ecs/Component\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\n\nexport class LifetimeRenderSystem extends BaseSystem {\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as LifetimeRenderEntity;\n    const { lifetime, sprite } = targetEntity.data;\n\n    sprite.opacity = (lifetime.lifetime - lifetime.elapsed) / lifetime.lifetime;\n  }\n\n  getBasisComponent(): Component {\n    return LifetimeRenderComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(SpriteComponent);\n    set.add(LifetimeComponent);\n    return set;\n  }\n}\n","import {\n  LifetimeComponent,\n  LifetimeEntity,\n} from \"../components/behavior/Lifetime\";\nimport { Component } from \"../ecs/Component\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\n\nexport class LifetimeSystem extends BaseSystem {\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as LifetimeEntity;\n    const { lifetime } = targetEntity.data;\n    lifetime.elapsed += deltaTime;\n    if (lifetime.elapsed >= lifetime.lifetime) {\n      this.manager.removeEntity(entity.id);\n    }\n  }\n\n  getBasisComponent(): Component {\n    return LifetimeComponent;\n  }\n}\n","import { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport LowSpriteComponent, {\n  LowSpriteEntity,\n} from \"../components/rendering/LowSprite\";\nimport { PositionComponent } from \"../components/data/Position\";\nimport { RotationComponent } from \"../components/data/Rotation\";\nimport { VirtualCanvas } from \"../rendering/VirtualCanvas\";\nimport { getDynamic } from \"../data/DynamicConstant\";\nimport { Basis } from \"../ecs/decorators/Basis\";\nimport { Required } from \"../ecs/decorators/Required\";\n\n@Basis(LowSpriteComponent)\n@Required([PositionComponent, RotationComponent])\nexport class LowSpriteRenderSystem extends BaseSystem {\n  private readonly virtualCanvas: VirtualCanvas;\n\n  constructor(virtualCanvas: VirtualCanvas) {\n    super();\n    this.virtualCanvas = virtualCanvas;\n  }\n\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const spriteEntity = entity as LowSpriteEntity;\n    const { lowSprite, position } = spriteEntity.data;\n    this.virtualCanvas.drawImage(\n      lowSprite.source,\n      getDynamic(position.position).add(getDynamic(lowSprite.offset)),\n      lowSprite.size\n    );\n  }\n}\n","import { PositionComponent, PositionEntity } from \"../components/data/Position\";\nimport { MagnetComponent, MagnetEntity } from \"../components/behavior/Magnet\";\nimport { getDynamic } from \"../data/DynamicConstant\";\nimport { Component } from \"../ecs/Component\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport MagnetAttractedComponent from \"../components/marker/MagnetAttracted\";\nimport { circlePointCollision } from \"../geometry/Collision\";\nimport Circle from \"../geometry/Circle\";\n\nexport class MagnetSystem extends BaseSystem {\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as MagnetEntity;\n    const { magnet, position } = targetEntity.data;\n    const circle = new Circle(\n      getDynamic(position.position),\n      getDynamic(magnet.radius)\n    );\n    const entities = this.manager.getEntitiesWithComponent(\n      MagnetAttractedComponent\n    ) as Array<PositionEntity>;\n    for (let i = 0; i < entities.length; i++) {\n      const entity = entities[i];\n      if (\n        circlePointCollision(circle, getDynamic(entity.data.position.position))\n      ) {\n        entity.data.position.position = targetEntity.data.position.position;\n        magnet.onSnap(targetEntity, entity, this.manager);\n        this.manager.emitEvent(\"magnet:snap\", entity);\n        this.manager.emitEvent(\"magnet:pull\", entity);\n      }\n    }\n  }\n\n  getBasisComponent(): Component {\n    return MagnetComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    return set;\n  }\n}\n","import {\n  PathFollowerComponent,\n  PathFollowerEntity,\n} from \"../components/behavior/PathFollower\";\nimport { PositionComponent } from \"../components/data/Position\";\nimport { VelocityTargetComponent } from \"../components/behavior/PositionTarget\";\nimport { RotationTargetComponent } from \"../components/behavior/RotationTarget\";\nimport { getDynamic } from \"../data/DynamicConstant\";\nimport { Component } from \"../ecs/Component\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport Vector2 from \"../geometry/Vector2\";\n\nexport class PathFollowerSystem extends BaseSystem {\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as PathFollowerEntity;\n    const {\n      position,\n      velocityTarget,\n      rotationTarget,\n      pathFollower,\n    } = targetEntity.data;\n    const pos = getDynamic(position.position);\n    const target = getDynamic(velocityTarget.target);\n    const path = getDynamic(pathFollower.path);\n    if (pathFollower.invalidated) {\n      if (path.length === 0) {\n        velocityTarget.target = pos;\n        pathFollower.point = 0;\n      }\n      let md = Vector2.squareDistance(pos, getDynamic(path[0]));\n      let idx = 0;\n      for (let i = 1; i < path.length; i++) {\n        const el = getDynamic(path[i]);\n        const dist = Vector2.distance(pos, el);\n        if (dist < md) {\n          md = dist;\n          idx = i;\n        }\n      }\n      pathFollower.point = idx + 1;\n      pathFollower.invalidated = false;\n    }\n\n    if (\n      this.checkRelativeThreshold(\n        target,\n        getDynamic(position.position),\n        velocityTarget.strictness\n      ) &&\n      pathFollower.point < path.length\n    ) {\n      pathFollower.point++;\n    }\n    if (pathFollower.point < path.length) {\n      const pt = path[pathFollower.point];\n      velocityTarget.target = pt;\n      rotationTarget.target = pt;\n    } else {\n      this.manager.emitEvent(\"pathFollower:done\", targetEntity);\n    }\n  }\n\n  private checkRelativeThreshold(\n    a: Vector2,\n    b: Vector2,\n    threshold: number\n  ): boolean {\n    return Math.abs(a.x - b.x) < threshold && Math.abs(a.y - b.y) < threshold;\n  }\n\n  getBasisComponent(): Component {\n    return PathFollowerComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    set.add(RotationTargetComponent);\n    set.add(VelocityTargetComponent);\n    return set;\n  }\n}\n","import { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport { Component } from \"../ecs/Component\";\nimport { PositionComponent, PositionEntity } from \"../components/data/Position\";\nimport PositionDebugComponent from \"../components/rendering/PositionDebug\";\nimport { VirtualCanvas } from \"../rendering/VirtualCanvas\";\nimport { getDynamic } from \"../data/DynamicConstant\";\n\nexport class PositionDebugSystem extends BaseSystem {\n  private readonly virtualCanvas: VirtualCanvas;\n\n  constructor(virtualCanvas: VirtualCanvas) {\n    super();\n    this.virtualCanvas = virtualCanvas;\n  }\n\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as PositionEntity & PositionEntity;\n    const { position } = targetEntity.data.position;\n    const pos = getDynamic(position);\n    this.virtualCanvas.line(\n      pos.addConstant(-1, 0),\n      pos.addConstant(1, 0),\n      \"#ff0000\"\n    );\n    this.virtualCanvas.line(\n      pos.addConstant(0, -1),\n      pos.addConstant(0, 1),\n      \"#ff0000\"\n    );\n  }\n\n  getBasisComponent(): Component | null {\n    return PositionDebugComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    return set;\n  }\n}\n","import { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport { Component } from \"../ecs/Component\";\nimport { PositionComponent } from \"../components/data/Position\";\nimport { VirtualCanvas } from \"../rendering/VirtualCanvas\";\nimport {\n  RangeDisplayComponent,\n  RangeDisplayEntity,\n} from \"../components/rendering/RangeDisplay\";\nimport { RangeComponent } from \"../components/data/Range\";\nimport { getDynamic } from \"../data/DynamicConstant\";\n\nexport class RangeDisplaySystem extends BaseSystem {\n  private readonly virtualCanvas: VirtualCanvas;\n\n  constructor(virtualCanvas: VirtualCanvas) {\n    super();\n    this.virtualCanvas = virtualCanvas;\n  }\n\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as RangeDisplayEntity;\n    const { position } = targetEntity.data.position;\n    const { range } = targetEntity.data.range;\n    const {\n      strokeStyle,\n      fillStyle,\n      lineWidth,\n      offset,\n    } = targetEntity.data.rangeDisplay;\n    this.virtualCanvas.drawCircle(\n      getDynamic(position).add(getDynamic(offset)),\n      range,\n      fillStyle,\n      strokeStyle,\n      lineWidth >= 1 ? lineWidth : undefined\n    );\n  }\n\n  getBasisComponent(): Component | null {\n    return RangeDisplayComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    set.add(RangeComponent);\n    return set;\n  }\n}\n","import { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport { Component } from \"../ecs/Component\";\nimport { PositionComponent } from \"../components/data/Position\";\nimport { VirtualCanvas } from \"../rendering/VirtualCanvas\";\nimport { getDynamic } from \"../data/DynamicConstant\";\nimport { RegionComponent, RegionEntity } from \"../components/ui/RegionRender\";\n\nexport class RegionRenderSystem extends BaseSystem {\n  private readonly virtualCanvas: VirtualCanvas;\n\n  constructor(virtualCanvas: VirtualCanvas) {\n    super();\n    this.virtualCanvas = virtualCanvas;\n  }\n\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as RegionEntity;\n    const { position } = targetEntity.data.position;\n    const { region } = targetEntity.data;\n    const delta = getDynamic(region.delta);\n    const fillColor = getDynamic(region.fillColor);\n    const strokeColor = getDynamic(region.strokeColor);\n    const pos = getDynamic(position);\n    this.virtualCanvas.drawRectangle(\n      pos.subtract(delta),\n      pos.add(delta),\n      fillColor,\n      strokeColor\n    );\n  }\n\n  getBasisComponent(): Component | null {\n    return RegionComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    return set;\n  }\n}\n","import { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport { Component } from \"../ecs/Component\";\nimport { PositionComponent, PositionEntity } from \"../components/data/Position\";\nimport { RotationComponent, RotationEntity } from \"../components/data/Rotation\";\nimport RotationDebugComponent from \"../components/rendering/RotationDebug\";\nimport Vector2 from \"../geometry/Vector2\";\nimport { VirtualCanvas } from \"../rendering/VirtualCanvas\";\nimport { getDynamic } from \"../data/DynamicConstant\";\n\nexport class RotationDebugSystem extends BaseSystem {\n  private readonly virtualCanvas: VirtualCanvas;\n\n  constructor(virtualCanvas: VirtualCanvas) {\n    super();\n    this.virtualCanvas = virtualCanvas;\n  }\n\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as RotationEntity & PositionEntity;\n    const { rotation } = targetEntity.data.rotation;\n    const { position } = targetEntity.data.position;\n    const rotVec = Vector2.fromAngle(getDynamic(rotation)).scale(2);\n    const vecTarget = getDynamic(position).add(rotVec);\n    this.virtualCanvas.line(getDynamic(position), vecTarget, \"#ff0000\");\n  }\n\n  getBasisComponent(): Component | null {\n    return RotationDebugComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    set.add(RotationComponent);\n    return set;\n  }\n}\n","import { PositionComponent } from \"../components/data/Position\";\nimport { RotationComponent } from \"../components/data/Rotation\";\nimport {\n  RotationTargetComponent,\n  RotationTargetEntity,\n} from \"../components/behavior/RotationTarget\";\nimport { getDynamic } from \"../data/DynamicConstant\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport Vector2 from \"../geometry/Vector2\";\nimport { Basis } from \"../ecs/decorators/Basis\";\nimport { Required } from \"../ecs/decorators/Required\";\n\n@Basis(RotationTargetComponent)\n@Required([RotationComponent, PositionComponent])\nexport class RotationTargetSystem extends BaseSystem {\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as RotationTargetEntity;\n    const position = targetEntity.data.position;\n    const rotationTarget = targetEntity.data.rotationTarget;\n    const rotation = targetEntity.data.rotation;\n\n    if (\n      rotationTarget === undefined ||\n      getDynamic(rotationTarget.target) === undefined\n    ) {\n      return;\n    }\n\n    // Getting some important values\n    const relativeTarget = getDynamic(rotationTarget.target).subtract(\n      getDynamic(position.position)\n    );\n    const currentRotation = ((getDynamic(rotation.rotation) % 360) + 360) % 360;\n    const currentRotationVector = Vector2.fromAngle(currentRotation);\n    const targetRotation = (relativeTarget.toAngle() + 360) % 360;\n    rotationTarget.targetRotation = targetRotation;\n\n    // Figure out which direction we're rotating in, and how much we need to rotate by.\n    const rotationDirection = Math.sign(\n      currentRotationVector.determinant(relativeTarget)\n    );\n    const desiredRotation = Math.abs(currentRotation - targetRotation);\n    const deltaRotation = Math.min(\n      rotationTarget.turnRate * deltaTime,\n      desiredRotation\n    );\n    rotation.rotation =\n      (((getDynamic(rotation.rotation) + deltaRotation * rotationDirection) %\n        360) +\n        360) %\n      360;\n\n    if (Math.abs(desiredRotation) < rotationTarget.strictness) {\n      this.manager.emitEvent(\"rotationTarget:reached\", targetEntity);\n    }\n  }\n\n  private checkRelativeThreshold(\n    a: number,\n    b: number,\n    threshold: number\n  ): boolean {\n    return (\n      Math.abs(a - b) < threshold ||\n      Math.abs(a + 360 - b) < threshold ||\n      Math.abs(a - (b + 360)) < threshold\n    );\n  }\n}\n","import { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport { Component } from \"../ecs/Component\";\nimport { PositionComponent } from \"../components/data/Position\";\nimport { VirtualCanvas } from \"../rendering/VirtualCanvas\";\nimport { getDynamic } from \"../data/DynamicConstant\";\nimport {\n  SelectionDisplayComponent,\n  SelectionDisplayEntity,\n} from \"../components/rendering/SelectionDisplay\";\n\nexport class SelectionSystem extends BaseSystem {\n  private readonly virtualCanvas: VirtualCanvas;\n\n  constructor(virtualCanvas: VirtualCanvas) {\n    super();\n    this.virtualCanvas = virtualCanvas;\n  }\n\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as SelectionDisplayEntity;\n    const { position, selectionDisplay } = targetEntity.data;\n    this.virtualCanvas.drawCircle(\n      getDynamic(position.position),\n      getDynamic(selectionDisplay.radius),\n      selectionDisplay.fillStyle,\n      selectionDisplay.strokeStyle,\n      selectionDisplay.lineWidth\n    );\n  }\n\n  getBasisComponent(): Component | null {\n    return SelectionDisplayComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    return set;\n  }\n}\n","import { PositionComponent } from \"../components/data/Position\";\nimport SpawnerComponent, {\n  SpawnerEntity,\n} from \"../components/behavior/Spawner\";\nimport { Component } from \"../ecs/Component\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\n\nexport class SpawnerSystem extends BaseSystem {\n  protected updateEntity(elapsedTime: number, entity: Entity): void {\n    const targetEntity = entity as SpawnerEntity;\n    const { spawner } = targetEntity.data;\n    while (this.checkInterval(elapsedTime, spawner)) {\n      for (let spawn = 0; spawn < spawner.count; spawn++) {\n        if (spawner.limit < 0 || spawner.total < spawner.limit) {\n          spawner.total++;\n          spawner.producer(targetEntity, this.manager);\n        }\n      }\n    }\n  }\n\n  getBasisComponent(): Component {\n    return SpawnerComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    return set;\n  }\n}\n","import { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport SpriteComponent, { SpriteEntity } from \"../components/rendering/Sprite\";\nimport { PositionComponent } from \"../components/data/Position\";\nimport { RotationComponent } from \"../components/data/Rotation\";\nimport { VirtualCanvas } from \"../rendering/VirtualCanvas\";\nimport { getDynamic } from \"../data/DynamicConstant\";\nimport { Basis } from \"../ecs/decorators/Basis\";\nimport { Required } from \"../ecs/decorators/Required\";\n\n@Basis(SpriteComponent)\n@Required([PositionComponent, RotationComponent])\nexport class SpriteRenderSystem extends BaseSystem {\n  private readonly virtualCanvas: VirtualCanvas;\n\n  constructor(virtualCanvas: VirtualCanvas) {\n    super();\n    this.virtualCanvas = virtualCanvas;\n  }\n\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const spriteEntity = entity as SpriteEntity;\n    const { sprite, rotation, position } = spriteEntity.data;\n    this.virtualCanvas.drawImage(\n      sprite.source,\n      getDynamic(position.position).add(getDynamic(sprite.offset)),\n      sprite.size,\n      getDynamic(rotation.rotation) + getDynamic(sprite.rotationOffset),\n      getDynamic(sprite.opacity)\n    );\n  }\n}\n","import { StackComponent, StackEntity } from \"../components/behavior/Stack\";\nimport { PositionComponent } from \"../components/data/Position\";\nimport { getDynamic } from \"../data/DynamicConstant\";\nimport { Component } from \"../ecs/Component\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\n\nexport class StackSystem extends BaseSystem {\n  protected onManagerAwake(): void {\n    this.listen(\"stack:attach\", false);\n    this.listen(\"stack:detach\");\n    this.listen(\"stack:swap\");\n  }\n\n  protected onEvent(\n    event: string,\n    entity: Entity,\n    extra?: Record<string, unknown>\n  ): void {\n    if (event === \"stack:attach\") {\n      this.handleAttach(entity, extra);\n    }\n    if (event === \"stack:detach\") {\n      this.handleDetach(entity);\n    }\n    if (event === \"stack:swap\") {\n      this.handleSwap(entity);\n    }\n  }\n\n  private handleAttach(entity: Entity, extra?: Record<string, unknown>): void {\n    const indexOffset = (extra[\"indexOffset\"] as number) || 0;\n    let parent = this.manager.getEntity(\n      extra[\"parent\"] as number\n    ) as StackEntity;\n    const originalParent = parent;\n    if (parent === undefined || parent === null) {\n      return;\n    }\n    // Find lowest.\n    while (parent !== null && parent.data.stack.child !== null) {\n      parent = parent.data.stack.child as StackEntity;\n    }\n    // Allow offset.\n    if (parent !== null) {\n      for (let i = 0; i < indexOffset; i++) {\n        parent = parent.data.stack.parent as StackEntity;\n      }\n    }\n\n    if (parent === null) {\n      if (originalParent !== null) {\n        this.manager.emitEvent(\"stack:attach\", entity, {\n          parent: originalParent,\n        });\n      }\n      return;\n    }\n\n    const { position: parentPosition, stack: parentStack } = parent.data;\n    if (!(\"stack\" in entity.data)) {\n      this.manager.addComponent(entity, StackComponent, {\n        offset: parentStack.offset,\n        index: parentStack.index + 1,\n      });\n    }\n    const targetEntity = entity as StackEntity;\n    const { position, stack } = targetEntity.data;\n    position.position = getDynamic(parentPosition.position).add(\n      getDynamic(parentStack.offset)\n    );\n    stack.parent = parent;\n    this.manager.emitEvent(\"stack:attached\", entity, { parent });\n  }\n\n  private handleSwap(entity: Entity): void {\n    const targetEntity = entity as StackEntity;\n    const { stack } = targetEntity.data;\n    const parent = stack.parent;\n    if (parent === null) {\n      return;\n    }\n    const { stack: parentStack } = parent.data;\n    stack.parent = parent.data.stack.parent;\n    parentStack.child = stack.child;\n    stack.child = parent;\n    stack.index--;\n    parentStack.index++;\n    parentStack.parent = targetEntity;\n    if (stack.parent !== null) {\n      stack.parent.data.stack.child = targetEntity;\n    }\n    if (parentStack.child !== null) {\n      parentStack.child.data.stack.parent = parent;\n    }\n  }\n\n  private handleDetach(entity: Entity): void {\n    if (!(\"stack\" in entity.data)) {\n      return;\n    }\n    const targetEntity = entity as StackEntity;\n    const { stack } = targetEntity.data;\n    if (stack.parent === null) {\n      return;\n    }\n    const oldParent = stack.parent;\n    stack.parent = null;\n    stack.index = 0;\n    oldParent.data.stack.child = null;\n    this.manager.emitEvent(\"stack:detached\", entity, { oldParent });\n  }\n\n  public updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as StackEntity;\n    const { position, stack } = targetEntity.data;\n    if (stack.parent === null) {\n      return;\n    }\n    const { position: parentPosition } = stack.parent.data;\n    position.position = getDynamic(parentPosition.position).add(\n      getDynamic(stack.offset)\n    );\n  }\n\n  getBasisComponent(): Component {\n    return StackComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    return set;\n  }\n}\n","import { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport TextRenderComponent, {\n  TextRenderEntity,\n} from \"../components/ui/TextRender\";\nimport { Component } from \"../ecs/Component\";\nimport { PositionComponent } from \"../components/data/Position\";\nimport { VirtualCanvas } from \"../rendering/VirtualCanvas\";\nimport { getDynamic } from \"../data/DynamicConstant\";\n\nexport class TextRenderSystem extends BaseSystem {\n  private readonly virtualCanvas: VirtualCanvas;\n\n  constructor(virtualCanvas: VirtualCanvas) {\n    super();\n    this.virtualCanvas = virtualCanvas;\n  }\n\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as TextRenderEntity;\n    const { textRender, position } = targetEntity.data;\n    this.virtualCanvas.drawText(\n      getDynamic(textRender.text),\n      getDynamic(position.position),\n      textRender.style,\n      textRender.size,\n      textRender.font,\n      textRender.align\n    );\n  }\n\n  getBasisComponent(): Component | null {\n    return TextRenderComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    return set;\n  }\n}\n","import { PositionComponent } from \"../components/data/Position\";\nimport { VelocityComponent, VelocityEntity } from \"../components/data/Velocity\";\nimport { getDynamic } from \"../data/DynamicConstant\";\nimport { Component } from \"../ecs/Component\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\n\nexport class VelocitySystem extends BaseSystem {\n  protected updateEntity(elapsedTime: number, entity: Entity): void {\n    const targetEntity = entity as VelocityEntity;\n    const { position, velocity } = targetEntity.data;\n    position.position = getDynamic(position.position).addScaled(\n      getDynamic(velocity.velocity),\n      elapsedTime\n    );\n  }\n\n  getBasisComponent(): Component {\n    return VelocityComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    return set;\n  }\n}\n","import { PositionComponent } from \"../components/data/Position\";\nimport {\n  VelocityTargetComponent,\n  VelocityTargetEntity,\n} from \"../components/behavior/PositionTarget\";\nimport { VelocityComponent } from \"../components/data/Velocity\";\nimport { getDynamic } from \"../data/DynamicConstant\";\nimport { Component } from \"../ecs/Component\";\nimport { Entity } from \"../ecs/Entity\";\nimport { BaseSystem } from \"../ecs/System\";\nimport Vector2 from \"../geometry/Vector2\";\n\nexport class VelocityTargetSystem extends BaseSystem {\n  protected updateEntity(deltaTime: number, entity: Entity): void {\n    const targetEntity = entity as VelocityTargetEntity;\n    const { position, velocity, velocityTarget } = targetEntity.data;\n    const target = getDynamic(velocityTarget.target);\n\n    if (target === undefined) {\n      return;\n    }\n\n    const relativePosition = target.subtract(getDynamic(position.position));\n    const direction = relativePosition.normalize();\n    const perSecond = direction.normalize().scale(velocityTarget.velocity);\n\n    if (\n      this.checkRelativeThreshold(\n        target,\n        getDynamic(position.position),\n        perSecond.magnitude() * deltaTime\n      )\n    ) {\n      this.manager.emitEvent(\"velocityTarget:reached\", targetEntity);\n      position.position = target;\n      velocity.velocity = Vector2.ZERO;\n      return;\n    }\n\n    if (\n      this.checkRelativeThreshold(\n        target,\n        getDynamic(position.position),\n        velocityTarget.strictness\n      )\n    ) {\n      velocity.velocity = Vector2.ZERO;\n    } else {\n      velocity.velocity = perSecond;\n    }\n  }\n\n  private checkRelativeThreshold(\n    a: Vector2,\n    b: Vector2,\n    threshold: number\n  ): boolean {\n    return Math.abs(a.x - b.x) < threshold && Math.abs(a.y - b.y) < threshold;\n  }\n\n  getBasisComponent(): Component {\n    return VelocityTargetComponent;\n  }\n\n  getRequiredComponents(): Set<Component> {\n    const set = new Set<Component>();\n    set.add(PositionComponent);\n    set.add(VelocityComponent);\n    return set;\n  }\n}\n"],"sourceRoot":""}